Search.setIndex({"docnames": ["acknowledgements", "api", "api/compas_model.elements", "api/compas_model.model", "api/generated/compas_model.elements.Beam", "api/generated/compas_model.elements.Beam.ToString", "api/generated/compas_model.elements.Beam.compute_aabb", "api/generated/compas_model.elements.Beam.compute_collision_mesh", "api/generated/compas_model.elements.Beam.compute_face_polygons", "api/generated/compas_model.elements.Beam.compute_obb", "api/generated/compas_model.elements.Beam.copy", "api/generated/compas_model.elements.Beam.from_json", "api/generated/compas_model.elements.Beam.from_jsonstring", "api/generated/compas_model.elements.Beam.from_line", "api/generated/compas_model.elements.Beam.sha256", "api/generated/compas_model.elements.Beam.to_json", "api/generated/compas_model.elements.Beam.to_jsonstring", "api/generated/compas_model.elements.Beam.transform", "api/generated/compas_model.elements.Beam.transformed", "api/generated/compas_model.elements.Beam.validate_data", "api/generated/compas_model.elements.Block", "api/generated/compas_model.elements.Block.ToString", "api/generated/compas_model.elements.Block.compute_aabb", "api/generated/compas_model.elements.Block.compute_collision_mesh", "api/generated/compas_model.elements.Block.compute_obb", "api/generated/compas_model.elements.Block.copy", "api/generated/compas_model.elements.Block.from_json", "api/generated/compas_model.elements.Block.from_jsonstring", "api/generated/compas_model.elements.Block.sha256", "api/generated/compas_model.elements.Block.to_json", "api/generated/compas_model.elements.Block.to_jsonstring", "api/generated/compas_model.elements.Block.transform", "api/generated/compas_model.elements.Block.transformed", "api/generated/compas_model.elements.Block.validate_data", "api/generated/compas_model.elements.Element", "api/generated/compas_model.elements.Element.ToString", "api/generated/compas_model.elements.Element.compute_aabb", "api/generated/compas_model.elements.Element.compute_collision_mesh", "api/generated/compas_model.elements.Element.compute_obb", "api/generated/compas_model.elements.Element.copy", "api/generated/compas_model.elements.Element.from_json", "api/generated/compas_model.elements.Element.from_jsonstring", "api/generated/compas_model.elements.Element.sha256", "api/generated/compas_model.elements.Element.to_json", "api/generated/compas_model.elements.Element.to_jsonstring", "api/generated/compas_model.elements.Element.transform", "api/generated/compas_model.elements.Element.transformed", "api/generated/compas_model.elements.Element.validate_data", "api/generated/compas_model.elements.Interface", "api/generated/compas_model.elements.Interface.ToString", "api/generated/compas_model.elements.Interface.compute_aabb", "api/generated/compas_model.elements.Interface.compute_collision_mesh", "api/generated/compas_model.elements.Interface.compute_obb", "api/generated/compas_model.elements.Interface.copy", "api/generated/compas_model.elements.Interface.from_json", "api/generated/compas_model.elements.Interface.from_jsonstring", "api/generated/compas_model.elements.Interface.sha256", "api/generated/compas_model.elements.Interface.to_json", "api/generated/compas_model.elements.Interface.to_jsonstring", "api/generated/compas_model.elements.Interface.transform", "api/generated/compas_model.elements.Interface.transformed", "api/generated/compas_model.elements.Interface.validate_data", "api/generated/compas_model.elements.Plate", "api/generated/compas_model.elements.Plate.ToString", "api/generated/compas_model.elements.Plate.compute_aabb", "api/generated/compas_model.elements.Plate.compute_collision_mesh", "api/generated/compas_model.elements.Plate.compute_loft", "api/generated/compas_model.elements.Plate.compute_obb", "api/generated/compas_model.elements.Plate.copy", "api/generated/compas_model.elements.Plate.from_json", "api/generated/compas_model.elements.Plate.from_jsonstring", "api/generated/compas_model.elements.Plate.from_two_polygons", "api/generated/compas_model.elements.Plate.get_average_frame", "api/generated/compas_model.elements.Plate.mesh_from_loft", "api/generated/compas_model.elements.Plate.sha256", "api/generated/compas_model.elements.Plate.to_json", "api/generated/compas_model.elements.Plate.to_jsonstring", "api/generated/compas_model.elements.Plate.transform", "api/generated/compas_model.elements.Plate.transformed", "api/generated/compas_model.elements.Plate.validate_data", "api/generated/compas_model.model.ElementNode", "api/generated/compas_model.model.ElementNode.ToString", "api/generated/compas_model.model.ElementNode.add", "api/generated/compas_model.model.ElementNode.copy", "api/generated/compas_model.model.ElementNode.from_json", "api/generated/compas_model.model.ElementNode.from_jsonstring", "api/generated/compas_model.model.ElementNode.remove", "api/generated/compas_model.model.ElementNode.sha256", "api/generated/compas_model.model.ElementNode.to_json", "api/generated/compas_model.model.ElementNode.to_jsonstring", "api/generated/compas_model.model.ElementNode.traverse", "api/generated/compas_model.model.ElementNode.validate_data", "api/generated/compas_model.model.ElementTree", "api/generated/compas_model.model.ElementTree.ToString", "api/generated/compas_model.model.ElementTree.add", "api/generated/compas_model.model.ElementTree.add_element", "api/generated/compas_model.model.ElementTree.add_group", "api/generated/compas_model.model.ElementTree.copy", "api/generated/compas_model.model.ElementTree.from_json", "api/generated/compas_model.model.ElementTree.from_jsonstring", "api/generated/compas_model.model.ElementTree.get_node_by_name", "api/generated/compas_model.model.ElementTree.get_nodes_by_name", "api/generated/compas_model.model.ElementTree.print", "api/generated/compas_model.model.ElementTree.print_hierarchy", "api/generated/compas_model.model.ElementTree.remove", "api/generated/compas_model.model.ElementTree.sha256", "api/generated/compas_model.model.ElementTree.to_json", "api/generated/compas_model.model.ElementTree.to_jsonstring", "api/generated/compas_model.model.ElementTree.transform", "api/generated/compas_model.model.ElementTree.transform_numpy", "api/generated/compas_model.model.ElementTree.transformed", "api/generated/compas_model.model.ElementTree.transformed_numpy", "api/generated/compas_model.model.ElementTree.traverse", "api/generated/compas_model.model.ElementTree.validate_data", "api/generated/compas_model.model.GroupNode", "api/generated/compas_model.model.GroupNode.ToString", "api/generated/compas_model.model.GroupNode.add", "api/generated/compas_model.model.GroupNode.add_element", "api/generated/compas_model.model.GroupNode.add_group", "api/generated/compas_model.model.GroupNode.copy", "api/generated/compas_model.model.GroupNode.from_json", "api/generated/compas_model.model.GroupNode.from_jsonstring", "api/generated/compas_model.model.GroupNode.remove", "api/generated/compas_model.model.GroupNode.sha256", "api/generated/compas_model.model.GroupNode.to_json", "api/generated/compas_model.model.GroupNode.to_jsonstring", "api/generated/compas_model.model.GroupNode.traverse", "api/generated/compas_model.model.GroupNode.validate_data", "api/generated/compas_model.model.Model", "api/generated/compas_model.model.Model.ToString", "api/generated/compas_model.model.Model.add_element", "api/generated/compas_model.model.Model.add_elements", "api/generated/compas_model.model.Model.add_group", "api/generated/compas_model.model.Model.add_interaction", "api/generated/compas_model.model.Model.copy", "api/generated/compas_model.model.Model.from_json", "api/generated/compas_model.model.Model.from_jsonstring", "api/generated/compas_model.model.Model.get_by_type", "api/generated/compas_model.model.Model.get_connected_elements", "api/generated/compas_model.model.Model.print", "api/generated/compas_model.model.Model.print_elements", "api/generated/compas_model.model.Model.print_interactions", "api/generated/compas_model.model.Model.sha256", "api/generated/compas_model.model.Model.to_json", "api/generated/compas_model.model.Model.to_jsonstring", "api/generated/compas_model.model.Model.to_nodes_and_neighbors", "api/generated/compas_model.model.Model.validate_data", "devguide", "examples", "examples/elements_beam", "examples/elements_block", "examples/elements_interface", "examples/elements_plate", "examples/model", "index", "installation", "license", "tutorial"], "filenames": ["acknowledgements.rst", "api.rst", "api/compas_model.elements.rst", "api/compas_model.model.rst", "api/generated/compas_model.elements.Beam.rst", "api/generated/compas_model.elements.Beam.ToString.rst", "api/generated/compas_model.elements.Beam.compute_aabb.rst", "api/generated/compas_model.elements.Beam.compute_collision_mesh.rst", "api/generated/compas_model.elements.Beam.compute_face_polygons.rst", "api/generated/compas_model.elements.Beam.compute_obb.rst", "api/generated/compas_model.elements.Beam.copy.rst", "api/generated/compas_model.elements.Beam.from_json.rst", "api/generated/compas_model.elements.Beam.from_jsonstring.rst", "api/generated/compas_model.elements.Beam.from_line.rst", "api/generated/compas_model.elements.Beam.sha256.rst", "api/generated/compas_model.elements.Beam.to_json.rst", "api/generated/compas_model.elements.Beam.to_jsonstring.rst", "api/generated/compas_model.elements.Beam.transform.rst", "api/generated/compas_model.elements.Beam.transformed.rst", "api/generated/compas_model.elements.Beam.validate_data.rst", "api/generated/compas_model.elements.Block.rst", "api/generated/compas_model.elements.Block.ToString.rst", "api/generated/compas_model.elements.Block.compute_aabb.rst", "api/generated/compas_model.elements.Block.compute_collision_mesh.rst", "api/generated/compas_model.elements.Block.compute_obb.rst", "api/generated/compas_model.elements.Block.copy.rst", "api/generated/compas_model.elements.Block.from_json.rst", "api/generated/compas_model.elements.Block.from_jsonstring.rst", "api/generated/compas_model.elements.Block.sha256.rst", "api/generated/compas_model.elements.Block.to_json.rst", "api/generated/compas_model.elements.Block.to_jsonstring.rst", "api/generated/compas_model.elements.Block.transform.rst", "api/generated/compas_model.elements.Block.transformed.rst", "api/generated/compas_model.elements.Block.validate_data.rst", "api/generated/compas_model.elements.Element.rst", "api/generated/compas_model.elements.Element.ToString.rst", "api/generated/compas_model.elements.Element.compute_aabb.rst", "api/generated/compas_model.elements.Element.compute_collision_mesh.rst", "api/generated/compas_model.elements.Element.compute_obb.rst", "api/generated/compas_model.elements.Element.copy.rst", "api/generated/compas_model.elements.Element.from_json.rst", "api/generated/compas_model.elements.Element.from_jsonstring.rst", "api/generated/compas_model.elements.Element.sha256.rst", "api/generated/compas_model.elements.Element.to_json.rst", "api/generated/compas_model.elements.Element.to_jsonstring.rst", "api/generated/compas_model.elements.Element.transform.rst", "api/generated/compas_model.elements.Element.transformed.rst", "api/generated/compas_model.elements.Element.validate_data.rst", "api/generated/compas_model.elements.Interface.rst", "api/generated/compas_model.elements.Interface.ToString.rst", "api/generated/compas_model.elements.Interface.compute_aabb.rst", "api/generated/compas_model.elements.Interface.compute_collision_mesh.rst", "api/generated/compas_model.elements.Interface.compute_obb.rst", "api/generated/compas_model.elements.Interface.copy.rst", "api/generated/compas_model.elements.Interface.from_json.rst", "api/generated/compas_model.elements.Interface.from_jsonstring.rst", "api/generated/compas_model.elements.Interface.sha256.rst", "api/generated/compas_model.elements.Interface.to_json.rst", "api/generated/compas_model.elements.Interface.to_jsonstring.rst", "api/generated/compas_model.elements.Interface.transform.rst", "api/generated/compas_model.elements.Interface.transformed.rst", "api/generated/compas_model.elements.Interface.validate_data.rst", "api/generated/compas_model.elements.Plate.rst", "api/generated/compas_model.elements.Plate.ToString.rst", "api/generated/compas_model.elements.Plate.compute_aabb.rst", "api/generated/compas_model.elements.Plate.compute_collision_mesh.rst", "api/generated/compas_model.elements.Plate.compute_loft.rst", "api/generated/compas_model.elements.Plate.compute_obb.rst", "api/generated/compas_model.elements.Plate.copy.rst", "api/generated/compas_model.elements.Plate.from_json.rst", "api/generated/compas_model.elements.Plate.from_jsonstring.rst", "api/generated/compas_model.elements.Plate.from_two_polygons.rst", "api/generated/compas_model.elements.Plate.get_average_frame.rst", "api/generated/compas_model.elements.Plate.mesh_from_loft.rst", "api/generated/compas_model.elements.Plate.sha256.rst", "api/generated/compas_model.elements.Plate.to_json.rst", "api/generated/compas_model.elements.Plate.to_jsonstring.rst", "api/generated/compas_model.elements.Plate.transform.rst", "api/generated/compas_model.elements.Plate.transformed.rst", "api/generated/compas_model.elements.Plate.validate_data.rst", "api/generated/compas_model.model.ElementNode.rst", "api/generated/compas_model.model.ElementNode.ToString.rst", "api/generated/compas_model.model.ElementNode.add.rst", "api/generated/compas_model.model.ElementNode.copy.rst", "api/generated/compas_model.model.ElementNode.from_json.rst", "api/generated/compas_model.model.ElementNode.from_jsonstring.rst", "api/generated/compas_model.model.ElementNode.remove.rst", "api/generated/compas_model.model.ElementNode.sha256.rst", "api/generated/compas_model.model.ElementNode.to_json.rst", "api/generated/compas_model.model.ElementNode.to_jsonstring.rst", "api/generated/compas_model.model.ElementNode.traverse.rst", "api/generated/compas_model.model.ElementNode.validate_data.rst", "api/generated/compas_model.model.ElementTree.rst", "api/generated/compas_model.model.ElementTree.ToString.rst", "api/generated/compas_model.model.ElementTree.add.rst", "api/generated/compas_model.model.ElementTree.add_element.rst", "api/generated/compas_model.model.ElementTree.add_group.rst", "api/generated/compas_model.model.ElementTree.copy.rst", "api/generated/compas_model.model.ElementTree.from_json.rst", "api/generated/compas_model.model.ElementTree.from_jsonstring.rst", "api/generated/compas_model.model.ElementTree.get_node_by_name.rst", "api/generated/compas_model.model.ElementTree.get_nodes_by_name.rst", "api/generated/compas_model.model.ElementTree.print.rst", "api/generated/compas_model.model.ElementTree.print_hierarchy.rst", "api/generated/compas_model.model.ElementTree.remove.rst", "api/generated/compas_model.model.ElementTree.sha256.rst", "api/generated/compas_model.model.ElementTree.to_json.rst", "api/generated/compas_model.model.ElementTree.to_jsonstring.rst", "api/generated/compas_model.model.ElementTree.transform.rst", "api/generated/compas_model.model.ElementTree.transform_numpy.rst", "api/generated/compas_model.model.ElementTree.transformed.rst", "api/generated/compas_model.model.ElementTree.transformed_numpy.rst", "api/generated/compas_model.model.ElementTree.traverse.rst", "api/generated/compas_model.model.ElementTree.validate_data.rst", "api/generated/compas_model.model.GroupNode.rst", "api/generated/compas_model.model.GroupNode.ToString.rst", "api/generated/compas_model.model.GroupNode.add.rst", "api/generated/compas_model.model.GroupNode.add_element.rst", "api/generated/compas_model.model.GroupNode.add_group.rst", "api/generated/compas_model.model.GroupNode.copy.rst", "api/generated/compas_model.model.GroupNode.from_json.rst", "api/generated/compas_model.model.GroupNode.from_jsonstring.rst", "api/generated/compas_model.model.GroupNode.remove.rst", "api/generated/compas_model.model.GroupNode.sha256.rst", "api/generated/compas_model.model.GroupNode.to_json.rst", "api/generated/compas_model.model.GroupNode.to_jsonstring.rst", "api/generated/compas_model.model.GroupNode.traverse.rst", "api/generated/compas_model.model.GroupNode.validate_data.rst", "api/generated/compas_model.model.Model.rst", "api/generated/compas_model.model.Model.ToString.rst", "api/generated/compas_model.model.Model.add_element.rst", "api/generated/compas_model.model.Model.add_elements.rst", "api/generated/compas_model.model.Model.add_group.rst", "api/generated/compas_model.model.Model.add_interaction.rst", "api/generated/compas_model.model.Model.copy.rst", "api/generated/compas_model.model.Model.from_json.rst", "api/generated/compas_model.model.Model.from_jsonstring.rst", "api/generated/compas_model.model.Model.get_by_type.rst", "api/generated/compas_model.model.Model.get_connected_elements.rst", "api/generated/compas_model.model.Model.print.rst", "api/generated/compas_model.model.Model.print_elements.rst", "api/generated/compas_model.model.Model.print_interactions.rst", "api/generated/compas_model.model.Model.sha256.rst", "api/generated/compas_model.model.Model.to_json.rst", "api/generated/compas_model.model.Model.to_jsonstring.rst", "api/generated/compas_model.model.Model.to_nodes_and_neighbors.rst", "api/generated/compas_model.model.Model.validate_data.rst", "devguide.rst", "examples.rst", "examples/elements_beam.rst", "examples/elements_block.rst", "examples/elements_interface.rst", "examples/elements_plate.rst", "examples/model.rst", "index.rst", "installation.rst", "license.rst", "tutorial.rst"], "titles": ["Acknowledgements", "API Reference", "compas_model.elements", "compas_model.model", "Beam", "Beam.ToString", "Beam.compute_aabb", "Beam.compute_collision_mesh", "Beam.compute_face_polygons", "Beam.compute_obb", "Beam.copy", "Beam.from_json", "Beam.from_jsonstring", "Beam.from_line", "Beam.sha256", "Beam.to_json", "Beam.to_jsonstring", "Beam.transform", "Beam.transformed", "Beam.validate_data", "Block", "Block.ToString", "Block.compute_aabb", "Block.compute_collision_mesh", "Block.compute_obb", "Block.copy", "Block.from_json", "Block.from_jsonstring", "Block.sha256", "Block.to_json", "Block.to_jsonstring", "Block.transform", "Block.transformed", "Block.validate_data", "Element", "Element.ToString", "Element.compute_aabb", "Element.compute_collision_mesh", "Element.compute_obb", "Element.copy", "Element.from_json", "Element.from_jsonstring", "Element.sha256", "Element.to_json", "Element.to_jsonstring", "Element.transform", "Element.transformed", "Element.validate_data", "Interface", "Interface.ToString", "Interface.compute_aabb", "Interface.compute_collision_mesh", "Interface.compute_obb", "Interface.copy", "Interface.from_json", "Interface.from_jsonstring", "Interface.sha256", "Interface.to_json", "Interface.to_jsonstring", "Interface.transform", "Interface.transformed", "Interface.validate_data", "Plate", "Plate.ToString", "Plate.compute_aabb", "Plate.compute_collision_mesh", "Plate.compute_loft", "Plate.compute_obb", "Plate.copy", "Plate.from_json", "Plate.from_jsonstring", "Plate.from_two_polygons", "Plate.get_average_frame", "Plate.mesh_from_loft", "Plate.sha256", "Plate.to_json", "Plate.to_jsonstring", "Plate.transform", "Plate.transformed", "Plate.validate_data", "ElementNode", "ElementNode.ToString", "ElementNode.add", "ElementNode.copy", "ElementNode.from_json", "ElementNode.from_jsonstring", "ElementNode.remove", "ElementNode.sha256", "ElementNode.to_json", "ElementNode.to_jsonstring", "ElementNode.traverse", "ElementNode.validate_data", "ElementTree", "ElementTree.ToString", "ElementTree.add", "ElementTree.add_element", "ElementTree.add_group", "ElementTree.copy", "ElementTree.from_json", "ElementTree.from_jsonstring", "ElementTree.get_node_by_name", "ElementTree.get_nodes_by_name", "ElementTree.print", "ElementTree.print_hierarchy", "ElementTree.remove", "ElementTree.sha256", "ElementTree.to_json", "ElementTree.to_jsonstring", "ElementTree.transform", "ElementTree.transform_numpy", "ElementTree.transformed", "ElementTree.transformed_numpy", "ElementTree.traverse", "ElementTree.validate_data", "GroupNode", "GroupNode.ToString", "GroupNode.add", "GroupNode.add_element", "GroupNode.add_group", "GroupNode.copy", "GroupNode.from_json", "GroupNode.from_jsonstring", "GroupNode.remove", "GroupNode.sha256", "GroupNode.to_json", "GroupNode.to_jsonstring", "GroupNode.traverse", "GroupNode.validate_data", "Model", "Model.ToString", "Model.add_element", "Model.add_elements", "Model.add_group", "Model.add_interaction", "Model.copy", "Model.from_json", "Model.from_jsonstring", "Model.get_by_type", "Model.get_connected_elements", "Model.print", "Model.print_elements", "Model.print_interactions", "Model.sha256", "Model.to_json", "Model.to_jsonstring", "Model.to_nodes_and_neighbors", "Model.validate_data", "Development Guide", "Examples", "Elements: Beam", "Elements: Block", "Elements: Interface", "Elements: Plate", "Model", "Documentation of COMPAS MODEL", "Installation", "License", "Tutorial"], "terms": {"compas_model": [1, 4, 18, 20, 32, 34, 46, 48, 60, 62, 71, 78, 80, 92, 95, 96, 114, 117, 118, 128, 130, 131, 132, 133, 134, 139, 140, 149, 150, 151, 152, 153, 154], "model": [1, 4, 20, 34, 48, 62, 80, 92, 95, 96, 114, 117, 118, 148, 149, 150, 151, 152], "element": [1, 4, 6, 7, 8, 9, 17, 18, 20, 22, 23, 24, 31, 32, 48, 50, 51, 52, 59, 60, 62, 64, 65, 66, 67, 71, 77, 78, 80, 92, 95, 117, 128, 130, 131, 133, 134, 137, 138, 139, 140, 148, 153, 154], "class": [4, 5, 17, 18, 20, 21, 31, 32, 34, 35, 45, 46, 48, 49, 59, 60, 62, 63, 77, 78, 80, 81, 92, 93, 95, 96, 114, 115, 117, 118, 128, 129, 130], "sourc": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "base": [4, 20, 34, 48, 62, 80, 92, 114, 117, 128, 152], "A": [4, 13, 18, 20, 32, 34, 46, 48, 60, 62, 78, 80, 92, 95, 96, 114, 117, 118, 128, 130, 131, 132, 134, 137, 138, 149, 150, 152, 156], "represent": [4, 5, 15, 16, 21, 29, 30, 35, 43, 44, 48, 49, 57, 58, 63, 75, 76, 81, 88, 89, 93, 106, 107, 115, 124, 125, 129, 143, 144, 149, 150], "line": [4, 13, 34, 48, 149, 152], "box": [4, 6, 9, 20, 22, 24, 34, 36, 38, 48, 50, 52, 62, 64, 67, 151], "paramet": [4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 142, 143, 144, 146], "frame": [4, 17, 20, 31, 34, 45, 48, 59, 62, 73, 77, 149, 150, 151, 152], "compa": [4, 6, 7, 9, 10, 11, 12, 13, 14, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 64, 65, 67, 68, 69, 70, 71, 73, 74, 77, 78, 82, 83, 84, 85, 86, 87, 90, 94, 97, 98, 99, 100, 101, 104, 105, 112, 116, 119, 120, 121, 122, 123, 126, 128, 133, 134, 135, 136, 139, 141, 142, 145, 149, 150, 151, 152, 153], "geometri": [4, 6, 7, 9, 13, 17, 18, 20, 22, 23, 24, 31, 32, 34, 36, 37, 38, 45, 46, 48, 50, 51, 52, 59, 60, 62, 64, 65, 67, 71, 73, 77, 78, 96, 114, 118, 132, 133, 149, 150, 151, 152, 153], "The": [4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 133, 135, 136, 143, 144, 146, 152, 156], "length": [4, 13], "float": [4, 6, 9, 13, 22, 24, 36, 38, 50, 52, 62, 64, 67], "width": [4, 13], "cross": [4, 13], "section": [4, 13], "height": [4, 13], "kwarg": [4, 13, 20, 34, 48, 62, 71], "dict": [4, 13, 20, 34, 48, 62, 71, 92, 128, 134], "option": [4, 10, 13, 14, 15, 16, 20, 25, 28, 29, 30, 34, 39, 42, 43, 44, 48, 53, 56, 57, 58, 62, 68, 71, 74, 75, 76, 80, 83, 87, 88, 89, 90, 92, 94, 95, 96, 97, 105, 106, 107, 112, 114, 117, 118, 119, 123, 124, 125, 126, 128, 130, 131, 132, 133, 137, 138, 142, 143, 144], "addit": [4, 13, 20, 34, 48, 62, 71], "keyword": [4, 13, 20, 34, 48, 62, 71], "argument": [4, 13, 20, 34, 48, 62, 71], "attribut": [4, 20, 34, 48, 62, 80, 92, 114, 128, 153], "guid": [4, 20, 34, 48, 62, 114, 149, 150, 154], "str": [4, 11, 12, 14, 15, 16, 20, 26, 27, 28, 29, 30, 34, 40, 41, 42, 43, 44, 48, 54, 55, 56, 57, 58, 62, 69, 70, 74, 75, 76, 80, 84, 85, 87, 88, 89, 92, 95, 96, 98, 99, 100, 101, 105, 106, 107, 114, 117, 118, 120, 121, 123, 124, 125, 128, 130, 132, 133, 135, 136, 137, 138, 142, 143, 144, 152], "read": [4, 20, 34, 48, 62, 80, 114], "onli": [4, 20, 34, 48, 62, 80, 90, 92, 112, 114, 126], "global": [4, 20, 34, 48, 62], "uniqu": [4, 20, 34, 48, 62], "identifi": [4, 20, 34, 48, 62, 95, 96, 118, 128, 130, 131, 132, 133], "object": [4, 5, 10, 11, 12, 15, 16, 19, 20, 21, 25, 26, 27, 29, 30, 33, 34, 35, 39, 40, 41, 43, 44, 47, 48, 49, 53, 54, 55, 57, 58, 61, 62, 63, 68, 69, 70, 75, 76, 79, 80, 81, 82, 83, 84, 85, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 106, 107, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 129, 134, 135, 136, 143, 144, 146], "i": [4, 11, 12, 19, 20, 26, 27, 33, 34, 40, 41, 47, 48, 54, 55, 61, 62, 69, 70, 71, 79, 80, 82, 84, 85, 90, 91, 94, 98, 99, 112, 113, 114, 116, 117, 120, 121, 126, 127, 130, 135, 136, 146, 149, 150, 151, 152, 153, 156], "gener": [4, 20, 34, 48, 62], "uuid": [4, 20, 34, 48, 62, 80, 92, 114, 128, 131, 133, 134], "uuid4": [4, 20, 34, 48, 62, 80, 92, 114, 128, 131, 133, 134], "name": [4, 20, 34, 48, 62, 80, 92, 95, 96, 100, 101, 114, 117, 118, 128, 130, 132, 133, 137, 138, 153], "thi": [4, 5, 10, 11, 12, 19, 20, 21, 25, 26, 27, 33, 34, 35, 39, 40, 41, 47, 48, 49, 53, 54, 55, 61, 62, 63, 68, 69, 70, 79, 80, 81, 82, 83, 84, 85, 86, 90, 91, 93, 94, 95, 96, 97, 98, 99, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 126, 127, 129, 135, 136, 139, 146, 149, 153, 156], "necessarili": [4, 20, 34, 48, 62], "can": [4, 19, 20, 33, 34, 47, 48, 61, 62, 79, 91, 113, 127, 138, 146], "set": [4, 20, 34, 48, 62], "user": [4, 20, 34, 48, 62, 80, 114, 153], "default": [4, 5, 10, 13, 15, 16, 20, 21, 25, 29, 30, 34, 35, 39, 43, 44, 48, 49, 53, 57, 58, 62, 63, 68, 75, 76, 80, 81, 83, 88, 89, 93, 94, 97, 106, 107, 114, 115, 119, 124, 125, 129, 137, 138, 143, 144], "valu": [4, 20, 34, 48, 62], "": [4, 13, 17, 19, 20, 31, 33, 34, 45, 47, 48, 59, 61, 62, 77, 79, 91, 113, 127, 139, 146], "self": [4, 5, 20, 21, 34, 35, 48, 49, 62, 63, 81, 93, 115, 129], "__class__": [4, 20, 34, 48, 62], "__name__": [4, 20, 34, 48, 62], "local": [4, 20, 34, 48, 62], "coordin": [4, 20, 34, 48, 62], "worldxi": [4, 20, 34, 48, 62, 152], "repres": [4, 20, 34, 48, 62, 128, 130, 132, 149, 151, 152], "solid": 4, "shape": [4, 20, 34, 48, 62, 96, 114, 118, 132, 133], "geometry_simplifi": [4, 20, 34, 48, 62], "central": [4, 20, 34, 62, 149, 150], "axi": [4, 6, 13, 20, 22, 34, 36, 48, 50, 62, 67, 149], "aabb": [4, 6, 20, 22, 34, 36, 48, 50, 62, 67], "align": [4, 6, 20, 22, 34, 36, 48, 50, 62, 67], "bound": [4, 6, 9, 20, 22, 24, 34, 36, 38, 48, 50, 52, 62, 64, 67], "obb": [4, 9, 20, 24, 34, 38, 48, 52, 62, 64], "orient": [4, 9, 13, 20, 24, 34, 38, 48, 52, 62, 64, 152], "collision_mesh": [4, 20, 34, 48, 62], "datastructur": [4, 7, 14, 20, 23, 28, 34, 37, 42, 48, 51, 56, 62, 65, 74, 82, 86, 87, 90, 94, 100, 101, 104, 105, 110, 111, 112, 116, 122, 123, 126, 128, 133, 134, 139, 141, 142, 145, 150, 151, 152, 153], "mesh": [4, 7, 14, 20, 23, 28, 34, 37, 42, 48, 51, 56, 62, 65, 66, 71, 73, 74, 87, 105, 123, 142, 150, 151, 152, 153], "collis": [4, 7, 20, 23, 34, 37, 48, 51, 62, 65], "dimens": [4, 20, 34, 48, 62, 149, 150], "list": [4, 8, 20, 34, 48, 62, 73, 101, 128, 131, 137, 138, 145, 152], "featur": [4, 20, 34, 48, 62], "These": [4, 20, 34, 48, 62], "ar": [4, 5, 20, 21, 34, 35, 48, 49, 62, 63, 81, 93, 115, 128, 129, 131, 152], "custom": [4, 20, 34, 48, 62], "geometr": [4, 20, 34, 48, 62], "ad": [4, 20, 34, 48, 62, 94, 117, 128, 130, 131, 133], "through": [4, 20, 34, 48, 62], "oper": [4, 20, 34, 48, 62], "made": [4, 20, 34, 48, 62], "For": [4, 20, 34, 48, 62], "exampl": [4, 14, 20, 28, 34, 42, 48, 56, 62, 74, 87, 105, 123, 142, 151, 152, 154], "cut": [4, 20, 34, 48, 62], "boolean": [4, 20, 34, 48, 62], "differ": [4, 20, 34, 48, 62], "text": [4, 20, 34, 48, 62], "insert": [4, 20, 34, 48, 62], "vector": [4, 13, 20, 34, 48, 62, 152], "0": [4, 6, 9, 14, 20, 22, 24, 28, 34, 36, 38, 42, 48, 50, 52, 56, 62, 64, 67, 74, 87, 105, 123, 142, 149, 150, 151, 152, 153], "1": [4, 14, 20, 28, 34, 42, 48, 56, 62, 74, 87, 105, 123, 133, 142, 149, 150, 151, 152, 153], "downward": [4, 20, 34, 48, 62], "often": [4, 20, 34, 48, 62, 149], "us": [4, 5, 14, 19, 20, 21, 28, 33, 34, 35, 42, 47, 48, 49, 56, 61, 62, 63, 74, 79, 81, 87, 90, 91, 93, 105, 108, 109, 110, 111, 112, 113, 115, 123, 126, 127, 129, 142, 146, 149, 156], "simul": [4, 20, 34, 48, 62], "an": [4, 10, 11, 12, 15, 16, 18, 19, 20, 25, 26, 27, 29, 30, 32, 33, 34, 39, 40, 41, 43, 44, 46, 47, 48, 53, 54, 55, 57, 58, 60, 61, 62, 68, 69, 70, 75, 76, 78, 79, 83, 84, 85, 88, 89, 91, 95, 97, 98, 99, 106, 107, 113, 117, 119, 120, 121, 124, 125, 127, 130, 133, 135, 136, 143, 144, 146, 151, 152, 156], "assembli": [4, 20, 34, 48, 62], "sequenc": [4, 20, 34, 48, 62], "node": [4, 20, 34, 48, 62, 80, 82, 86, 90, 92, 94, 95, 96, 100, 101, 102, 104, 112, 114, 116, 117, 118, 122, 126, 128, 139, 141, 145, 149, 150, 151, 152, 153], "elementnod": [4, 20, 34, 48, 62, 92, 95, 117, 128, 130, 133, 149, 150, 151, 152, 153, 154], "tree": [4, 20, 34, 48, 62, 90, 92, 94, 95, 96, 103, 104, 112, 114, 117, 126, 128, 134, 139, 153], "contain": [4, 11, 12, 20, 26, 27, 34, 40, 41, 48, 54, 55, 62, 69, 70, 73, 84, 85, 98, 99, 120, 121, 128, 133, 135, 136, 149, 153], "face_polygon": [4, 20, 62], "flat": [4, 20, 62, 128], "area": [4, 20, 62], "face": [4, 8, 14, 20, 28, 42, 56, 62, 74, 87, 105, 123, 142, 152], "polygon": [4, 8, 20, 34, 48, 62, 71, 72, 73, 150, 151, 152], "interfac": [4, 20, 34, 62, 137, 138, 148, 154], "detect": [4, 20, 62], "method": [4, 5, 20, 21, 34, 35, 48, 49, 62, 63, 80, 81, 92, 93, 114, 115, 128, 129, 131, 139], "inherit": [4, 20, 34, 48, 62, 80, 92, 95, 96, 114, 117, 118, 128, 130], "convert": [5, 15, 16, 21, 29, 30, 35, 43, 44, 49, 57, 58, 63, 75, 76, 81, 88, 89, 93, 106, 107, 115, 124, 125, 129, 143, 144], "instanc": [5, 11, 12, 18, 21, 26, 27, 32, 35, 40, 41, 46, 49, 54, 55, 60, 63, 69, 70, 78, 81, 84, 85, 93, 98, 99, 115, 120, 121, 129, 135, 136], "string": [5, 12, 16, 21, 27, 30, 35, 41, 44, 49, 55, 58, 63, 70, 76, 81, 85, 89, 93, 99, 107, 115, 121, 125, 129, 136, 144], "exist": [5, 21, 35, 49, 63, 81, 93, 115, 117, 129], "net": [5, 21, 35, 49, 63, 81, 93, 115, 129], "compat": [5, 21, 35, 49, 63, 81, 93, 115, 129], "when": [5, 21, 35, 49, 63, 80, 81, 93, 94, 96, 114, 115, 118, 129, 132, 133], "ironpython": [5, 21, 35, 49, 63, 81, 93, 115, 129], "implicit": [5, 21, 35, 49, 63, 81, 93, 115, 129], "convers": [5, 21, 35, 49, 63, 81, 93, 115, 129], "usual": [5, 21, 35, 49, 63, 81, 93, 115, 129], "take": [5, 21, 35, 49, 63, 81, 93, 115, 129], "place": [5, 21, 35, 49, 63, 81, 93, 115, 129], "cpython": [5, 21, 35, 49, 63, 81, 93, 115, 129], "kick": [5, 21, 35, 49, 63, 81, 93, 115, 129], "its": [5, 13, 15, 16, 21, 29, 30, 35, 43, 44, 49, 57, 58, 63, 75, 76, 81, 88, 89, 93, 100, 106, 107, 115, 124, 125, 129, 143, 144, 153], "print": [5, 15, 16, 21, 29, 30, 35, 43, 44, 49, 57, 58, 63, 75, 76, 81, 88, 89, 93, 103, 106, 107, 115, 124, 125, 129, 140, 141, 143, 144, 149, 150, 151, 152, 153], "gettyp": [5, 21, 35, 49, 63, 81, 93, 115, 129], "fullnam": [5, 21, 35, 49, 63, 81, 93, 115, 129], "similar": [5, 21, 35, 49, 63, 81, 93, 115, 129], "overrid": [5, 21, 35, 49, 63, 81, 93, 115, 129], "fix": [5, 21, 35, 49, 63, 81, 93, 115, 129], "make": [5, 10, 21, 25, 35, 39, 49, 53, 63, 68, 81, 83, 93, 97, 115, 119, 129], "rhino": [5, 21, 35, 49, 63, 81, 93, 115, 129], "grasshopp": [5, 21, 35, 49, 63, 81, 93, 115, 129], "displai": [5, 21, 35, 49, 63, 81, 93, 115, 129], "proper": [5, 21, 35, 49, 63, 81, 93, 115, 129], "connect": [5, 21, 35, 49, 63, 81, 93, 115, 128, 129, 138, 153, 156], "panel": [5, 21, 35, 49, 63, 81, 93, 115, 129], "other": [5, 21, 35, 49, 63, 81, 93, 96, 114, 115, 118, 129, 132, 133, 156], "type": [5, 10, 11, 12, 19, 21, 25, 26, 27, 33, 35, 39, 40, 41, 47, 49, 53, 54, 55, 61, 63, 68, 69, 70, 79, 81, 83, 84, 85, 91, 93, 97, 98, 99, 113, 114, 115, 119, 120, 121, 127, 129, 133, 135, 136, 137, 138, 146], "output": [5, 21, 35, 49, 63, 81, 93, 115, 129, 153], "inflat": [6, 9, 22, 24, 36, 38, 50, 52, 64, 67], "comput": [6, 7, 8, 9, 14, 22, 23, 24, 28, 36, 37, 38, 42, 50, 51, 52, 56, 64, 65, 66, 67, 74, 87, 105, 123, 128, 142], "offset": [6, 9, 22, 24, 36, 38, 50, 52, 64, 67, 152], "avoid": [6, 9, 22, 24, 36, 38, 50, 52, 64, 67], "point": [6, 9, 20, 22, 24, 36, 38, 50, 52, 62, 64, 67, 73, 149, 150, 152, 153], "error": [6, 9, 22, 24, 36, 38, 50, 52, 64, 67], "return": [6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 89, 91, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 107, 108, 109, 110, 111, 113, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 144, 146, 150, 152, 153], "cl": [10, 25, 39, 53, 68, 83, 97, 119], "none": [10, 13, 17, 25, 31, 39, 45, 53, 59, 68, 77, 82, 83, 86, 94, 95, 96, 97, 104, 108, 109, 116, 117, 118, 119, 122, 130, 132, 133, 152, 153], "independ": [10, 25, 39, 53, 68, 83, 97, 119], "data": [10, 11, 12, 14, 15, 16, 19, 25, 26, 27, 28, 29, 30, 33, 34, 39, 40, 41, 42, 43, 44, 47, 53, 54, 55, 56, 57, 58, 61, 68, 69, 70, 74, 75, 76, 79, 83, 84, 85, 87, 88, 89, 91, 92, 97, 98, 99, 105, 106, 107, 108, 109, 110, 111, 113, 119, 120, 121, 123, 124, 125, 127, 128, 135, 136, 142, 143, 144, 146, 149, 150, 152, 153], "current": [10, 25, 39, 53, 68, 83, 97, 117, 118, 119], "classmethod": [11, 12, 13, 19, 26, 27, 33, 40, 41, 47, 54, 55, 61, 69, 70, 71, 79, 84, 85, 91, 98, 99, 113, 120, 121, 127, 135, 136, 146], "filepath": [11, 15, 26, 29, 40, 43, 54, 57, 69, 75, 84, 88, 98, 106, 120, 124, 135, 143], "construct": [11, 12, 19, 26, 27, 33, 40, 41, 47, 54, 55, 61, 69, 70, 79, 84, 85, 91, 98, 99, 113, 120, 121, 127, 135, 136, 146], "from": [11, 12, 13, 14, 26, 27, 28, 40, 41, 42, 48, 54, 55, 56, 62, 69, 70, 71, 73, 74, 80, 84, 85, 86, 87, 90, 95, 96, 98, 99, 104, 105, 112, 117, 118, 120, 121, 122, 123, 126, 130, 135, 136, 142, 149, 150, 151, 152, 153, 156], "json": [11, 12, 15, 16, 26, 27, 29, 30, 40, 41, 43, 44, 54, 55, 57, 58, 69, 70, 75, 76, 84, 85, 88, 89, 98, 99, 106, 107, 120, 121, 124, 125, 135, 136, 143, 144, 152, 153], "file": [11, 15, 26, 29, 40, 43, 54, 57, 69, 75, 84, 88, 98, 106, 120, 124, 135, 143, 151, 156], "path": [11, 15, 26, 29, 40, 43, 54, 57, 69, 75, 84, 88, 98, 106, 120, 124, 135, 143], "ha": [11, 12, 26, 27, 40, 41, 54, 55, 69, 70, 84, 85, 94, 98, 99, 120, 121, 135, 136], "correct": [11, 12, 26, 27, 40, 41, 54, 55, 69, 70, 84, 85, 98, 99, 120, 121, 135, 136], "schema": [11, 12, 19, 26, 27, 33, 40, 41, 47, 54, 55, 61, 69, 70, 79, 84, 85, 91, 98, 99, 113, 120, 121, 127, 135, 136, 146], "rais": [11, 12, 26, 27, 40, 41, 54, 55, 69, 70, 82, 84, 85, 90, 94, 98, 99, 112, 116, 120, 121, 126, 135, 136, 152], "typeerror": [11, 12, 26, 27, 40, 41, 54, 55, 69, 70, 82, 84, 85, 94, 98, 99, 116, 120, 121, 135, 136], "If": [11, 12, 14, 15, 16, 26, 27, 28, 29, 30, 40, 41, 42, 43, 44, 54, 55, 56, 57, 58, 62, 69, 70, 71, 74, 75, 76, 80, 82, 84, 85, 87, 88, 89, 90, 94, 98, 99, 105, 106, 107, 112, 116, 117, 120, 121, 123, 124, 125, 126, 128, 130, 131, 135, 136, 142, 143, 144], "center_axi": 13, "z_vector": 13, "defin": [13, 80, 114], "creat": [13, 18, 32, 46, 60, 71, 73, 78, 80, 114, 149, 150, 151, 152, 153], "indic": 13, "direct": 13, "z": [13, 14, 28, 42, 56, 74, 87, 105, 123, 142, 152], "worldz": 13, "worldx": 13, "depend": [13, 153], "compas_timb": 13, "part": [13, 94], "as_str": [14, 28, 42, 56, 74, 87, 105, 123, 142], "fals": [14, 15, 16, 28, 29, 30, 42, 43, 44, 56, 57, 58, 74, 75, 76, 87, 88, 89, 105, 106, 107, 117, 123, 124, 125, 130, 131, 142, 143, 144, 152], "hash": [14, 28, 42, 56, 74, 87, 105, 123, 142], "comparison": [14, 28, 42, 56, 74, 87, 105, 123, 142], "dure": [14, 28, 42, 56, 74, 87, 105, 123, 142], "version": [14, 28, 42, 56, 74, 87, 105, 123, 142], "control": [14, 28, 42, 56, 74, 87, 105, 123, 142], "algorithm": [14, 28, 42, 56, 74, 87, 105, 123, 142], "bool": [14, 15, 16, 28, 29, 30, 42, 43, 44, 56, 57, 58, 62, 71, 74, 75, 76, 87, 88, 89, 105, 106, 107, 117, 123, 124, 125, 128, 130, 131, 142, 143, 144], "true": [14, 15, 16, 28, 29, 30, 42, 43, 44, 56, 57, 58, 62, 71, 74, 75, 76, 87, 88, 89, 105, 106, 107, 117, 123, 124, 125, 128, 130, 131, 142, 143, 144, 152, 153], "digest": [14, 28, 42, 56, 74, 87, 105, 123, 142], "hexadecim": [14, 28, 42, 56, 74, 87, 105, 123, 142], "format": [14, 28, 42, 56, 74, 87, 102, 105, 123, 142], "rather": [14, 28, 42, 56, 74, 87, 105, 123, 142], "than": [14, 28, 42, 56, 74, 87, 105, 123, 142, 149], "byte": [14, 28, 42, 56, 74, 87, 105, 123, 142], "import": [14, 28, 42, 56, 74, 87, 105, 123, 142, 149, 150, 151, 152, 153], "from_obj": [14, 28, 42, 56, 74, 87, 105, 123, 142], "get": [14, 28, 42, 56, 74, 87, 100, 101, 105, 123, 137, 138, 142, 145], "obj": [14, 28, 42, 56, 74, 87, 105, 123, 142], "v1": [14, 28, 42, 56, 74, 87, 105, 123, 142], "v2": [14, 28, 42, 56, 74, 87, 105, 123, 142], "vertex_attribut": [14, 28, 42, 56, 74, 87, 105, 123, 142], "vertex_sampl": [14, 28, 42, 56, 74, 87, 105, 123, 142], "v3": [14, 28, 42, 56, 74, 87, 105, 123, 142], "pretti": [15, 16, 29, 30, 43, 44, 57, 58, 75, 76, 88, 89, 106, 107, 124, 125, 143, 144, 152, 153], "nativ": [15, 16, 29, 30, 43, 44, 57, 58, 75, 76, 88, 89, 106, 107, 124, 125, 143, 144], "save": [15, 16, 29, 30, 43, 44, 57, 58, 75, 76, 88, 89, 106, 107, 124, 125, 143, 144], "all": [17, 31, 45, 59, 77, 101, 128, 133, 140, 141, 153, 156], "attrbut": [17, 31, 45, 59, 77], "appli": [17, 18, 31, 32, 45, 46, 59, 60, 77, 78], "copi": [18, 32, 46, 60, 78, 110, 111, 117, 128, 130, 131, 149, 150, 151, 152, 153, 156], "new": [18, 32, 46, 60, 78], "specifi": [18, 32, 46, 60, 78], "valid": [19, 33, 47, 61, 79, 91, 113, 127, 146], "against": [19, 33, 47, 61, 79, 91, 113, 127, 146], "raw": [19, 33, 47, 61, 79, 91, 113, 127, 146], "__from_data__": [19, 33, 47, 61, 79, 91, 113, 127, 146], "ani": [19, 20, 33, 34, 47, 61, 66, 79, 80, 91, 95, 96, 113, 114, 117, 118, 127, 130, 132, 133, 146, 156], "implement": [20, 62], "inspir": [20, 62], "compas_assembli": [20, 62], "blockresearchgroup": [20, 62], "By": 20, "centroid": 20, "closed_mesh": 20, "close": [20, 34, 62, 150], "simplifi": [20, 34], "e": 34, "g": 34, "beam": [34, 48, 148, 151, 152, 154], "plate": [34, 148, 150, 151, 154], "actual": 34, "block": [34, 62, 148, 151, 153, 154], "warn": 34, "do": [34, 156], "directli": 34, "instead": 34, "subclass": 34, "etc": 34, "abstract": [36, 37, 38, 45, 128], "outlin": [62, 71, 73], "thick": [62, 152], "compute_loft": [62, 71, 152], "loft": [62, 66, 71], "two": [62, 71, 73, 138, 150, 151, 152], "otherwis": [62, 80, 114, 156], "polygon0": [71, 73, 152], "polygon1": [71, 73, 152], "first": [71, 73, 90, 112, 126, 133, 152], "second": [71, 133], "static": [72, 73], "tupl": [73, 133], "polylin": [73, 152], "treenod": [80, 82, 86, 90, 94, 100, 101, 104, 112, 114, 116, 122, 126, 128], "leaf": [80, 114, 130, 153], "store": [80, 92, 114, 128], "given": 80, "parent": [80, 92, 94, 95, 96, 114, 117, 118, 139], "groupnod": [80, 95, 96, 128, 132, 153, 154], "input": [80, 114], "requir": [80, 114], "separ": [80, 114], "my_model": [80, 153], "add_el": [80, 149, 150, 151, 152, 153], "after": [80, 114, 153], "creation": [80, 114], "becom": [80, 114], "branch": [80, 114, 153], "sub": [80, 102, 114], "child": [82, 86, 116, 122, 139], "strategi": [90, 112, 126], "depthfirst": [90, 112, 126], "order": [90, 112, 126], "preorder": [90, 112, 126], "breadthfirst": [90, 112, 126], "postord": [90, 112, 126], "depth": [90, 112, 126], "yield": [90, 112, 126], "next": [90, 112, 126], "valueerror": [90, 94, 112, 126], "structur": [92, 108, 109, 110, 111, 128, 149, 152, 153], "group": [92, 96, 114, 118, 128, 132, 153], "updat": 92, "dictionari": [92, 117, 128, 153], "graph": [92, 117, 128, 133, 134, 139, 141, 145, 153], "allow": 92, "access": 92, "interact": [92, 128, 133, 153], "number_of_el": [92, 128], "int": [92, 128, 133], "number": [92, 139], "which": [94, 149], "case": 94, "root": [94, 112], "suppli": 94, "alreadi": [94, 133], "anoth": 94, "try": 94, "add": [95, 96, 117, 118, 130, 132, 133, 152, 153], "properti": [96, 114, 118, 130, 132, 133, 134], "you": [96, 114, 118, 132, 133], "want": [96, 114, 118, 132, 133], "give": [96, 114, 118, 132, 133], "besid": [96, 114, 118, 132, 133], "readabl": 102, "spatial": [103, 139], "hierarchi": [103, 128, 139, 153], "transform": [109, 111, 149, 150, 152], "add_group": [114, 153], "assign": 114, "copy_el": [117, 128, 130, 131], "tripl": 117, "behavior": 117, "element_nod": [117, 153], "befor": [117, 128, 130, 131, 153], "note": 128, "collect": 128, "between": 128, "linkag": 128, "total": [128, 139], "count": 128, "number_of_nod": 128, "number_of_edg": 128, "edg": [128, 133, 139, 141, 152], "multipl": 131, "call": 131, "element0": 133, "element1": 133, "weight": 133, "pair": [133, 152], "previous": 133, "involv": 133, "duplic": 134, "element_typ": [137, 138], "One": 138, "joint": 138, "have": 138, "more": 138, "one": 138, "strucutr": 139, "elementtre": [139, 153, 154], "also": [139, 149], "inform": 139, "about": 139, "includ": [139, 156], "relationship": 139, "neighbor": 145, "rectangular": 149, "It": 149, "target": 149, "smaller": 149, "fabric": 149, "longer": 149, "viewer": [149, 150, 151, 152], "viewermodel": [149, 150, 151, 152], "extend": 149, "b0": 149, "from_lin": 149, "3": [149, 152, 153], "25": [149, 152], "5": [149, 150, 151, 152], "test": [149, 150, 151], "b0_copi": 149, "from_frame_to_fram": [149, 150, 152], "belong": [149, 150, 151, 152], "follow": [149, 150, 151, 152, 156], "visual": [149, 150], "show": [149, 150, 151, 152], "scale_factor": [149, 150, 151, 152], "def": [150, 152, 153], "mesh_from_polygon": 150, "2": [150, 151, 152, 153], "4": [150, 151, 152, 153], "from_polygon": 150, "compute_aabb": 150, "compute_obb": 150, "block_copi": 150, "translat": [150, 152], "from_vector": [150, 152], "join": 151, "from_polyhedron": [151, 153], "box0": 151, "from_vertices_and_fac": [151, 152], "to_vertices_and_fac": 151, "box1": 151, "block0": 151, "block1": 151, "interface_copi": 151, "Or": 151, "add_interact": [151, 153], "vizual": [151, 152], "outward": 152, "consid": 152, "from_sides_and_radius_xi": 152, "6": 152, "10": 152, "15": 152, "uncom": 152, "verifi": 152, "initi": 152, "correctli": 152, "regardless": 152, "wind": 152, "revers": 152, "from_two_polygon": 152, "xform": 152, "serial": [152, 153], "to_json": [152, 153], "from_json": [152, 153], "my_plat": 152, "larger": 152, "applic": [152, 153], "fold": 152, "system": 152, "plane": 152, "intersection_line_plan": 152, "intersection_plane_plan": 152, "intersection_line_lin": 152, "reflex_fold_mesh": 152, "poly1": 152, "poly2": 152, "reflx_pln": 152, "point3d": 152, "mkmesh": 152, "poli": 152, "normal": [152, 153], "pt": 152, "enumer": 152, "len": 152, "els": 152, "item": 152, "unit": 152, "append": 152, "pvrt": 152, "mesh_fac": 152, "num": 152, "point3ds1": 152, "rang": [152, 153], "point3ds2": 152, "nums1": 152, "origin": 152, "point3d1": 152, "vpi": 152, "k": 152, "weld": 152, "unify_cycl": 152, "p1": 152, "n1": 152, "p2": 152, "n2": 152, "line_plane_intersect": 152, "bisector_lin": 152, "plane0": 152, "plane1": 152, "toler": 152, "0001": 152, "ab": 152, "dot": 152, "mesh_polylin": 152, "faces_plan": 152, "face_plan": 152, "edges_fac": 152, "bisector": 152, "edge_fac": 152, "mid_point": 152, "edge_midpoint": 152, "01": 152, "except": 152, "parallel": 152, "face_edg": 152, "face_halfedg": 152, "interesect": 152, "consequ": 152, "edge0": 152, "edge1": 152, "intersect": 152, "line0": 152, "line1": 152, "vertical_profil": 152, "horizontal_profil": 152, "75": 152, "bottom_polygon": 152, "top_polygon": 152, "idx": 152, "create_model": 153, "typic": 153, "car": 153, "wheel": 153, "specif": 153, "special": 153, "spoke1": 153, "spoke2": 153, "spoke3": 153, "preview": 153, "create_model_with_interact": 153, "unknown": 153, "copy_model": 153, "truss1": 153, "truss2": 153, "print_interact": 153, "model_copi": 153, "serialize_model_nod": 153, "model_nod": 153, "insid": 153, "group_nod": 153, "timber1": 153, "my_model_nod": 153, "deseri": 153, "group_node_deseri": 153, "content": 153, "model_node_deseri": 153, "element_node_deseri": 153, "hidden": 153, "serialize_model_tre": 153, "model_tre": 153, "my_model_tre": 153, "model_tree_deseri": 153, "full": 153, "serialize_model": 153, "model_deseri": 153, "introduct": 154, "instal": 154, "tutori": 154, "api": 154, "refer": 154, "develop": 154, "licens": 154, "acknowledg": 154, "index": 154, "modul": 154, "copyright": 156, "c": 156, "05": 156, "decemb": 156, "2023": 156, "petra": 156, "vestarta": 156, "permiss": 156, "herebi": 156, "grant": 156, "free": 156, "charg": 156, "person": 156, "obtain": 156, "softwar": 156, "associ": 156, "document": 156, "deal": 156, "without": 156, "restrict": 156, "limit": 156, "right": 156, "modifi": 156, "merg": 156, "publish": 156, "distribut": 156, "sublicens": 156, "sell": 156, "permit": 156, "whom": 156, "furnish": 156, "so": 156, "subject": 156, "condit": 156, "abov": 156, "notic": 156, "shall": 156, "substanti": 156, "portion": 156, "THE": 156, "provid": 156, "AS": 156, "warranti": 156, "OF": 156, "kind": 156, "express": 156, "OR": 156, "impli": 156, "BUT": 156, "NOT": 156, "TO": 156, "merchant": 156, "fit": 156, "FOR": 156, "particular": 156, "purpos": 156, "AND": 156, "noninfring": 156, "IN": 156, "NO": 156, "event": 156, "author": 156, "holder": 156, "BE": 156, "liabl": 156, "claim": 156, "damag": 156, "liabil": 156, "whether": 156, "action": 156, "contract": 156, "tort": 156, "aris": 156, "out": 156, "WITH": 156}, "objects": {"compas_model.elements": [[4, 0, 1, "", "Beam"], [20, 0, 1, "", "Block"], [34, 0, 1, "", "Element"], [48, 0, 1, "", "Interface"], [62, 0, 1, "", "Plate"]], "compas_model.elements.Beam": [[5, 1, 1, "", "ToString"], [6, 1, 1, "", "compute_aabb"], [7, 1, 1, "", "compute_collision_mesh"], [8, 1, 1, "", "compute_face_polygons"], [9, 1, 1, "", "compute_obb"], [10, 1, 1, "", "copy"], [11, 1, 1, "", "from_json"], [12, 1, 1, "", "from_jsonstring"], [13, 1, 1, "", "from_line"], [14, 1, 1, "", "sha256"], [15, 1, 1, "", "to_json"], [16, 1, 1, "", "to_jsonstring"], [17, 1, 1, "", "transform"], [18, 1, 1, "", "transformed"], [19, 1, 1, "", "validate_data"]], "compas_model.elements.Block": [[21, 1, 1, "", "ToString"], [22, 1, 1, "", "compute_aabb"], [23, 1, 1, "", "compute_collision_mesh"], [24, 1, 1, "", "compute_obb"], [25, 1, 1, "", "copy"], [26, 1, 1, "", "from_json"], [27, 1, 1, "", "from_jsonstring"], [28, 1, 1, "", "sha256"], [29, 1, 1, "", "to_json"], [30, 1, 1, "", "to_jsonstring"], [31, 1, 1, "", "transform"], [32, 1, 1, "", "transformed"], [33, 1, 1, "", "validate_data"]], "compas_model.elements.Element": [[35, 1, 1, "", "ToString"], [36, 1, 1, "", "compute_aabb"], [37, 1, 1, "", "compute_collision_mesh"], [38, 1, 1, "", "compute_obb"], [39, 1, 1, "", "copy"], [40, 1, 1, "", "from_json"], [41, 1, 1, "", "from_jsonstring"], [42, 1, 1, "", "sha256"], [43, 1, 1, "", "to_json"], [44, 1, 1, "", "to_jsonstring"], [45, 1, 1, "", "transform"], [46, 1, 1, "", "transformed"], [47, 1, 1, "", "validate_data"]], "compas_model.elements.Interface": [[49, 1, 1, "", "ToString"], [50, 1, 1, "", "compute_aabb"], [51, 1, 1, "", "compute_collision_mesh"], [52, 1, 1, "", "compute_obb"], [53, 1, 1, "", "copy"], [54, 1, 1, "", "from_json"], [55, 1, 1, "", "from_jsonstring"], [56, 1, 1, "", "sha256"], [57, 1, 1, "", "to_json"], [58, 1, 1, "", "to_jsonstring"], [59, 1, 1, "", "transform"], [60, 1, 1, "", "transformed"], [61, 1, 1, "", "validate_data"]], "compas_model.elements.Plate": [[63, 1, 1, "", "ToString"], [64, 1, 1, "", "compute_aabb"], [65, 1, 1, "", "compute_collision_mesh"], [66, 1, 1, "", "compute_loft"], [67, 1, 1, "", "compute_obb"], [68, 1, 1, "", "copy"], [69, 1, 1, "", "from_json"], [70, 1, 1, "", "from_jsonstring"], [71, 1, 1, "", "from_two_polygons"], [72, 1, 1, "", "get_average_frame"], [73, 1, 1, "", "mesh_from_loft"], [74, 1, 1, "", "sha256"], [75, 1, 1, "", "to_json"], [76, 1, 1, "", "to_jsonstring"], [77, 1, 1, "", "transform"], [78, 1, 1, "", "transformed"], [79, 1, 1, "", "validate_data"]], "compas_model.model": [[80, 0, 1, "", "ElementNode"], [92, 0, 1, "", "ElementTree"], [114, 0, 1, "", "GroupNode"], [128, 0, 1, "", "Model"]], "compas_model.model.ElementNode": [[81, 1, 1, "", "ToString"], [82, 1, 1, "", "add"], [83, 1, 1, "", "copy"], [84, 1, 1, "", "from_json"], [85, 1, 1, "", "from_jsonstring"], [86, 1, 1, "", "remove"], [87, 1, 1, "", "sha256"], [88, 1, 1, "", "to_json"], [89, 1, 1, "", "to_jsonstring"], [90, 1, 1, "", "traverse"], [91, 1, 1, "", "validate_data"]], "compas_model.model.ElementTree": [[93, 1, 1, "", "ToString"], [94, 1, 1, "", "add"], [95, 1, 1, "", "add_element"], [96, 1, 1, "", "add_group"], [97, 1, 1, "", "copy"], [98, 1, 1, "", "from_json"], [99, 1, 1, "", "from_jsonstring"], [100, 1, 1, "", "get_node_by_name"], [101, 1, 1, "", "get_nodes_by_name"], [102, 1, 1, "", "print"], [103, 1, 1, "", "print_hierarchy"], [104, 1, 1, "", "remove"], [105, 1, 1, "", "sha256"], [106, 1, 1, "", "to_json"], [107, 1, 1, "", "to_jsonstring"], [108, 1, 1, "", "transform"], [109, 1, 1, "", "transform_numpy"], [110, 1, 1, "", "transformed"], [111, 1, 1, "", "transformed_numpy"], [112, 1, 1, "", "traverse"], [113, 1, 1, "", "validate_data"]], "compas_model.model.GroupNode": [[115, 1, 1, "", "ToString"], [116, 1, 1, "", "add"], [117, 1, 1, "", "add_element"], [118, 1, 1, "", "add_group"], [119, 1, 1, "", "copy"], [120, 1, 1, "", "from_json"], [121, 1, 1, "", "from_jsonstring"], [122, 1, 1, "", "remove"], [123, 1, 1, "", "sha256"], [124, 1, 1, "", "to_json"], [125, 1, 1, "", "to_jsonstring"], [126, 1, 1, "", "traverse"], [127, 1, 1, "", "validate_data"]], "compas_model.model.Model": [[129, 1, 1, "", "ToString"], [130, 1, 1, "", "add_element"], [131, 1, 1, "", "add_elements"], [132, 1, 1, "", "add_group"], [133, 1, 1, "", "add_interaction"], [134, 1, 1, "", "copy"], [135, 1, 1, "", "from_json"], [136, 1, 1, "", "from_jsonstring"], [137, 1, 1, "", "get_by_type"], [138, 1, 1, "", "get_connected_elements"], [139, 1, 1, "", "print"], [140, 1, 1, "", "print_elements"], [141, 1, 1, "", "print_interactions"], [142, 1, 1, "", "sha256"], [143, 1, 1, "", "to_json"], [144, 1, 1, "", "to_jsonstring"], [145, 1, 1, "", "to_nodes_and_neighbors"], [146, 1, 1, "", "validate_data"]]}, "objtypes": {"0": "py:class", "1": "py:method"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"]}, "titleterms": {"acknowledg": 0, "api": 1, "refer": 1, "packag": 1, "compas_model": [2, 3], "element": [2, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 149, 150, 151, 152], "class": 2, "model": [3, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 153, 154], "beam": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 149], "tostr": [5, 21, 35, 49, 63, 81, 93, 115, 129], "compute_aabb": [6, 22, 36, 50, 64], "compute_collision_mesh": [7, 23, 37, 51, 65], "compute_face_polygon": 8, "compute_obb": [9, 24, 38, 52, 67], "copi": [10, 25, 39, 53, 68, 83, 97, 119, 134], "from_json": [11, 26, 40, 54, 69, 84, 98, 120, 135], "from_jsonstr": [12, 27, 41, 55, 70, 85, 99, 121, 136], "from_lin": 13, "sha256": [14, 28, 42, 56, 74, 87, 105, 123, 142], "to_json": [15, 29, 43, 57, 75, 88, 106, 124, 143], "to_jsonstr": [16, 30, 44, 58, 76, 89, 107, 125, 144], "transform": [17, 18, 31, 32, 45, 46, 59, 60, 77, 78, 108, 110], "validate_data": [19, 33, 47, 61, 79, 91, 113, 127, 146], "block": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 150], "interfac": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 151], "plate": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 152], "compute_loft": 66, "from_two_polygon": 71, "get_average_fram": 72, "mesh_from_loft": 73, "elementnod": [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "add": [82, 94, 116], "remov": [86, 104, 122], "travers": [90, 112, 126], "elementtre": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "add_el": [95, 117, 130, 131], "add_group": [96, 118, 132], "get_node_by_nam": 100, "get_nodes_by_nam": 101, "print": [102, 139], "print_hierarchi": 103, "transform_numpi": 109, "transformed_numpi": 111, "groupnod": [114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "add_interact": 133, "get_by_typ": 137, "get_connected_el": 138, "print_el": 140, "print_interact": 141, "to_nodes_and_neighbor": 145, "develop": 147, "guid": 147, "exampl": 148, "document": 154, "compa": 154, "tabl": 154, "content": 154, "indic": 154, "instal": 155, "licens": 156, "tutori": 157}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Acknowledgements": [[0, "acknowledgements"]], "API Reference": [[1, "api-reference"]], "Packages": [[1, "packages"]], "compas_model.elements": [[2, "compas-model-elements"]], "Classes": [[2, "classes"]], "compas_model.model": [[3, "compas-model-model"]], "Beam": [[4, "beam"]], "Beam.ToString": [[5, "beam-tostring"]], "Beam.compute_aabb": [[6, "beam-compute-aabb"]], "Beam.compute_collision_mesh": [[7, "beam-compute-collision-mesh"]], "Beam.compute_face_polygons": [[8, "beam-compute-face-polygons"]], "Beam.compute_obb": [[9, "beam-compute-obb"]], "Beam.copy": [[10, "beam-copy"]], "Beam.from_json": [[11, "beam-from-json"]], "Beam.from_jsonstring": [[12, "beam-from-jsonstring"]], "Beam.from_line": [[13, "beam-from-line"]], "Beam.sha256": [[14, "beam-sha256"]], "Beam.to_json": [[15, "beam-to-json"]], "Beam.to_jsonstring": [[16, "beam-to-jsonstring"]], "Beam.transform": [[17, "beam-transform"]], "Beam.transformed": [[18, "beam-transformed"]], "Beam.validate_data": [[19, "beam-validate-data"]], "Block": [[20, "block"]], "Block.ToString": [[21, "block-tostring"]], "Block.compute_aabb": [[22, "block-compute-aabb"]], "Block.compute_collision_mesh": [[23, "block-compute-collision-mesh"]], "Block.compute_obb": [[24, "block-compute-obb"]], "Block.copy": [[25, "block-copy"]], "Block.from_json": [[26, "block-from-json"]], "Block.from_jsonstring": [[27, "block-from-jsonstring"]], "Block.sha256": [[28, "block-sha256"]], "Block.to_json": [[29, "block-to-json"]], "Block.to_jsonstring": [[30, "block-to-jsonstring"]], "Block.transform": [[31, "block-transform"]], "Block.transformed": [[32, "block-transformed"]], "Block.validate_data": [[33, "block-validate-data"]], "Element": [[34, "element"]], "Element.ToString": [[35, "element-tostring"]], "Element.compute_aabb": [[36, "element-compute-aabb"]], "Element.compute_collision_mesh": [[37, "element-compute-collision-mesh"]], "Element.compute_obb": [[38, "element-compute-obb"]], "Element.copy": [[39, "element-copy"]], "Element.from_json": [[40, "element-from-json"]], "Element.from_jsonstring": [[41, "element-from-jsonstring"]], "Element.sha256": [[42, "element-sha256"]], "Element.to_json": [[43, "element-to-json"]], "Element.to_jsonstring": [[44, "element-to-jsonstring"]], "Element.transform": [[45, "element-transform"]], "Element.transformed": [[46, "element-transformed"]], "Element.validate_data": [[47, "element-validate-data"]], "Interface": [[48, "interface"]], "Interface.ToString": [[49, "interface-tostring"]], "Interface.compute_aabb": [[50, "interface-compute-aabb"]], "Interface.compute_collision_mesh": [[51, "interface-compute-collision-mesh"]], "Interface.compute_obb": [[52, "interface-compute-obb"]], "Interface.copy": [[53, "interface-copy"]], "Interface.from_json": [[54, "interface-from-json"]], "Interface.from_jsonstring": [[55, "interface-from-jsonstring"]], "Interface.sha256": [[56, "interface-sha256"]], "Interface.to_json": [[57, "interface-to-json"]], "Interface.to_jsonstring": [[58, "interface-to-jsonstring"]], "Interface.transform": [[59, "interface-transform"]], "Interface.transformed": [[60, "interface-transformed"]], "Interface.validate_data": [[61, "interface-validate-data"]], "Plate": [[62, "plate"]], "Plate.ToString": [[63, "plate-tostring"]], "Plate.compute_aabb": [[64, "plate-compute-aabb"]], "Plate.compute_collision_mesh": [[65, "plate-compute-collision-mesh"]], "Plate.compute_loft": [[66, "plate-compute-loft"]], "Plate.compute_obb": [[67, "plate-compute-obb"]], "Plate.copy": [[68, "plate-copy"]], "Plate.from_json": [[69, "plate-from-json"]], "Plate.from_jsonstring": [[70, "plate-from-jsonstring"]], "Plate.from_two_polygons": [[71, "plate-from-two-polygons"]], "Plate.get_average_frame": [[72, "plate-get-average-frame"]], "Plate.mesh_from_loft": [[73, "plate-mesh-from-loft"]], "Plate.sha256": [[74, "plate-sha256"]], "Plate.to_json": [[75, "plate-to-json"]], "Plate.to_jsonstring": [[76, "plate-to-jsonstring"]], "Plate.transform": [[77, "plate-transform"]], "Plate.transformed": [[78, "plate-transformed"]], "Plate.validate_data": [[79, "plate-validate-data"]], "ElementNode": [[80, "elementnode"]], "ElementNode.ToString": [[81, "elementnode-tostring"]], "ElementNode.add": [[82, "elementnode-add"]], "ElementNode.copy": [[83, "elementnode-copy"]], "ElementNode.from_json": [[84, "elementnode-from-json"]], "ElementNode.from_jsonstring": [[85, "elementnode-from-jsonstring"]], "ElementNode.remove": [[86, "elementnode-remove"]], "ElementNode.sha256": [[87, "elementnode-sha256"]], "ElementNode.to_json": [[88, "elementnode-to-json"]], "ElementNode.to_jsonstring": [[89, "elementnode-to-jsonstring"]], "ElementNode.traverse": [[90, "elementnode-traverse"]], "ElementNode.validate_data": [[91, "elementnode-validate-data"]], "ElementTree": [[92, "elementtree"]], "ElementTree.ToString": [[93, "elementtree-tostring"]], "ElementTree.add": [[94, "elementtree-add"]], "ElementTree.add_element": [[95, "elementtree-add-element"]], "ElementTree.add_group": [[96, "elementtree-add-group"]], "ElementTree.copy": [[97, "elementtree-copy"]], "ElementTree.from_json": [[98, "elementtree-from-json"]], "ElementTree.from_jsonstring": [[99, "elementtree-from-jsonstring"]], "ElementTree.get_node_by_name": [[100, "elementtree-get-node-by-name"]], "ElementTree.get_nodes_by_name": [[101, "elementtree-get-nodes-by-name"]], "ElementTree.print": [[102, "elementtree-print"]], "ElementTree.print_hierarchy": [[103, "elementtree-print-hierarchy"]], "ElementTree.remove": [[104, "elementtree-remove"]], "ElementTree.sha256": [[105, "elementtree-sha256"]], "ElementTree.to_json": [[106, "elementtree-to-json"]], "ElementTree.to_jsonstring": [[107, "elementtree-to-jsonstring"]], "ElementTree.transform": [[108, "elementtree-transform"]], "ElementTree.transform_numpy": [[109, "elementtree-transform-numpy"]], "ElementTree.transformed": [[110, "elementtree-transformed"]], "ElementTree.transformed_numpy": [[111, "elementtree-transformed-numpy"]], "ElementTree.traverse": [[112, "elementtree-traverse"]], "ElementTree.validate_data": [[113, "elementtree-validate-data"]], "GroupNode": [[114, "groupnode"]], "GroupNode.ToString": [[115, "groupnode-tostring"]], "GroupNode.add": [[116, "groupnode-add"]], "GroupNode.add_element": [[117, "groupnode-add-element"]], "GroupNode.add_group": [[118, "groupnode-add-group"]], "GroupNode.copy": [[119, "groupnode-copy"]], "GroupNode.from_json": [[120, "groupnode-from-json"]], "GroupNode.from_jsonstring": [[121, "groupnode-from-jsonstring"]], "GroupNode.remove": [[122, "groupnode-remove"]], "GroupNode.sha256": [[123, "groupnode-sha256"]], "GroupNode.to_json": [[124, "groupnode-to-json"]], "GroupNode.to_jsonstring": [[125, "groupnode-to-jsonstring"]], "GroupNode.traverse": [[126, "groupnode-traverse"]], "GroupNode.validate_data": [[127, "groupnode-validate-data"]], "Model": [[128, "model"], [153, "model"]], "Model.ToString": [[129, "model-tostring"]], "Model.add_element": [[130, "model-add-element"]], "Model.add_elements": [[131, "model-add-elements"]], "Model.add_group": [[132, "model-add-group"]], "Model.add_interaction": [[133, "model-add-interaction"]], "Model.copy": [[134, "model-copy"]], "Model.from_json": [[135, "model-from-json"]], "Model.from_jsonstring": [[136, "model-from-jsonstring"]], "Model.get_by_type": [[137, "model-get-by-type"]], "Model.get_connected_elements": [[138, "model-get-connected-elements"]], "Model.print": [[139, "model-print"]], "Model.print_elements": [[140, "model-print-elements"]], "Model.print_interactions": [[141, "model-print-interactions"]], "Model.sha256": [[142, "model-sha256"]], "Model.to_json": [[143, "model-to-json"]], "Model.to_jsonstring": [[144, "model-to-jsonstring"]], "Model.to_nodes_and_neighbors": [[145, "model-to-nodes-and-neighbors"]], "Model.validate_data": [[146, "model-validate-data"]], "Development Guide": [[147, "development-guide"]], "Examples": [[148, "examples"]], "Elements: Beam": [[149, "elements-beam"]], "Elements: Block": [[150, "elements-block"]], "Elements: Interface": [[151, "elements-interface"]], "Elements: Plate": [[152, "elements-plate"]], "Documentation of COMPAS MODEL": [[154, "documentation-of-compas-model"]], "Table of Contents": [[154, "table-of-contents"]], "Indices and tables": [[154, "indices-and-tables"]], "Installation": [[155, "installation"]], "License": [[156, "license"]], "Tutorial": [[157, "tutorial"]]}, "indexentries": {"beam (class in compas_model.elements)": [[4, "compas_model.elements.Beam"]], "tostring() (beam method)": [[5, "compas_model.elements.Beam.ToString"]], "compute_aabb() (beam method)": [[6, "compas_model.elements.Beam.compute_aabb"]], "compute_collision_mesh() (beam method)": [[7, "compas_model.elements.Beam.compute_collision_mesh"]], "compute_face_polygons() (beam method)": [[8, "compas_model.elements.Beam.compute_face_polygons"]], "compute_obb() (beam method)": [[9, "compas_model.elements.Beam.compute_obb"]], "copy() (beam method)": [[10, "compas_model.elements.Beam.copy"]], "from_json() (beam class method)": [[11, "compas_model.elements.Beam.from_json"]], "from_jsonstring() (beam class method)": [[12, "compas_model.elements.Beam.from_jsonstring"]], "from_line() (beam class method)": [[13, "compas_model.elements.Beam.from_line"]], "sha256() (beam method)": [[14, "compas_model.elements.Beam.sha256"]], "to_json() (beam method)": [[15, "compas_model.elements.Beam.to_json"]], "to_jsonstring() (beam method)": [[16, "compas_model.elements.Beam.to_jsonstring"]], "transform() (beam method)": [[17, "compas_model.elements.Beam.transform"]], "transformed() (beam method)": [[18, "compas_model.elements.Beam.transformed"]], "validate_data() (beam class method)": [[19, "compas_model.elements.Beam.validate_data"]], "block (class in compas_model.elements)": [[20, "compas_model.elements.Block"]], "tostring() (block method)": [[21, "compas_model.elements.Block.ToString"]], "compute_aabb() (block method)": [[22, "compas_model.elements.Block.compute_aabb"]], "compute_collision_mesh() (block method)": [[23, "compas_model.elements.Block.compute_collision_mesh"]], "compute_obb() (block method)": [[24, "compas_model.elements.Block.compute_obb"]], "copy() (block method)": [[25, "compas_model.elements.Block.copy"]], "from_json() (block class method)": [[26, "compas_model.elements.Block.from_json"]], "from_jsonstring() (block class method)": [[27, "compas_model.elements.Block.from_jsonstring"]], "sha256() (block method)": [[28, "compas_model.elements.Block.sha256"]], "to_json() (block method)": [[29, "compas_model.elements.Block.to_json"]], "to_jsonstring() (block method)": [[30, "compas_model.elements.Block.to_jsonstring"]], "transform() (block method)": [[31, "compas_model.elements.Block.transform"]], "transformed() (block method)": [[32, "compas_model.elements.Block.transformed"]], "validate_data() (block class method)": [[33, "compas_model.elements.Block.validate_data"]], "element (class in compas_model.elements)": [[34, "compas_model.elements.Element"]], "tostring() (element method)": [[35, "compas_model.elements.Element.ToString"]], "compute_aabb() (element method)": [[36, "compas_model.elements.Element.compute_aabb"]], "compute_collision_mesh() (element method)": [[37, "compas_model.elements.Element.compute_collision_mesh"]], "compute_obb() (element method)": [[38, "compas_model.elements.Element.compute_obb"]], "copy() (element method)": [[39, "compas_model.elements.Element.copy"]], "from_json() (element class method)": [[40, "compas_model.elements.Element.from_json"]], "from_jsonstring() (element class method)": [[41, "compas_model.elements.Element.from_jsonstring"]], "sha256() (element method)": [[42, "compas_model.elements.Element.sha256"]], "to_json() (element method)": [[43, "compas_model.elements.Element.to_json"]], "to_jsonstring() (element method)": [[44, "compas_model.elements.Element.to_jsonstring"]], "transform() (element method)": [[45, "compas_model.elements.Element.transform"]], "transformed() (element method)": [[46, "compas_model.elements.Element.transformed"]], "validate_data() (element class method)": [[47, "compas_model.elements.Element.validate_data"]], "interface (class in compas_model.elements)": [[48, "compas_model.elements.Interface"]], "tostring() (interface method)": [[49, "compas_model.elements.Interface.ToString"]], "compute_aabb() (interface method)": [[50, "compas_model.elements.Interface.compute_aabb"]], "compute_collision_mesh() (interface method)": [[51, "compas_model.elements.Interface.compute_collision_mesh"]], "compute_obb() (interface method)": [[52, "compas_model.elements.Interface.compute_obb"]], "copy() (interface method)": [[53, "compas_model.elements.Interface.copy"]], "from_json() (interface class method)": [[54, "compas_model.elements.Interface.from_json"]], "from_jsonstring() (interface class method)": [[55, "compas_model.elements.Interface.from_jsonstring"]], "sha256() (interface method)": [[56, "compas_model.elements.Interface.sha256"]], "to_json() (interface method)": [[57, "compas_model.elements.Interface.to_json"]], "to_jsonstring() (interface method)": [[58, "compas_model.elements.Interface.to_jsonstring"]], "transform() (interface method)": [[59, "compas_model.elements.Interface.transform"]], "transformed() (interface method)": [[60, "compas_model.elements.Interface.transformed"]], "validate_data() (interface class method)": [[61, "compas_model.elements.Interface.validate_data"]], "plate (class in compas_model.elements)": [[62, "compas_model.elements.Plate"]], "tostring() (plate method)": [[63, "compas_model.elements.Plate.ToString"]], "compute_aabb() (plate method)": [[64, "compas_model.elements.Plate.compute_aabb"]], "compute_collision_mesh() (plate method)": [[65, "compas_model.elements.Plate.compute_collision_mesh"]], "compute_loft() (plate method)": [[66, "compas_model.elements.Plate.compute_loft"]], "compute_obb() (plate method)": [[67, "compas_model.elements.Plate.compute_obb"]], "copy() (plate method)": [[68, "compas_model.elements.Plate.copy"]], "from_json() (plate class method)": [[69, "compas_model.elements.Plate.from_json"]], "from_jsonstring() (plate class method)": [[70, "compas_model.elements.Plate.from_jsonstring"]], "from_two_polygons() (plate class method)": [[71, "compas_model.elements.Plate.from_two_polygons"]], "get_average_frame() (plate static method)": [[72, "compas_model.elements.Plate.get_average_frame"]], "mesh_from_loft() (plate static method)": [[73, "compas_model.elements.Plate.mesh_from_loft"]], "sha256() (plate method)": [[74, "compas_model.elements.Plate.sha256"]], "to_json() (plate method)": [[75, "compas_model.elements.Plate.to_json"]], "to_jsonstring() (plate method)": [[76, "compas_model.elements.Plate.to_jsonstring"]], "transform() (plate method)": [[77, "compas_model.elements.Plate.transform"]], "transformed() (plate method)": [[78, "compas_model.elements.Plate.transformed"]], "validate_data() (plate class method)": [[79, "compas_model.elements.Plate.validate_data"]], "elementnode (class in compas_model.model)": [[80, "compas_model.model.ElementNode"]], "tostring() (elementnode method)": [[81, "compas_model.model.ElementNode.ToString"]], "add() (elementnode method)": [[82, "compas_model.model.ElementNode.add"]], "copy() (elementnode method)": [[83, "compas_model.model.ElementNode.copy"]], "from_json() (elementnode class method)": [[84, "compas_model.model.ElementNode.from_json"]], "from_jsonstring() (elementnode class method)": [[85, "compas_model.model.ElementNode.from_jsonstring"]], "remove() (elementnode method)": [[86, "compas_model.model.ElementNode.remove"]], "sha256() (elementnode method)": [[87, "compas_model.model.ElementNode.sha256"]], "to_json() (elementnode method)": [[88, "compas_model.model.ElementNode.to_json"]], "to_jsonstring() (elementnode method)": [[89, "compas_model.model.ElementNode.to_jsonstring"]], "traverse() (elementnode method)": [[90, "compas_model.model.ElementNode.traverse"]], "validate_data() (elementnode class method)": [[91, "compas_model.model.ElementNode.validate_data"]], "elementtree (class in compas_model.model)": [[92, "compas_model.model.ElementTree"]], "tostring() (elementtree method)": [[93, "compas_model.model.ElementTree.ToString"]], "add() (elementtree method)": [[94, "compas_model.model.ElementTree.add"]], "add_element() (elementtree method)": [[95, "compas_model.model.ElementTree.add_element"]], "add_group() (elementtree method)": [[96, "compas_model.model.ElementTree.add_group"]], "copy() (elementtree method)": [[97, "compas_model.model.ElementTree.copy"]], "from_json() (elementtree class method)": [[98, "compas_model.model.ElementTree.from_json"]], "from_jsonstring() (elementtree class method)": [[99, "compas_model.model.ElementTree.from_jsonstring"]], "get_node_by_name() (elementtree method)": [[100, "compas_model.model.ElementTree.get_node_by_name"]], "get_nodes_by_name() (elementtree method)": [[101, "compas_model.model.ElementTree.get_nodes_by_name"]], "print() (elementtree method)": [[102, "compas_model.model.ElementTree.print"]], "print_hierarchy() (elementtree method)": [[103, "compas_model.model.ElementTree.print_hierarchy"]], "remove() (elementtree method)": [[104, "compas_model.model.ElementTree.remove"]], "sha256() (elementtree method)": [[105, "compas_model.model.ElementTree.sha256"]], "to_json() (elementtree method)": [[106, "compas_model.model.ElementTree.to_json"]], "to_jsonstring() (elementtree method)": [[107, "compas_model.model.ElementTree.to_jsonstring"]], "transform() (elementtree method)": [[108, "compas_model.model.ElementTree.transform"]], "transform_numpy() (elementtree method)": [[109, "compas_model.model.ElementTree.transform_numpy"]], "transformed() (elementtree method)": [[110, "compas_model.model.ElementTree.transformed"]], "transformed_numpy() (elementtree method)": [[111, "compas_model.model.ElementTree.transformed_numpy"]], "traverse() (elementtree method)": [[112, "compas_model.model.ElementTree.traverse"]], "validate_data() (elementtree class method)": [[113, "compas_model.model.ElementTree.validate_data"]], "groupnode (class in compas_model.model)": [[114, "compas_model.model.GroupNode"]], "tostring() (groupnode method)": [[115, "compas_model.model.GroupNode.ToString"]], "add() (groupnode method)": [[116, "compas_model.model.GroupNode.add"]], "add_element() (groupnode method)": [[117, "compas_model.model.GroupNode.add_element"]], "add_group() (groupnode method)": [[118, "compas_model.model.GroupNode.add_group"]], "copy() (groupnode method)": [[119, "compas_model.model.GroupNode.copy"]], "from_json() (groupnode class method)": [[120, "compas_model.model.GroupNode.from_json"]], "from_jsonstring() (groupnode class method)": [[121, "compas_model.model.GroupNode.from_jsonstring"]], "remove() (groupnode method)": [[122, "compas_model.model.GroupNode.remove"]], "sha256() (groupnode method)": [[123, "compas_model.model.GroupNode.sha256"]], "to_json() (groupnode method)": [[124, "compas_model.model.GroupNode.to_json"]], "to_jsonstring() (groupnode method)": [[125, "compas_model.model.GroupNode.to_jsonstring"]], "traverse() (groupnode method)": [[126, "compas_model.model.GroupNode.traverse"]], "validate_data() (groupnode class method)": [[127, "compas_model.model.GroupNode.validate_data"]], "model (class in compas_model.model)": [[128, "compas_model.model.Model"]], "tostring() (model method)": [[129, "compas_model.model.Model.ToString"]], "add_element() (model method)": [[130, "compas_model.model.Model.add_element"]], "add_elements() (model method)": [[131, "compas_model.model.Model.add_elements"]], "add_group() (model method)": [[132, "compas_model.model.Model.add_group"]], "add_interaction() (model method)": [[133, "compas_model.model.Model.add_interaction"]], "copy() (model method)": [[134, "compas_model.model.Model.copy"]], "from_json() (model class method)": [[135, "compas_model.model.Model.from_json"]], "from_jsonstring() (model class method)": [[136, "compas_model.model.Model.from_jsonstring"]], "get_by_type() (model method)": [[137, "compas_model.model.Model.get_by_type"]], "get_connected_elements() (model method)": [[138, "compas_model.model.Model.get_connected_elements"]], "print() (model method)": [[139, "compas_model.model.Model.print"]], "print_elements() (model method)": [[140, "compas_model.model.Model.print_elements"]], "print_interactions() (model method)": [[141, "compas_model.model.Model.print_interactions"]], "sha256() (model method)": [[142, "compas_model.model.Model.sha256"]], "to_json() (model method)": [[143, "compas_model.model.Model.to_json"]], "to_jsonstring() (model method)": [[144, "compas_model.model.Model.to_jsonstring"]], "to_nodes_and_neighbors() (model method)": [[145, "compas_model.model.Model.to_nodes_and_neighbors"]], "validate_data() (model class method)": [[146, "compas_model.model.Model.validate_data"]]}})