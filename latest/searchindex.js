Search.setIndex({"docnames": ["acknowledgements", "api", "api/compas_model.elements", "api/compas_model.model", "api/generated/compas_model.elements.BeamElement", "api/generated/compas_model.elements.BeamElement.ToString", "api/generated/compas_model.elements.BeamElement.__init__", "api/generated/compas_model.elements.BeamElement.compute_aabb", "api/generated/compas_model.elements.BeamElement.compute_collision_mesh", "api/generated/compas_model.elements.BeamElement.compute_face_polygons", "api/generated/compas_model.elements.BeamElement.compute_obb", "api/generated/compas_model.elements.BeamElement.copy", "api/generated/compas_model.elements.BeamElement.from_json", "api/generated/compas_model.elements.BeamElement.from_jsonstring", "api/generated/compas_model.elements.BeamElement.from_line", "api/generated/compas_model.elements.BeamElement.sha256", "api/generated/compas_model.elements.BeamElement.to_json", "api/generated/compas_model.elements.BeamElement.to_jsonstring", "api/generated/compas_model.elements.BeamElement.transform", "api/generated/compas_model.elements.BeamElement.transformed", "api/generated/compas_model.elements.BeamElement.validate_data", "api/generated/compas_model.elements.BlockElement", "api/generated/compas_model.elements.BlockElement.ToString", "api/generated/compas_model.elements.BlockElement.__init__", "api/generated/compas_model.elements.BlockElement.compute_aabb", "api/generated/compas_model.elements.BlockElement.compute_collision_mesh", "api/generated/compas_model.elements.BlockElement.compute_obb", "api/generated/compas_model.elements.BlockElement.copy", "api/generated/compas_model.elements.BlockElement.from_json", "api/generated/compas_model.elements.BlockElement.from_jsonstring", "api/generated/compas_model.elements.BlockElement.sha256", "api/generated/compas_model.elements.BlockElement.to_json", "api/generated/compas_model.elements.BlockElement.to_jsonstring", "api/generated/compas_model.elements.BlockElement.transform", "api/generated/compas_model.elements.BlockElement.transformed", "api/generated/compas_model.elements.BlockElement.validate_data", "api/generated/compas_model.elements.Element", "api/generated/compas_model.elements.Element.ToString", "api/generated/compas_model.elements.Element.__init__", "api/generated/compas_model.elements.Element.compute_aabb", "api/generated/compas_model.elements.Element.compute_collision_mesh", "api/generated/compas_model.elements.Element.compute_obb", "api/generated/compas_model.elements.Element.copy", "api/generated/compas_model.elements.Element.from_json", "api/generated/compas_model.elements.Element.from_jsonstring", "api/generated/compas_model.elements.Element.sha256", "api/generated/compas_model.elements.Element.to_json", "api/generated/compas_model.elements.Element.to_jsonstring", "api/generated/compas_model.elements.Element.transform", "api/generated/compas_model.elements.Element.transformed", "api/generated/compas_model.elements.Element.validate_data", "api/generated/compas_model.elements.InterfaceElement", "api/generated/compas_model.elements.InterfaceElement.ToString", "api/generated/compas_model.elements.InterfaceElement.__init__", "api/generated/compas_model.elements.InterfaceElement.compute_aabb", "api/generated/compas_model.elements.InterfaceElement.compute_collision_mesh", "api/generated/compas_model.elements.InterfaceElement.compute_obb", "api/generated/compas_model.elements.InterfaceElement.copy", "api/generated/compas_model.elements.InterfaceElement.from_json", "api/generated/compas_model.elements.InterfaceElement.from_jsonstring", "api/generated/compas_model.elements.InterfaceElement.sha256", "api/generated/compas_model.elements.InterfaceElement.to_json", "api/generated/compas_model.elements.InterfaceElement.to_jsonstring", "api/generated/compas_model.elements.InterfaceElement.transform", "api/generated/compas_model.elements.InterfaceElement.transformed", "api/generated/compas_model.elements.InterfaceElement.validate_data", "api/generated/compas_model.elements.PlateElement", "api/generated/compas_model.elements.PlateElement.ToString", "api/generated/compas_model.elements.PlateElement.__init__", "api/generated/compas_model.elements.PlateElement.compute_aabb", "api/generated/compas_model.elements.PlateElement.compute_collision_mesh", "api/generated/compas_model.elements.PlateElement.compute_loft", "api/generated/compas_model.elements.PlateElement.compute_obb", "api/generated/compas_model.elements.PlateElement.copy", "api/generated/compas_model.elements.PlateElement.from_json", "api/generated/compas_model.elements.PlateElement.from_jsonstring", "api/generated/compas_model.elements.PlateElement.from_two_polygons", "api/generated/compas_model.elements.PlateElement.get_average_frame", "api/generated/compas_model.elements.PlateElement.mesh_from_loft", "api/generated/compas_model.elements.PlateElement.sha256", "api/generated/compas_model.elements.PlateElement.to_json", "api/generated/compas_model.elements.PlateElement.to_jsonstring", "api/generated/compas_model.elements.PlateElement.transform", "api/generated/compas_model.elements.PlateElement.transformed", "api/generated/compas_model.elements.PlateElement.validate_data", "api/generated/compas_model.model.ElementNode", "api/generated/compas_model.model.ElementNode.ToString", "api/generated/compas_model.model.ElementNode.__init__", "api/generated/compas_model.model.ElementNode.add", "api/generated/compas_model.model.ElementNode.add_element", "api/generated/compas_model.model.ElementNode.copy", "api/generated/compas_model.model.ElementNode.from_json", "api/generated/compas_model.model.ElementNode.from_jsonstring", "api/generated/compas_model.model.ElementNode.remove", "api/generated/compas_model.model.ElementNode.sha256", "api/generated/compas_model.model.ElementNode.to_json", "api/generated/compas_model.model.ElementNode.to_jsonstring", "api/generated/compas_model.model.ElementNode.traverse", "api/generated/compas_model.model.ElementNode.validate_data", "api/generated/compas_model.model.ElementTree", "api/generated/compas_model.model.ElementTree.ToString", "api/generated/compas_model.model.ElementTree.__init__", "api/generated/compas_model.model.ElementTree.add", "api/generated/compas_model.model.ElementTree.compute_aabb", "api/generated/compas_model.model.ElementTree.compute_obb", "api/generated/compas_model.model.ElementTree.copy", "api/generated/compas_model.model.ElementTree.find_element_node", "api/generated/compas_model.model.ElementTree.from_json", "api/generated/compas_model.model.ElementTree.from_jsonstring", "api/generated/compas_model.model.ElementTree.get_node_by_name", "api/generated/compas_model.model.ElementTree.get_nodes_by_name", "api/generated/compas_model.model.ElementTree.print_hierarchy", "api/generated/compas_model.model.ElementTree.remove", "api/generated/compas_model.model.ElementTree.rotate", "api/generated/compas_model.model.ElementTree.rotated", "api/generated/compas_model.model.ElementTree.scale", "api/generated/compas_model.model.ElementTree.scaled", "api/generated/compas_model.model.ElementTree.sha256", "api/generated/compas_model.model.ElementTree.to_json", "api/generated/compas_model.model.ElementTree.to_jsonstring", "api/generated/compas_model.model.ElementTree.transform", "api/generated/compas_model.model.ElementTree.transform_numpy", "api/generated/compas_model.model.ElementTree.transformed", "api/generated/compas_model.model.ElementTree.transformed_numpy", "api/generated/compas_model.model.ElementTree.translate", "api/generated/compas_model.model.ElementTree.translated", "api/generated/compas_model.model.ElementTree.traverse", "api/generated/compas_model.model.ElementTree.validate_data", "api/generated/compas_model.model.Interaction", "api/generated/compas_model.model.Interaction.ToString", "api/generated/compas_model.model.Interaction.__init__", "api/generated/compas_model.model.Interaction.copy", "api/generated/compas_model.model.Interaction.from_json", "api/generated/compas_model.model.Interaction.from_jsonstring", "api/generated/compas_model.model.Interaction.sha256", "api/generated/compas_model.model.Interaction.to_json", "api/generated/compas_model.model.Interaction.to_jsonstring", "api/generated/compas_model.model.Interaction.validate_data", "api/generated/compas_model.model.InteractionGraph", "api/generated/compas_model.model.InteractionGraph.ToString", "api/generated/compas_model.model.InteractionGraph.__init__", "api/generated/compas_model.model.InteractionGraph.aabb", "api/generated/compas_model.model.InteractionGraph.add_edge", "api/generated/compas_model.model.InteractionGraph.add_node", "api/generated/compas_model.model.InteractionGraph.adjacency_matrix", "api/generated/compas_model.model.InteractionGraph.clear", "api/generated/compas_model.model.InteractionGraph.complement", "api/generated/compas_model.model.InteractionGraph.compute_aabb", "api/generated/compas_model.model.InteractionGraph.compute_obb", "api/generated/compas_model.model.InteractionGraph.connected_edges", "api/generated/compas_model.model.InteractionGraph.connected_nodes", "api/generated/compas_model.model.InteractionGraph.connectivity_matrix", "api/generated/compas_model.model.InteractionGraph.copy", "api/generated/compas_model.model.InteractionGraph.count_crossings", "api/generated/compas_model.model.InteractionGraph.degree", "api/generated/compas_model.model.InteractionGraph.degree_in", "api/generated/compas_model.model.InteractionGraph.degree_matrix", "api/generated/compas_model.model.InteractionGraph.degree_out", "api/generated/compas_model.model.InteractionGraph.delete_edge", "api/generated/compas_model.model.InteractionGraph.delete_node", "api/generated/compas_model.model.InteractionGraph.edge_attribute", "api/generated/compas_model.model.InteractionGraph.edge_attributes", "api/generated/compas_model.model.InteractionGraph.edge_coordinates", "api/generated/compas_model.model.InteractionGraph.edge_direction", "api/generated/compas_model.model.InteractionGraph.edge_end", "api/generated/compas_model.model.InteractionGraph.edge_index", "api/generated/compas_model.model.InteractionGraph.edge_length", "api/generated/compas_model.model.InteractionGraph.edge_line", "api/generated/compas_model.model.InteractionGraph.edge_midpoint", "api/generated/compas_model.model.InteractionGraph.edge_point", "api/generated/compas_model.model.InteractionGraph.edge_sample", "api/generated/compas_model.model.InteractionGraph.edge_start", "api/generated/compas_model.model.InteractionGraph.edge_vector", "api/generated/compas_model.model.InteractionGraph.edges", "api/generated/compas_model.model.InteractionGraph.edges_attribute", "api/generated/compas_model.model.InteractionGraph.edges_attributes", "api/generated/compas_model.model.InteractionGraph.edges_where", "api/generated/compas_model.model.InteractionGraph.edges_where_predicate", "api/generated/compas_model.model.InteractionGraph.embed_in_plane", "api/generated/compas_model.model.InteractionGraph.exploded", "api/generated/compas_model.model.InteractionGraph.find_crossings", "api/generated/compas_model.model.InteractionGraph.find_cycles", "api/generated/compas_model.model.InteractionGraph.from_edges", "api/generated/compas_model.model.InteractionGraph.from_json", "api/generated/compas_model.model.InteractionGraph.from_jsonstring", "api/generated/compas_model.model.InteractionGraph.from_lines", "api/generated/compas_model.model.InteractionGraph.from_networkx", "api/generated/compas_model.model.InteractionGraph.from_nodes_and_edges", "api/generated/compas_model.model.InteractionGraph.from_obj", "api/generated/compas_model.model.InteractionGraph.from_pointcloud", "api/generated/compas_model.model.InteractionGraph.gkey_node", "api/generated/compas_model.model.InteractionGraph.has_edge", "api/generated/compas_model.model.InteractionGraph.has_node", "api/generated/compas_model.model.InteractionGraph.index_edge", "api/generated/compas_model.model.InteractionGraph.index_node", "api/generated/compas_model.model.InteractionGraph.is_connected", "api/generated/compas_model.model.InteractionGraph.is_crossed", "api/generated/compas_model.model.InteractionGraph.is_leaf", "api/generated/compas_model.model.InteractionGraph.is_node_connected", "api/generated/compas_model.model.InteractionGraph.is_planar", "api/generated/compas_model.model.InteractionGraph.is_planar_embedding", "api/generated/compas_model.model.InteractionGraph.is_xy", "api/generated/compas_model.model.InteractionGraph.join_edges", "api/generated/compas_model.model.InteractionGraph.laplacian_matrix", "api/generated/compas_model.model.InteractionGraph.leaves", "api/generated/compas_model.model.InteractionGraph.neighborhood", "api/generated/compas_model.model.InteractionGraph.neighbors", "api/generated/compas_model.model.InteractionGraph.neighbors_in", "api/generated/compas_model.model.InteractionGraph.neighbors_out", "api/generated/compas_model.model.InteractionGraph.node_attribute", "api/generated/compas_model.model.InteractionGraph.node_attributes", "api/generated/compas_model.model.InteractionGraph.node_coordinates", "api/generated/compas_model.model.InteractionGraph.node_edges", "api/generated/compas_model.model.InteractionGraph.node_gkey", "api/generated/compas_model.model.InteractionGraph.node_index", "api/generated/compas_model.model.InteractionGraph.node_laplacian", "api/generated/compas_model.model.InteractionGraph.node_neighborhood_centroid", "api/generated/compas_model.model.InteractionGraph.node_point", "api/generated/compas_model.model.InteractionGraph.node_sample", "api/generated/compas_model.model.InteractionGraph.nodes", "api/generated/compas_model.model.InteractionGraph.nodes_attribute", "api/generated/compas_model.model.InteractionGraph.nodes_attributes", "api/generated/compas_model.model.InteractionGraph.nodes_where", "api/generated/compas_model.model.InteractionGraph.nodes_where_predicate", "api/generated/compas_model.model.InteractionGraph.number_of_edges", "api/generated/compas_model.model.InteractionGraph.number_of_nodes", "api/generated/compas_model.model.InteractionGraph.obb", "api/generated/compas_model.model.InteractionGraph.rotate", "api/generated/compas_model.model.InteractionGraph.rotated", "api/generated/compas_model.model.InteractionGraph.scale", "api/generated/compas_model.model.InteractionGraph.scaled", "api/generated/compas_model.model.InteractionGraph.sha256", "api/generated/compas_model.model.InteractionGraph.shortest_path", "api/generated/compas_model.model.InteractionGraph.smooth", "api/generated/compas_model.model.InteractionGraph.split_edge", "api/generated/compas_model.model.InteractionGraph.summary", "api/generated/compas_model.model.InteractionGraph.to_json", "api/generated/compas_model.model.InteractionGraph.to_jsonstring", "api/generated/compas_model.model.InteractionGraph.to_lines", "api/generated/compas_model.model.InteractionGraph.to_networkx", "api/generated/compas_model.model.InteractionGraph.to_nodes_and_edges", "api/generated/compas_model.model.InteractionGraph.to_obj", "api/generated/compas_model.model.InteractionGraph.to_points", "api/generated/compas_model.model.InteractionGraph.transform", "api/generated/compas_model.model.InteractionGraph.transform_numpy", "api/generated/compas_model.model.InteractionGraph.transformed", "api/generated/compas_model.model.InteractionGraph.transformed_numpy", "api/generated/compas_model.model.InteractionGraph.translate", "api/generated/compas_model.model.InteractionGraph.translated", "api/generated/compas_model.model.InteractionGraph.unset_edge_attribute", "api/generated/compas_model.model.InteractionGraph.unset_node_attribute", "api/generated/compas_model.model.InteractionGraph.update_default_edge_attributes", "api/generated/compas_model.model.InteractionGraph.update_default_node_attributes", "api/generated/compas_model.model.InteractionGraph.validate_data", "api/generated/compas_model.model.Model", "api/generated/compas_model.model.Model.ToString", "api/generated/compas_model.model.Model.__init__", "api/generated/compas_model.model.Model.add_element", "api/generated/compas_model.model.Model.add_elements", "api/generated/compas_model.model.Model.add_interaction", "api/generated/compas_model.model.Model.add_interaction_by_index", "api/generated/compas_model.model.Model.compute_aabb", "api/generated/compas_model.model.Model.compute_obb", "api/generated/compas_model.model.Model.copy", "api/generated/compas_model.model.Model.from_json", "api/generated/compas_model.model.Model.from_jsonstring", "api/generated/compas_model.model.Model.get_interactions_lines", "api/generated/compas_model.model.Model.print", "api/generated/compas_model.model.Model.remove_element", "api/generated/compas_model.model.Model.rotate", "api/generated/compas_model.model.Model.rotated", "api/generated/compas_model.model.Model.scale", "api/generated/compas_model.model.Model.scaled", "api/generated/compas_model.model.Model.sha256", "api/generated/compas_model.model.Model.to_json", "api/generated/compas_model.model.Model.to_jsonstring", "api/generated/compas_model.model.Model.transform", "api/generated/compas_model.model.Model.transform_numpy", "api/generated/compas_model.model.Model.transformed", "api/generated/compas_model.model.Model.transformed_numpy", "api/generated/compas_model.model.Model.translate", "api/generated/compas_model.model.Model.translated", "api/generated/compas_model.model.Model.validate_data", "devguide", "examples", "examples/elements_beam", "examples/elements_block", "examples/elements_interface", "examples/elements_plate", "examples/model_beams", "examples/model_form_finding", "examples/model_masonry", "examples/model_plates", "examples/model_robots", "examples/scene_rhino", "index", "installation", "license", "tutorial"], "filenames": ["acknowledgements.rst", "api.rst", "api/compas_model.elements.rst", "api/compas_model.model.rst", "api/generated/compas_model.elements.BeamElement.rst", "api/generated/compas_model.elements.BeamElement.ToString.rst", "api/generated/compas_model.elements.BeamElement.__init__.rst", "api/generated/compas_model.elements.BeamElement.compute_aabb.rst", "api/generated/compas_model.elements.BeamElement.compute_collision_mesh.rst", "api/generated/compas_model.elements.BeamElement.compute_face_polygons.rst", "api/generated/compas_model.elements.BeamElement.compute_obb.rst", "api/generated/compas_model.elements.BeamElement.copy.rst", "api/generated/compas_model.elements.BeamElement.from_json.rst", "api/generated/compas_model.elements.BeamElement.from_jsonstring.rst", "api/generated/compas_model.elements.BeamElement.from_line.rst", "api/generated/compas_model.elements.BeamElement.sha256.rst", "api/generated/compas_model.elements.BeamElement.to_json.rst", "api/generated/compas_model.elements.BeamElement.to_jsonstring.rst", "api/generated/compas_model.elements.BeamElement.transform.rst", "api/generated/compas_model.elements.BeamElement.transformed.rst", "api/generated/compas_model.elements.BeamElement.validate_data.rst", "api/generated/compas_model.elements.BlockElement.rst", "api/generated/compas_model.elements.BlockElement.ToString.rst", "api/generated/compas_model.elements.BlockElement.__init__.rst", "api/generated/compas_model.elements.BlockElement.compute_aabb.rst", "api/generated/compas_model.elements.BlockElement.compute_collision_mesh.rst", "api/generated/compas_model.elements.BlockElement.compute_obb.rst", "api/generated/compas_model.elements.BlockElement.copy.rst", "api/generated/compas_model.elements.BlockElement.from_json.rst", "api/generated/compas_model.elements.BlockElement.from_jsonstring.rst", "api/generated/compas_model.elements.BlockElement.sha256.rst", "api/generated/compas_model.elements.BlockElement.to_json.rst", "api/generated/compas_model.elements.BlockElement.to_jsonstring.rst", "api/generated/compas_model.elements.BlockElement.transform.rst", "api/generated/compas_model.elements.BlockElement.transformed.rst", "api/generated/compas_model.elements.BlockElement.validate_data.rst", "api/generated/compas_model.elements.Element.rst", "api/generated/compas_model.elements.Element.ToString.rst", "api/generated/compas_model.elements.Element.__init__.rst", "api/generated/compas_model.elements.Element.compute_aabb.rst", "api/generated/compas_model.elements.Element.compute_collision_mesh.rst", "api/generated/compas_model.elements.Element.compute_obb.rst", "api/generated/compas_model.elements.Element.copy.rst", "api/generated/compas_model.elements.Element.from_json.rst", "api/generated/compas_model.elements.Element.from_jsonstring.rst", "api/generated/compas_model.elements.Element.sha256.rst", "api/generated/compas_model.elements.Element.to_json.rst", "api/generated/compas_model.elements.Element.to_jsonstring.rst", "api/generated/compas_model.elements.Element.transform.rst", "api/generated/compas_model.elements.Element.transformed.rst", "api/generated/compas_model.elements.Element.validate_data.rst", "api/generated/compas_model.elements.InterfaceElement.rst", "api/generated/compas_model.elements.InterfaceElement.ToString.rst", "api/generated/compas_model.elements.InterfaceElement.__init__.rst", "api/generated/compas_model.elements.InterfaceElement.compute_aabb.rst", "api/generated/compas_model.elements.InterfaceElement.compute_collision_mesh.rst", "api/generated/compas_model.elements.InterfaceElement.compute_obb.rst", "api/generated/compas_model.elements.InterfaceElement.copy.rst", "api/generated/compas_model.elements.InterfaceElement.from_json.rst", "api/generated/compas_model.elements.InterfaceElement.from_jsonstring.rst", "api/generated/compas_model.elements.InterfaceElement.sha256.rst", "api/generated/compas_model.elements.InterfaceElement.to_json.rst", "api/generated/compas_model.elements.InterfaceElement.to_jsonstring.rst", "api/generated/compas_model.elements.InterfaceElement.transform.rst", "api/generated/compas_model.elements.InterfaceElement.transformed.rst", "api/generated/compas_model.elements.InterfaceElement.validate_data.rst", "api/generated/compas_model.elements.PlateElement.rst", "api/generated/compas_model.elements.PlateElement.ToString.rst", "api/generated/compas_model.elements.PlateElement.__init__.rst", "api/generated/compas_model.elements.PlateElement.compute_aabb.rst", "api/generated/compas_model.elements.PlateElement.compute_collision_mesh.rst", "api/generated/compas_model.elements.PlateElement.compute_loft.rst", "api/generated/compas_model.elements.PlateElement.compute_obb.rst", "api/generated/compas_model.elements.PlateElement.copy.rst", "api/generated/compas_model.elements.PlateElement.from_json.rst", "api/generated/compas_model.elements.PlateElement.from_jsonstring.rst", "api/generated/compas_model.elements.PlateElement.from_two_polygons.rst", "api/generated/compas_model.elements.PlateElement.get_average_frame.rst", "api/generated/compas_model.elements.PlateElement.mesh_from_loft.rst", "api/generated/compas_model.elements.PlateElement.sha256.rst", "api/generated/compas_model.elements.PlateElement.to_json.rst", "api/generated/compas_model.elements.PlateElement.to_jsonstring.rst", "api/generated/compas_model.elements.PlateElement.transform.rst", "api/generated/compas_model.elements.PlateElement.transformed.rst", "api/generated/compas_model.elements.PlateElement.validate_data.rst", "api/generated/compas_model.model.ElementNode.rst", "api/generated/compas_model.model.ElementNode.ToString.rst", "api/generated/compas_model.model.ElementNode.__init__.rst", "api/generated/compas_model.model.ElementNode.add.rst", "api/generated/compas_model.model.ElementNode.add_element.rst", "api/generated/compas_model.model.ElementNode.copy.rst", "api/generated/compas_model.model.ElementNode.from_json.rst", "api/generated/compas_model.model.ElementNode.from_jsonstring.rst", "api/generated/compas_model.model.ElementNode.remove.rst", "api/generated/compas_model.model.ElementNode.sha256.rst", "api/generated/compas_model.model.ElementNode.to_json.rst", "api/generated/compas_model.model.ElementNode.to_jsonstring.rst", "api/generated/compas_model.model.ElementNode.traverse.rst", "api/generated/compas_model.model.ElementNode.validate_data.rst", "api/generated/compas_model.model.ElementTree.rst", "api/generated/compas_model.model.ElementTree.ToString.rst", "api/generated/compas_model.model.ElementTree.__init__.rst", "api/generated/compas_model.model.ElementTree.add.rst", "api/generated/compas_model.model.ElementTree.compute_aabb.rst", "api/generated/compas_model.model.ElementTree.compute_obb.rst", "api/generated/compas_model.model.ElementTree.copy.rst", "api/generated/compas_model.model.ElementTree.find_element_node.rst", "api/generated/compas_model.model.ElementTree.from_json.rst", "api/generated/compas_model.model.ElementTree.from_jsonstring.rst", "api/generated/compas_model.model.ElementTree.get_node_by_name.rst", "api/generated/compas_model.model.ElementTree.get_nodes_by_name.rst", "api/generated/compas_model.model.ElementTree.print_hierarchy.rst", "api/generated/compas_model.model.ElementTree.remove.rst", "api/generated/compas_model.model.ElementTree.rotate.rst", "api/generated/compas_model.model.ElementTree.rotated.rst", "api/generated/compas_model.model.ElementTree.scale.rst", "api/generated/compas_model.model.ElementTree.scaled.rst", "api/generated/compas_model.model.ElementTree.sha256.rst", "api/generated/compas_model.model.ElementTree.to_json.rst", "api/generated/compas_model.model.ElementTree.to_jsonstring.rst", "api/generated/compas_model.model.ElementTree.transform.rst", "api/generated/compas_model.model.ElementTree.transform_numpy.rst", "api/generated/compas_model.model.ElementTree.transformed.rst", "api/generated/compas_model.model.ElementTree.transformed_numpy.rst", "api/generated/compas_model.model.ElementTree.translate.rst", "api/generated/compas_model.model.ElementTree.translated.rst", "api/generated/compas_model.model.ElementTree.traverse.rst", "api/generated/compas_model.model.ElementTree.validate_data.rst", "api/generated/compas_model.model.Interaction.rst", "api/generated/compas_model.model.Interaction.ToString.rst", "api/generated/compas_model.model.Interaction.__init__.rst", "api/generated/compas_model.model.Interaction.copy.rst", "api/generated/compas_model.model.Interaction.from_json.rst", "api/generated/compas_model.model.Interaction.from_jsonstring.rst", "api/generated/compas_model.model.Interaction.sha256.rst", "api/generated/compas_model.model.Interaction.to_json.rst", "api/generated/compas_model.model.Interaction.to_jsonstring.rst", "api/generated/compas_model.model.Interaction.validate_data.rst", "api/generated/compas_model.model.InteractionGraph.rst", "api/generated/compas_model.model.InteractionGraph.ToString.rst", "api/generated/compas_model.model.InteractionGraph.__init__.rst", "api/generated/compas_model.model.InteractionGraph.aabb.rst", "api/generated/compas_model.model.InteractionGraph.add_edge.rst", "api/generated/compas_model.model.InteractionGraph.add_node.rst", "api/generated/compas_model.model.InteractionGraph.adjacency_matrix.rst", "api/generated/compas_model.model.InteractionGraph.clear.rst", "api/generated/compas_model.model.InteractionGraph.complement.rst", "api/generated/compas_model.model.InteractionGraph.compute_aabb.rst", "api/generated/compas_model.model.InteractionGraph.compute_obb.rst", "api/generated/compas_model.model.InteractionGraph.connected_edges.rst", "api/generated/compas_model.model.InteractionGraph.connected_nodes.rst", "api/generated/compas_model.model.InteractionGraph.connectivity_matrix.rst", "api/generated/compas_model.model.InteractionGraph.copy.rst", "api/generated/compas_model.model.InteractionGraph.count_crossings.rst", "api/generated/compas_model.model.InteractionGraph.degree.rst", "api/generated/compas_model.model.InteractionGraph.degree_in.rst", "api/generated/compas_model.model.InteractionGraph.degree_matrix.rst", "api/generated/compas_model.model.InteractionGraph.degree_out.rst", "api/generated/compas_model.model.InteractionGraph.delete_edge.rst", "api/generated/compas_model.model.InteractionGraph.delete_node.rst", "api/generated/compas_model.model.InteractionGraph.edge_attribute.rst", "api/generated/compas_model.model.InteractionGraph.edge_attributes.rst", "api/generated/compas_model.model.InteractionGraph.edge_coordinates.rst", "api/generated/compas_model.model.InteractionGraph.edge_direction.rst", "api/generated/compas_model.model.InteractionGraph.edge_end.rst", "api/generated/compas_model.model.InteractionGraph.edge_index.rst", "api/generated/compas_model.model.InteractionGraph.edge_length.rst", "api/generated/compas_model.model.InteractionGraph.edge_line.rst", "api/generated/compas_model.model.InteractionGraph.edge_midpoint.rst", "api/generated/compas_model.model.InteractionGraph.edge_point.rst", "api/generated/compas_model.model.InteractionGraph.edge_sample.rst", "api/generated/compas_model.model.InteractionGraph.edge_start.rst", "api/generated/compas_model.model.InteractionGraph.edge_vector.rst", "api/generated/compas_model.model.InteractionGraph.edges.rst", "api/generated/compas_model.model.InteractionGraph.edges_attribute.rst", "api/generated/compas_model.model.InteractionGraph.edges_attributes.rst", "api/generated/compas_model.model.InteractionGraph.edges_where.rst", "api/generated/compas_model.model.InteractionGraph.edges_where_predicate.rst", "api/generated/compas_model.model.InteractionGraph.embed_in_plane.rst", "api/generated/compas_model.model.InteractionGraph.exploded.rst", "api/generated/compas_model.model.InteractionGraph.find_crossings.rst", "api/generated/compas_model.model.InteractionGraph.find_cycles.rst", "api/generated/compas_model.model.InteractionGraph.from_edges.rst", "api/generated/compas_model.model.InteractionGraph.from_json.rst", "api/generated/compas_model.model.InteractionGraph.from_jsonstring.rst", "api/generated/compas_model.model.InteractionGraph.from_lines.rst", "api/generated/compas_model.model.InteractionGraph.from_networkx.rst", "api/generated/compas_model.model.InteractionGraph.from_nodes_and_edges.rst", "api/generated/compas_model.model.InteractionGraph.from_obj.rst", "api/generated/compas_model.model.InteractionGraph.from_pointcloud.rst", "api/generated/compas_model.model.InteractionGraph.gkey_node.rst", "api/generated/compas_model.model.InteractionGraph.has_edge.rst", "api/generated/compas_model.model.InteractionGraph.has_node.rst", "api/generated/compas_model.model.InteractionGraph.index_edge.rst", "api/generated/compas_model.model.InteractionGraph.index_node.rst", "api/generated/compas_model.model.InteractionGraph.is_connected.rst", "api/generated/compas_model.model.InteractionGraph.is_crossed.rst", "api/generated/compas_model.model.InteractionGraph.is_leaf.rst", "api/generated/compas_model.model.InteractionGraph.is_node_connected.rst", "api/generated/compas_model.model.InteractionGraph.is_planar.rst", "api/generated/compas_model.model.InteractionGraph.is_planar_embedding.rst", "api/generated/compas_model.model.InteractionGraph.is_xy.rst", "api/generated/compas_model.model.InteractionGraph.join_edges.rst", "api/generated/compas_model.model.InteractionGraph.laplacian_matrix.rst", "api/generated/compas_model.model.InteractionGraph.leaves.rst", "api/generated/compas_model.model.InteractionGraph.neighborhood.rst", "api/generated/compas_model.model.InteractionGraph.neighbors.rst", "api/generated/compas_model.model.InteractionGraph.neighbors_in.rst", "api/generated/compas_model.model.InteractionGraph.neighbors_out.rst", "api/generated/compas_model.model.InteractionGraph.node_attribute.rst", "api/generated/compas_model.model.InteractionGraph.node_attributes.rst", "api/generated/compas_model.model.InteractionGraph.node_coordinates.rst", "api/generated/compas_model.model.InteractionGraph.node_edges.rst", "api/generated/compas_model.model.InteractionGraph.node_gkey.rst", "api/generated/compas_model.model.InteractionGraph.node_index.rst", "api/generated/compas_model.model.InteractionGraph.node_laplacian.rst", "api/generated/compas_model.model.InteractionGraph.node_neighborhood_centroid.rst", "api/generated/compas_model.model.InteractionGraph.node_point.rst", "api/generated/compas_model.model.InteractionGraph.node_sample.rst", "api/generated/compas_model.model.InteractionGraph.nodes.rst", "api/generated/compas_model.model.InteractionGraph.nodes_attribute.rst", "api/generated/compas_model.model.InteractionGraph.nodes_attributes.rst", "api/generated/compas_model.model.InteractionGraph.nodes_where.rst", "api/generated/compas_model.model.InteractionGraph.nodes_where_predicate.rst", "api/generated/compas_model.model.InteractionGraph.number_of_edges.rst", "api/generated/compas_model.model.InteractionGraph.number_of_nodes.rst", "api/generated/compas_model.model.InteractionGraph.obb.rst", "api/generated/compas_model.model.InteractionGraph.rotate.rst", "api/generated/compas_model.model.InteractionGraph.rotated.rst", "api/generated/compas_model.model.InteractionGraph.scale.rst", "api/generated/compas_model.model.InteractionGraph.scaled.rst", "api/generated/compas_model.model.InteractionGraph.sha256.rst", "api/generated/compas_model.model.InteractionGraph.shortest_path.rst", "api/generated/compas_model.model.InteractionGraph.smooth.rst", "api/generated/compas_model.model.InteractionGraph.split_edge.rst", "api/generated/compas_model.model.InteractionGraph.summary.rst", "api/generated/compas_model.model.InteractionGraph.to_json.rst", "api/generated/compas_model.model.InteractionGraph.to_jsonstring.rst", "api/generated/compas_model.model.InteractionGraph.to_lines.rst", "api/generated/compas_model.model.InteractionGraph.to_networkx.rst", "api/generated/compas_model.model.InteractionGraph.to_nodes_and_edges.rst", "api/generated/compas_model.model.InteractionGraph.to_obj.rst", "api/generated/compas_model.model.InteractionGraph.to_points.rst", "api/generated/compas_model.model.InteractionGraph.transform.rst", "api/generated/compas_model.model.InteractionGraph.transform_numpy.rst", "api/generated/compas_model.model.InteractionGraph.transformed.rst", "api/generated/compas_model.model.InteractionGraph.transformed_numpy.rst", "api/generated/compas_model.model.InteractionGraph.translate.rst", "api/generated/compas_model.model.InteractionGraph.translated.rst", "api/generated/compas_model.model.InteractionGraph.unset_edge_attribute.rst", "api/generated/compas_model.model.InteractionGraph.unset_node_attribute.rst", "api/generated/compas_model.model.InteractionGraph.update_default_edge_attributes.rst", "api/generated/compas_model.model.InteractionGraph.update_default_node_attributes.rst", "api/generated/compas_model.model.InteractionGraph.validate_data.rst", "api/generated/compas_model.model.Model.rst", "api/generated/compas_model.model.Model.ToString.rst", "api/generated/compas_model.model.Model.__init__.rst", "api/generated/compas_model.model.Model.add_element.rst", "api/generated/compas_model.model.Model.add_elements.rst", "api/generated/compas_model.model.Model.add_interaction.rst", "api/generated/compas_model.model.Model.add_interaction_by_index.rst", "api/generated/compas_model.model.Model.compute_aabb.rst", "api/generated/compas_model.model.Model.compute_obb.rst", "api/generated/compas_model.model.Model.copy.rst", "api/generated/compas_model.model.Model.from_json.rst", "api/generated/compas_model.model.Model.from_jsonstring.rst", "api/generated/compas_model.model.Model.get_interactions_lines.rst", "api/generated/compas_model.model.Model.print.rst", "api/generated/compas_model.model.Model.remove_element.rst", "api/generated/compas_model.model.Model.rotate.rst", "api/generated/compas_model.model.Model.rotated.rst", "api/generated/compas_model.model.Model.scale.rst", "api/generated/compas_model.model.Model.scaled.rst", "api/generated/compas_model.model.Model.sha256.rst", "api/generated/compas_model.model.Model.to_json.rst", "api/generated/compas_model.model.Model.to_jsonstring.rst", "api/generated/compas_model.model.Model.transform.rst", "api/generated/compas_model.model.Model.transform_numpy.rst", "api/generated/compas_model.model.Model.transformed.rst", "api/generated/compas_model.model.Model.transformed_numpy.rst", "api/generated/compas_model.model.Model.translate.rst", "api/generated/compas_model.model.Model.translated.rst", "api/generated/compas_model.model.Model.validate_data.rst", "devguide.rst", "examples.rst", "examples/elements_beam.rst", "examples/elements_block.rst", "examples/elements_interface.rst", "examples/elements_plate.rst", "examples/model_beams.rst", "examples/model_form_finding.rst", "examples/model_masonry.rst", "examples/model_plates.rst", "examples/model_robots.rst", "examples/scene_rhino.rst", "index.rst", "installation.rst", "license.rst", "tutorial.rst"], "titles": ["Acknowledgements", "API Reference", "compas_model.elements", "compas_model.model", "BeamElement", "BeamElement.ToString", "BeamElement.__init__", "BeamElement.compute_aabb", "BeamElement.compute_collision_mesh", "BeamElement.compute_face_polygons", "BeamElement.compute_obb", "BeamElement.copy", "BeamElement.from_json", "BeamElement.from_jsonstring", "BeamElement.from_line", "BeamElement.sha256", "BeamElement.to_json", "BeamElement.to_jsonstring", "BeamElement.transform", "BeamElement.transformed", "BeamElement.validate_data", "BlockElement", "BlockElement.ToString", "BlockElement.__init__", "BlockElement.compute_aabb", "BlockElement.compute_collision_mesh", "BlockElement.compute_obb", "BlockElement.copy", "BlockElement.from_json", "BlockElement.from_jsonstring", "BlockElement.sha256", "BlockElement.to_json", "BlockElement.to_jsonstring", "BlockElement.transform", "BlockElement.transformed", "BlockElement.validate_data", "Element", "Element.ToString", "Element.__init__", "Element.compute_aabb", "Element.compute_collision_mesh", "Element.compute_obb", "Element.copy", "Element.from_json", "Element.from_jsonstring", "Element.sha256", "Element.to_json", "Element.to_jsonstring", "Element.transform", "Element.transformed", "Element.validate_data", "InterfaceElement", "InterfaceElement.ToString", "InterfaceElement.__init__", "InterfaceElement.compute_aabb", "InterfaceElement.compute_collision_mesh", "InterfaceElement.compute_obb", "InterfaceElement.copy", "InterfaceElement.from_json", "InterfaceElement.from_jsonstring", "InterfaceElement.sha256", "InterfaceElement.to_json", "InterfaceElement.to_jsonstring", "InterfaceElement.transform", "InterfaceElement.transformed", "InterfaceElement.validate_data", "PlateElement", "PlateElement.ToString", "PlateElement.__init__", "PlateElement.compute_aabb", "PlateElement.compute_collision_mesh", "PlateElement.compute_loft", "PlateElement.compute_obb", "PlateElement.copy", "PlateElement.from_json", "PlateElement.from_jsonstring", "PlateElement.from_two_polygons", "PlateElement.get_average_frame", "PlateElement.mesh_from_loft", "PlateElement.sha256", "PlateElement.to_json", "PlateElement.to_jsonstring", "PlateElement.transform", "PlateElement.transformed", "PlateElement.validate_data", "ElementNode", "ElementNode.ToString", "ElementNode.__init__", "ElementNode.add", "ElementNode.add_element", "ElementNode.copy", "ElementNode.from_json", "ElementNode.from_jsonstring", "ElementNode.remove", "ElementNode.sha256", "ElementNode.to_json", "ElementNode.to_jsonstring", "ElementNode.traverse", "ElementNode.validate_data", "ElementTree", "ElementTree.ToString", "ElementTree.__init__", "ElementTree.add", "ElementTree.compute_aabb", "ElementTree.compute_obb", "ElementTree.copy", "ElementTree.find_element_node", "ElementTree.from_json", "ElementTree.from_jsonstring", "ElementTree.get_node_by_name", "ElementTree.get_nodes_by_name", "ElementTree.print_hierarchy", "ElementTree.remove", "ElementTree.rotate", "ElementTree.rotated", "ElementTree.scale", "ElementTree.scaled", "ElementTree.sha256", "ElementTree.to_json", "ElementTree.to_jsonstring", "ElementTree.transform", "ElementTree.transform_numpy", "ElementTree.transformed", "ElementTree.transformed_numpy", "ElementTree.translate", "ElementTree.translated", "ElementTree.traverse", "ElementTree.validate_data", "Interaction", "Interaction.ToString", "Interaction.__init__", "Interaction.copy", "Interaction.from_json", "Interaction.from_jsonstring", "Interaction.sha256", "Interaction.to_json", "Interaction.to_jsonstring", "Interaction.validate_data", "InteractionGraph", "InteractionGraph.ToString", "InteractionGraph.__init__", "InteractionGraph.aabb", "InteractionGraph.add_edge", "InteractionGraph.add_node", "InteractionGraph.adjacency_matrix", "InteractionGraph.clear", "InteractionGraph.complement", "InteractionGraph.compute_aabb", "InteractionGraph.compute_obb", "InteractionGraph.connected_edges", "InteractionGraph.connected_nodes", "InteractionGraph.connectivity_matrix", "InteractionGraph.copy", "InteractionGraph.count_crossings", "InteractionGraph.degree", "InteractionGraph.degree_in", "InteractionGraph.degree_matrix", "InteractionGraph.degree_out", "InteractionGraph.delete_edge", "InteractionGraph.delete_node", "InteractionGraph.edge_attribute", "InteractionGraph.edge_attributes", "InteractionGraph.edge_coordinates", "InteractionGraph.edge_direction", "InteractionGraph.edge_end", "InteractionGraph.edge_index", "InteractionGraph.edge_length", "InteractionGraph.edge_line", "InteractionGraph.edge_midpoint", "InteractionGraph.edge_point", "InteractionGraph.edge_sample", "InteractionGraph.edge_start", "InteractionGraph.edge_vector", "InteractionGraph.edges", "InteractionGraph.edges_attribute", "InteractionGraph.edges_attributes", "InteractionGraph.edges_where", "InteractionGraph.edges_where_predicate", "InteractionGraph.embed_in_plane", "InteractionGraph.exploded", "InteractionGraph.find_crossings", "InteractionGraph.find_cycles", "InteractionGraph.from_edges", "InteractionGraph.from_json", "InteractionGraph.from_jsonstring", "InteractionGraph.from_lines", "InteractionGraph.from_networkx", "InteractionGraph.from_nodes_and_edges", "InteractionGraph.from_obj", "InteractionGraph.from_pointcloud", "InteractionGraph.gkey_node", "InteractionGraph.has_edge", "InteractionGraph.has_node", "InteractionGraph.index_edge", "InteractionGraph.index_node", "InteractionGraph.is_connected", "InteractionGraph.is_crossed", "InteractionGraph.is_leaf", "InteractionGraph.is_node_connected", "InteractionGraph.is_planar", "InteractionGraph.is_planar_embedding", "InteractionGraph.is_xy", "InteractionGraph.join_edges", "InteractionGraph.laplacian_matrix", "InteractionGraph.leaves", "InteractionGraph.neighborhood", "InteractionGraph.neighbors", "InteractionGraph.neighbors_in", "InteractionGraph.neighbors_out", "InteractionGraph.node_attribute", "InteractionGraph.node_attributes", "InteractionGraph.node_coordinates", "InteractionGraph.node_edges", "InteractionGraph.node_gkey", "InteractionGraph.node_index", "InteractionGraph.node_laplacian", "InteractionGraph.node_neighborhood_centroid", "InteractionGraph.node_point", "InteractionGraph.node_sample", "InteractionGraph.nodes", "InteractionGraph.nodes_attribute", "InteractionGraph.nodes_attributes", "InteractionGraph.nodes_where", "InteractionGraph.nodes_where_predicate", "InteractionGraph.number_of_edges", "InteractionGraph.number_of_nodes", "InteractionGraph.obb", "InteractionGraph.rotate", "InteractionGraph.rotated", "InteractionGraph.scale", "InteractionGraph.scaled", "InteractionGraph.sha256", "InteractionGraph.shortest_path", "InteractionGraph.smooth", "InteractionGraph.split_edge", "InteractionGraph.summary", "InteractionGraph.to_json", "InteractionGraph.to_jsonstring", "InteractionGraph.to_lines", "InteractionGraph.to_networkx", "InteractionGraph.to_nodes_and_edges", "InteractionGraph.to_obj", "InteractionGraph.to_points", "InteractionGraph.transform", "InteractionGraph.transform_numpy", "InteractionGraph.transformed", "InteractionGraph.transformed_numpy", "InteractionGraph.translate", "InteractionGraph.translated", "InteractionGraph.unset_edge_attribute", "InteractionGraph.unset_node_attribute", "InteractionGraph.update_default_edge_attributes", "InteractionGraph.update_default_node_attributes", "InteractionGraph.validate_data", "Model", "Model.ToString", "Model.__init__", "Model.add_element", "Model.add_elements", "Model.add_interaction", "Model.add_interaction_by_index", "Model.compute_aabb", "Model.compute_obb", "Model.copy", "Model.from_json", "Model.from_jsonstring", "Model.get_interactions_lines", "Model.print", "Model.remove_element", "Model.rotate", "Model.rotated", "Model.scale", "Model.scaled", "Model.sha256", "Model.to_json", "Model.to_jsonstring", "Model.transform", "Model.transform_numpy", "Model.transformed", "Model.transformed_numpy", "Model.translate", "Model.translated", "Model.validate_data", "Development Guide", "Examples", "Elements: BeamElement", "Elements: Block", "Elements: Interface", "Elements: Plate", "Model Beams", "Model Form Finding", "Model Masonry", "Model Plates", "Model Robots", "Scene Rhino", "COMPAS Model", "Installation", "License", "Tutorial"], "terms": {"author": [0, 297], "thi": [0, 4, 5, 11, 12, 13, 20, 22, 27, 28, 29, 35, 37, 42, 43, 44, 50, 52, 57, 58, 59, 65, 66, 67, 73, 74, 75, 84, 85, 86, 88, 89, 90, 91, 92, 93, 97, 98, 100, 102, 105, 107, 108, 114, 116, 122, 123, 125, 126, 127, 129, 131, 132, 133, 137, 138, 139, 152, 153, 180, 181, 183, 184, 196, 228, 230, 245, 246, 248, 253, 254, 255, 263, 264, 265, 270, 272, 278, 279, 281, 282, 285, 297, 298], "packag": [0, 199, 295], "petra": [0, 297], "vestarta": [0, 297], "tom": 0, "van": 0, "mele": 0, "block": [0, 21, 66, 284, 289, 291, 293, 294, 295, 298], "research": [0, 283, 296], "group": [0, 149, 150, 298], "eth": 0, "zurich": 0, "switzerland": 0, "compas_model": [1, 4, 19, 21, 34, 36, 49, 51, 64, 66, 76, 83, 85, 89, 99, 128, 138, 254, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298], "model": [1, 4, 21, 36, 85, 89, 99, 101, 128, 138, 284, 285, 286, 287, 288, 294], "element": [1, 4, 7, 8, 9, 10, 18, 19, 21, 24, 25, 26, 33, 34, 51, 54, 55, 56, 63, 64, 66, 69, 70, 71, 72, 76, 82, 83, 85, 87, 89, 106, 138, 254, 257, 258, 267, 268, 284, 289, 291, 292, 293, 294, 295], "class": [4, 5, 18, 19, 21, 22, 33, 34, 36, 37, 48, 49, 51, 52, 63, 64, 66, 67, 82, 83, 85, 86, 89, 99, 100, 128, 129, 138, 139, 254, 255, 298], "frame": [4, 6, 18, 21, 23, 33, 36, 38, 48, 51, 63, 66, 78, 82, 285, 286, 287, 288, 291, 293, 298], "length": [4, 6, 14, 166, 234], "width": [4, 6, 14], "height": [4, 6, 14], "name": [4, 6, 21, 23, 36, 38, 51, 53, 66, 68, 76, 99, 101, 109, 110, 128, 130, 138, 140, 142, 143, 160, 161, 174, 175, 176, 209, 210, 220, 221, 222, 249, 250, 251, 252, 254, 256, 289, 291, 293, 294, 295, 298], "none": [4, 6, 11, 14, 18, 21, 23, 27, 33, 36, 38, 42, 48, 51, 53, 57, 63, 66, 68, 73, 76, 82, 85, 87, 88, 90, 93, 99, 101, 102, 105, 112, 113, 114, 115, 116, 120, 121, 124, 128, 130, 131, 138, 140, 142, 143, 145, 152, 158, 159, 160, 161, 174, 175, 176, 178, 181, 185, 188, 190, 202, 209, 210, 213, 220, 221, 222, 227, 228, 229, 230, 232, 233, 241, 243, 244, 247, 249, 251, 252, 254, 256, 257, 258, 259, 260, 263, 269, 270, 271, 272, 276, 277, 280], "base": [4, 21, 36, 51, 66, 85, 89, 99, 113, 114, 128, 138, 227, 228, 254, 269, 270, 288, 293, 295], "A": [4, 14, 19, 34, 49, 51, 64, 66, 83, 142, 143, 153, 161, 165, 174, 175, 176, 178, 180, 185, 187, 188, 189, 190, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 213, 214, 220, 221, 222, 232, 233, 238, 239, 240, 241, 242, 251, 252, 254, 285, 286, 288, 297], "beam": [4, 14, 51, 284, 285, 288, 295, 298], "represent": [4, 5, 16, 17, 22, 31, 32, 37, 46, 47, 51, 52, 61, 62, 67, 80, 81, 86, 95, 96, 100, 118, 119, 129, 135, 136, 139, 236, 237, 255, 274, 275, 285, 286, 298], "line": [4, 14, 51, 146, 167, 181, 185, 188, 195, 199, 238, 266, 285], "box": [4, 7, 10, 21, 24, 26, 36, 39, 41, 51, 54, 56, 66, 69, 72, 103, 104, 141, 147, 148, 226, 261, 262, 287, 298], "paramet": [4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 131, 132, 133, 134, 135, 136, 137, 142, 143, 144, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 263, 264, 265, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282], "compa": [4, 7, 8, 10, 11, 12, 13, 14, 15, 18, 19, 21, 24, 25, 26, 27, 28, 29, 30, 33, 34, 36, 39, 40, 41, 42, 43, 44, 45, 48, 49, 51, 54, 55, 56, 57, 58, 59, 60, 63, 64, 66, 69, 70, 72, 73, 74, 75, 76, 78, 79, 82, 83, 88, 90, 91, 92, 93, 94, 97, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 117, 124, 125, 126, 131, 132, 133, 134, 141, 146, 147, 148, 152, 153, 163, 164, 167, 168, 169, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 195, 196, 199, 200, 201, 202, 213, 215, 216, 217, 226, 227, 228, 231, 232, 247, 248, 261, 262, 263, 264, 265, 269, 270, 273, 280, 281, 285, 286, 287, 288, 289, 291, 293, 294, 298], "geometri": [4, 7, 8, 10, 14, 18, 19, 21, 23, 24, 25, 26, 33, 34, 36, 38, 39, 40, 41, 48, 49, 51, 53, 54, 55, 56, 63, 64, 66, 69, 70, 72, 76, 78, 82, 83, 103, 104, 113, 114, 116, 124, 125, 141, 147, 148, 163, 164, 167, 168, 169, 171, 172, 181, 189, 202, 215, 216, 217, 226, 227, 228, 230, 247, 248, 261, 262, 269, 270, 272, 280, 281, 285, 286, 287, 288, 293, 294, 298], "The": [4, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 88, 90, 91, 92, 93, 95, 96, 97, 98, 102, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 131, 132, 133, 135, 136, 137, 142, 143, 146, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 181, 182, 183, 184, 188, 189, 191, 192, 197, 198, 202, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 263, 264, 265, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 288, 295, 297, 298], "float": [4, 7, 10, 14, 24, 26, 39, 41, 54, 56, 66, 69, 72, 113, 114, 115, 116, 162, 166, 169, 185, 187, 211, 227, 228, 229, 230, 233, 234, 238, 240, 242, 269, 270, 271, 272], "cross": [4, 14, 153, 180, 196, 199, 200, 291], "section": [4, 14, 298], "attribut": [4, 21, 36, 51, 66, 85, 138, 142, 143, 160, 161, 173, 174, 175, 176, 177, 202, 209, 210, 219, 220, 221, 222, 223, 249, 250, 251, 252, 254], "guid": [4, 21, 36, 51, 66, 254, 285, 286, 294, 295], "uuid": [4, 21, 36, 51, 66], "uniqu": [4, 21, 36, 51, 66], "identifi": [4, 21, 36, 51, 66, 142, 143, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 182, 190, 191, 192, 193, 197, 198, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 232, 234, 249, 250], "union": [4, 21, 36, 51, 66], "mesh": [4, 8, 15, 21, 25, 30, 36, 40, 45, 51, 55, 60, 66, 70, 71, 76, 78, 79, 94, 117, 134, 138, 231, 233, 273, 286, 287, 289, 291, 293, 294, 298], "str": [4, 12, 13, 15, 16, 17, 21, 28, 29, 30, 31, 32, 36, 43, 44, 45, 46, 47, 51, 58, 59, 60, 61, 62, 66, 74, 75, 79, 80, 81, 91, 92, 94, 95, 96, 107, 108, 109, 110, 117, 118, 119, 132, 133, 134, 135, 136, 142, 143, 160, 161, 162, 173, 174, 175, 176, 177, 183, 184, 188, 190, 209, 210, 211, 213, 219, 220, 221, 222, 223, 231, 235, 236, 237, 249, 250, 251, 252, 264, 265, 273, 274, 275, 294], "graph_nod": [4, 21, 36, 51, 66, 287, 298], "datastructur": [4, 8, 15, 21, 25, 30, 36, 40, 45, 51, 55, 60, 66, 70, 79, 88, 93, 94, 97, 102, 103, 104, 109, 110, 112, 113, 115, 117, 122, 123, 124, 125, 126, 134, 144, 146, 147, 148, 151, 153, 156, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 195, 196, 199, 200, 201, 203, 227, 229, 231, 245, 246, 247, 248, 254, 261, 262, 269, 271, 273, 278, 279, 280, 281, 286, 287, 289, 291, 293, 298], "graphnod": [4, 21, 36, 51, 66], "graph": [4, 21, 36, 51, 66, 89, 138, 141, 143, 144, 145, 146, 151, 153, 156, 158, 159, 173, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 191, 192, 195, 196, 199, 200, 201, 202, 203, 204, 219, 224, 225, 226, 233, 234, 235, 238, 239, 240, 241, 242, 243, 254, 267, 287, 295, 298], "node": [4, 21, 36, 51, 66, 85, 88, 89, 93, 97, 102, 109, 110, 112, 126, 138, 142, 143, 144, 150, 154, 155, 157, 158, 159, 160, 173, 176, 177, 182, 187, 189, 190, 191, 192, 194, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 232, 233, 234, 240, 243, 250, 252, 254, 267, 287, 298], "tree_nod": [4, 21, 36, 51, 66, 285, 286, 287, 288, 298], "treenod": [4, 21, 36, 51, 66, 85, 88, 93, 97, 102, 109, 110, 112, 126], "tree": [4, 21, 36, 51, 66, 85, 97, 99, 102, 111, 112, 126, 254, 295, 298], "dimens": [4, 21, 36, 51, 66, 285, 286], "list": [4, 9, 21, 36, 51, 66, 78, 89, 110, 144, 149, 150, 151, 156, 161, 162, 165, 170, 174, 175, 179, 180, 181, 182, 185, 187, 193, 194, 203, 204, 205, 206, 207, 208, 210, 211, 212, 214, 218, 220, 221, 232, 233, 238, 240, 242, 266, 298], "aabb": [4, 7, 21, 24, 36, 39, 51, 54, 66, 72, 291], "axi": [4, 7, 14, 21, 24, 36, 39, 51, 54, 66, 72, 103, 113, 114, 141, 147, 227, 228, 261, 269, 270, 285, 293, 298], "align": [4, 7, 21, 24, 36, 39, 51, 54, 66, 72, 103, 141, 147, 261], "bound": [4, 7, 10, 21, 24, 26, 36, 39, 41, 51, 54, 56, 66, 69, 72, 103, 104, 141, 147, 148, 226, 261, 262], "obb": [4, 10, 21, 26, 36, 41, 51, 56, 66, 69], "orient": [4, 10, 14, 21, 26, 36, 41, 51, 56, 66, 69, 104, 148, 226, 262, 288], "collision_mesh": [4, 21, 36, 51, 66], "collis": [4, 8, 21, 25, 36, 40, 51, 55, 66, 70, 289, 291], "featur": [4, 66], "dict": [4, 14, 66, 76, 142, 143, 161, 165, 173, 175, 176, 177, 187, 190, 193, 194, 210, 213, 214, 219, 221, 222, 223, 249, 250, 251, 252, 254], "These": [4, 66, 298], "ar": [4, 5, 22, 37, 52, 66, 67, 86, 100, 129, 138, 139, 181, 202, 254, 255, 288, 298], "custom": [4, 66], "geometr": [4, 66, 188, 190, 213], "object": [4, 5, 11, 12, 13, 16, 17, 20, 22, 27, 28, 29, 31, 32, 35, 37, 42, 43, 44, 46, 47, 50, 52, 57, 58, 59, 61, 62, 65, 66, 67, 73, 74, 75, 80, 81, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 98, 100, 102, 105, 107, 108, 118, 119, 127, 129, 131, 132, 133, 135, 136, 137, 139, 152, 153, 160, 178, 180, 181, 183, 184, 185, 187, 188, 189, 196, 199, 200, 201, 233, 236, 237, 241, 253, 255, 263, 264, 265, 274, 275, 282, 289, 291, 293, 294], "ad": [4, 66, 102, 138, 283, 298], "through": [4, 66], "oper": [4, 66], "made": [4, 66], "user": [4, 66, 233], "For": [4, 66, 181, 298], "exampl": [4, 15, 30, 45, 60, 66, 79, 94, 117, 134, 142, 143, 146, 158, 159, 177, 181, 195, 223, 231, 273, 283, 287, 295, 298], "cut": [4, 66], "shape": [4, 66], "boolean": [4, 66], "differ": [4, 66], "text": [4, 66, 290], "insert": [4, 66, 234], "vector": [4, 14, 66, 113, 114, 124, 125, 163, 169, 172, 203, 215, 227, 228, 247, 248, 269, 270, 280, 281], "default": [4, 5, 11, 14, 16, 17, 21, 22, 27, 31, 32, 36, 37, 42, 46, 47, 52, 57, 61, 62, 66, 67, 73, 80, 81, 86, 90, 95, 96, 100, 102, 105, 113, 114, 115, 116, 118, 119, 129, 131, 135, 136, 139, 143, 152, 185, 190, 202, 213, 227, 228, 229, 230, 236, 237, 249, 250, 251, 252, 255, 263, 269, 270, 271, 272, 274, 275], "i": [4, 12, 13, 20, 21, 28, 29, 35, 43, 44, 50, 58, 59, 65, 66, 74, 75, 76, 84, 85, 88, 91, 92, 97, 98, 102, 107, 108, 126, 127, 132, 133, 137, 143, 146, 160, 161, 165, 169, 173, 174, 175, 176, 177, 178, 181, 183, 184, 185, 188, 190, 191, 192, 195, 197, 198, 199, 200, 201, 202, 203, 209, 210, 213, 219, 220, 221, 222, 223, 233, 234, 253, 264, 265, 282, 285, 286, 287, 288, 292, 293, 295, 297, 298], "0": [4, 7, 10, 15, 24, 26, 30, 39, 41, 45, 54, 56, 60, 66, 69, 72, 79, 94, 117, 134, 143, 169, 231, 233, 234, 273, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298], "1": [4, 15, 30, 45, 60, 66, 79, 94, 117, 134, 143, 146, 169, 170, 203, 205, 215, 218, 231, 234, 273, 285, 286, 287, 288, 289, 291, 292, 293, 295, 298], "repres": [4, 51, 66, 85, 138, 180, 185, 240, 254, 285, 287, 288, 298], "downward": [4, 66], "often": [4, 66, 285], "us": [4, 5, 15, 20, 22, 30, 35, 37, 45, 50, 52, 60, 65, 66, 67, 79, 84, 86, 94, 97, 98, 100, 117, 120, 121, 122, 123, 124, 125, 126, 127, 129, 134, 137, 138, 139, 143, 160, 161, 174, 175, 177, 181, 188, 203, 209, 210, 220, 221, 223, 231, 232, 243, 244, 245, 246, 247, 248, 253, 255, 273, 276, 277, 278, 279, 280, 281, 282, 285, 295, 297, 298], "simul": [4, 66], "an": [4, 11, 12, 13, 16, 17, 19, 20, 27, 28, 29, 31, 32, 34, 35, 42, 43, 44, 46, 47, 49, 50, 57, 58, 59, 61, 62, 64, 65, 66, 73, 74, 75, 80, 81, 83, 84, 85, 89, 90, 91, 92, 95, 96, 98, 105, 107, 108, 118, 119, 127, 131, 132, 133, 135, 136, 137, 142, 143, 152, 158, 160, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 174, 175, 177, 181, 183, 184, 188, 199, 209, 220, 221, 236, 237, 241, 249, 253, 263, 264, 265, 274, 275, 282, 287, 291, 297, 298], "assembli": [4, 66, 295], "sequenc": [4, 66], "elementnod": [4, 285, 286, 288, 295], "contain": [4, 12, 13, 28, 29, 43, 44, 58, 59, 74, 75, 78, 85, 91, 92, 107, 108, 132, 133, 174, 175, 183, 184, 188, 191, 221, 254, 264, 265, 285, 295, 298], "face_polygon": [4, 66], "read": [4, 66, 289, 291, 293], "onli": [4, 66, 97, 126, 197, 202, 254], "flat": [4, 66, 298], "area": [4, 66], "face": [4, 9, 15, 30, 45, 60, 66, 79, 94, 117, 134, 181, 231, 273, 298], "polygon": [4, 9, 51, 66, 68, 76, 77, 78, 286, 287, 288, 298], "interfac": [4, 51, 66, 284, 289, 291, 295, 298], "detect": [4, 66], "method": [4, 5, 21, 22, 36, 37, 51, 52, 66, 67, 85, 86, 99, 100, 128, 129, 138, 139, 254, 255, 298], "inherit": [4, 21, 36, 51, 66, 85, 89, 99, 128, 138, 254, 298], "convert": [5, 16, 17, 22, 31, 32, 37, 46, 47, 52, 61, 62, 67, 80, 81, 86, 95, 96, 100, 118, 119, 129, 135, 136, 139, 185, 190, 213, 236, 237, 255, 274, 275, 294], "instanc": [5, 12, 13, 19, 22, 28, 29, 34, 37, 43, 44, 49, 52, 58, 59, 64, 67, 74, 75, 83, 86, 91, 92, 100, 107, 108, 129, 132, 133, 139, 182, 183, 184, 186, 239, 255, 264, 265], "string": [5, 13, 17, 22, 29, 32, 37, 44, 47, 52, 59, 62, 67, 75, 81, 86, 92, 96, 100, 108, 119, 129, 133, 136, 139, 184, 185, 188, 190, 213, 237, 241, 255, 265, 275], "exist": [5, 22, 37, 52, 67, 86, 100, 129, 139, 160, 161, 174, 175, 195, 199, 209, 210, 220, 221, 232, 249, 250, 255], "net": [5, 22, 37, 52, 67, 86, 100, 129, 139, 255], "compat": [5, 22, 37, 52, 67, 86, 100, 129, 139, 255, 295], "when": [5, 22, 37, 52, 67, 85, 86, 100, 102, 129, 139, 160, 209, 255, 298], "ironpython": [5, 22, 37, 52, 67, 86, 100, 129, 139, 255], "implicit": [5, 22, 37, 52, 67, 86, 100, 129, 139, 255], "convers": [5, 22, 37, 52, 67, 86, 100, 129, 139, 255, 294], "usual": [5, 22, 37, 52, 67, 86, 100, 129, 139, 255], "take": [5, 22, 37, 52, 67, 86, 100, 129, 139, 177, 181, 223, 255], "place": [5, 22, 37, 52, 67, 86, 100, 129, 139, 202, 255], "cpython": [5, 22, 37, 52, 67, 86, 100, 129, 139, 255], "kick": [5, 22, 37, 52, 67, 86, 100, 129, 139, 255], "its": [5, 14, 16, 17, 22, 31, 32, 37, 46, 47, 52, 61, 62, 67, 80, 81, 86, 95, 96, 100, 109, 118, 119, 129, 135, 136, 139, 142, 143, 173, 176, 177, 179, 215, 222, 223, 233, 234, 236, 237, 254, 255, 274, 275], "print": [5, 16, 17, 22, 31, 32, 37, 46, 47, 52, 61, 62, 67, 80, 81, 86, 95, 96, 100, 111, 118, 119, 129, 135, 136, 139, 236, 237, 255, 274, 275, 285, 286, 287, 288, 289, 292, 293, 298], "self": [5, 22, 37, 52, 67, 86, 100, 129, 139, 255], "gettyp": [5, 22, 37, 52, 67, 86, 100, 129, 139, 255], "fullnam": [5, 22, 37, 52, 67, 86, 100, 129, 139, 255], "similar": [5, 22, 37, 52, 67, 86, 100, 129, 139, 255], "overrid": [5, 22, 37, 52, 67, 86, 100, 129, 139, 255], "fix": [5, 22, 37, 52, 67, 86, 100, 129, 139, 178, 233, 255], "make": [5, 11, 22, 27, 37, 42, 52, 57, 67, 73, 86, 90, 100, 105, 129, 131, 139, 152, 255, 263, 283], "rhino": [5, 22, 37, 52, 67, 86, 100, 129, 139, 255, 284, 295], "grasshopp": [5, 22, 37, 52, 67, 86, 100, 129, 139, 255], "displai": [5, 22, 37, 52, 67, 86, 100, 129, 139, 255, 293], "proper": [5, 22, 37, 52, 67, 86, 100, 129, 139, 255], "connect": [5, 22, 37, 52, 67, 86, 100, 129, 139, 149, 150, 151, 179, 188, 189, 195, 198, 212, 255, 297], "panel": [5, 22, 37, 52, 67, 86, 100, 129, 139, 255], "other": [5, 22, 37, 52, 67, 86, 100, 129, 139, 254, 255, 297], "type": [5, 11, 12, 13, 20, 22, 27, 28, 29, 35, 37, 42, 43, 44, 50, 52, 57, 58, 59, 65, 67, 73, 74, 75, 84, 86, 90, 91, 92, 98, 100, 105, 107, 108, 127, 129, 131, 132, 133, 137, 138, 139, 143, 152, 181, 183, 184, 253, 255, 263, 264, 265, 282], "output": [5, 22, 37, 52, 67, 86, 100, 129, 139, 255, 298], "inflat": [7, 10, 24, 26, 39, 41, 54, 56, 69, 72], "comput": [7, 8, 9, 10, 15, 24, 25, 26, 30, 39, 40, 41, 45, 54, 55, 56, 60, 69, 70, 71, 72, 79, 94, 103, 104, 117, 134, 147, 148, 216, 224, 225, 231, 261, 262, 273], "offset": [7, 10, 24, 26, 39, 41, 54, 56, 69, 72], "avoid": [7, 10, 24, 26, 39, 41, 54, 56, 69, 72], "point": [7, 10, 24, 26, 39, 41, 54, 56, 66, 69, 72, 78, 113, 114, 162, 164, 168, 169, 171, 178, 185, 187, 188, 189, 203, 216, 217, 227, 228, 238, 241, 266, 269, 270, 285, 286, 288, 293], "error": [7, 10, 24, 26, 39, 41, 54, 56, 69, 72], "return": [7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 88, 89, 90, 91, 92, 93, 94, 96, 98, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 127, 131, 132, 133, 134, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 261, 262, 263, 264, 265, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 286], "cl": [11, 27, 42, 57, 73, 90, 105, 131, 152, 263], "independ": [11, 27, 42, 57, 73, 85, 90, 105, 131, 152, 254, 263], "data": [11, 12, 13, 15, 16, 17, 20, 27, 28, 29, 30, 31, 32, 35, 36, 42, 43, 44, 45, 46, 47, 50, 57, 58, 59, 60, 61, 62, 65, 73, 74, 75, 79, 80, 81, 84, 90, 91, 92, 94, 95, 96, 98, 105, 107, 108, 117, 118, 119, 120, 121, 122, 123, 127, 128, 131, 132, 133, 134, 135, 136, 137, 145, 152, 173, 176, 177, 183, 184, 188, 202, 219, 222, 223, 231, 236, 237, 244, 245, 246, 253, 263, 264, 265, 273, 274, 275, 276, 277, 278, 279, 282, 285, 286, 288, 289, 291, 293, 295, 298], "option": [11, 14, 15, 16, 17, 27, 30, 31, 32, 42, 45, 46, 47, 57, 60, 61, 62, 73, 76, 79, 80, 81, 90, 94, 95, 96, 97, 102, 105, 113, 114, 115, 116, 117, 118, 119, 126, 131, 134, 135, 136, 142, 143, 144, 151, 152, 156, 160, 161, 162, 169, 170, 173, 174, 175, 176, 177, 178, 181, 185, 188, 189, 190, 191, 203, 205, 209, 210, 211, 213, 218, 219, 220, 221, 222, 223, 227, 228, 229, 230, 231, 233, 234, 236, 237, 251, 252, 263, 269, 270, 271, 272, 273, 274, 275], "current": [11, 27, 42, 57, 73, 90, 105, 131, 152, 203, 263], "classmethod": [12, 13, 14, 20, 28, 29, 35, 43, 44, 50, 58, 59, 65, 74, 75, 76, 84, 91, 92, 98, 107, 108, 127, 132, 133, 137, 182, 183, 184, 185, 186, 187, 188, 189, 253, 264, 265, 282], "filepath": [12, 16, 28, 31, 43, 46, 58, 61, 74, 80, 91, 95, 107, 118, 132, 135, 183, 188, 236, 241, 264, 274], "construct": [12, 13, 20, 28, 29, 35, 43, 44, 50, 58, 59, 65, 74, 75, 84, 91, 92, 98, 107, 108, 127, 132, 133, 137, 144, 151, 156, 183, 184, 185, 187, 188, 189, 203, 253, 264, 265, 282], "from": [12, 13, 14, 15, 28, 29, 30, 43, 44, 45, 58, 59, 60, 66, 74, 75, 76, 78, 79, 89, 91, 92, 93, 94, 97, 107, 108, 112, 117, 126, 132, 133, 134, 144, 146, 151, 156, 158, 159, 172, 182, 183, 184, 185, 186, 187, 188, 189, 195, 203, 215, 231, 232, 239, 264, 265, 273, 285, 286, 287, 288, 289, 291, 292, 293, 294, 297, 298], "json": [12, 13, 16, 17, 28, 29, 31, 32, 43, 44, 46, 47, 58, 59, 61, 62, 74, 75, 80, 81, 91, 92, 95, 96, 107, 108, 118, 119, 132, 133, 135, 136, 183, 184, 236, 237, 264, 265, 274, 275, 288], "file": [12, 16, 28, 31, 43, 46, 58, 61, 74, 80, 91, 95, 107, 118, 132, 135, 183, 188, 236, 241, 264, 274, 283, 287, 289, 291, 293, 297], "path": [12, 16, 28, 31, 43, 46, 58, 61, 74, 80, 91, 95, 107, 118, 132, 135, 183, 188, 195, 232, 236, 241, 264, 274, 293], "ha": [12, 13, 28, 29, 43, 44, 58, 59, 74, 75, 91, 92, 102, 107, 108, 132, 133, 183, 184, 196, 197, 202, 264, 265], "correct": [12, 13, 28, 29, 43, 44, 58, 59, 74, 75, 91, 92, 107, 108, 132, 133, 183, 184, 264, 265], "schema": [12, 13, 20, 28, 29, 35, 43, 44, 50, 58, 59, 65, 74, 75, 84, 91, 92, 98, 107, 108, 127, 132, 133, 137, 183, 184, 253, 264, 265, 282], "rais": [12, 13, 28, 29, 43, 44, 58, 59, 74, 75, 85, 88, 91, 92, 97, 102, 107, 108, 126, 132, 133, 160, 161, 174, 175, 178, 183, 184, 199, 209, 210, 220, 221, 233, 234, 249, 250, 264, 265], "typeerror": [12, 13, 28, 29, 43, 44, 58, 59, 74, 75, 88, 91, 92, 102, 107, 108, 132, 133, 183, 184, 264, 265], "If": [12, 13, 15, 16, 17, 28, 29, 30, 31, 32, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 66, 74, 75, 76, 79, 80, 81, 88, 91, 92, 94, 95, 96, 97, 102, 107, 108, 117, 118, 119, 126, 132, 133, 134, 135, 136, 143, 160, 161, 169, 173, 174, 175, 176, 177, 178, 183, 184, 191, 199, 203, 209, 210, 219, 220, 221, 222, 223, 231, 233, 234, 236, 237, 249, 250, 264, 265, 273, 274, 275], "center_axi": 14, "z_vector": 14, "kwarg": [14, 76, 138, 140, 176, 222], "defin": [14, 233, 238, 298], "creat": [14, 19, 34, 49, 64, 76, 78, 83, 89, 144, 151, 156, 182, 186, 202, 203, 239, 285, 286, 287, 288, 289, 291, 293], "indic": [14, 194, 240], "direct": [14, 115, 116, 146, 163, 169, 181, 186, 191, 229, 230, 271, 272, 298], "z": [14, 15, 30, 45, 60, 79, 94, 113, 114, 115, 116, 117, 134, 201, 227, 228, 229, 230, 231, 269, 270, 271, 272, 273], "worldz": 14, "worldx": 14, "depend": 14, "": [14, 18, 20, 33, 35, 48, 50, 63, 65, 82, 84, 98, 127, 137, 253, 282], "addit": [14, 76, 142, 143, 173, 176, 177, 219, 222, 223, 251, 252, 298], "keyword": [14, 76], "argument": [14, 76, 142, 143, 176, 233, 251, 252], "compas_timb": 14, "part": [14, 102, 234, 298], "as_str": [15, 30, 45, 60, 79, 94, 117, 134, 231, 273], "fals": [15, 16, 17, 21, 23, 30, 31, 32, 45, 46, 47, 60, 61, 62, 79, 80, 81, 94, 95, 96, 117, 118, 119, 134, 135, 136, 146, 173, 176, 177, 178, 191, 192, 195, 196, 197, 198, 199, 201, 203, 219, 222, 223, 231, 236, 237, 266, 273, 274, 275, 288], "hash": [15, 30, 45, 60, 79, 94, 117, 134, 231, 273], "comparison": [15, 30, 45, 60, 79, 94, 117, 134, 231, 273], "dure": [15, 30, 45, 60, 79, 94, 117, 134, 231, 273], "version": [15, 30, 45, 60, 79, 94, 117, 134, 231, 273], "control": [15, 30, 45, 60, 79, 94, 117, 134, 138, 231, 273], "algorithm": [15, 30, 45, 60, 79, 94, 117, 134, 153, 180, 181, 196, 231, 232, 273, 289, 291, 295, 298], "bool": [15, 16, 17, 21, 30, 31, 32, 45, 46, 47, 60, 61, 62, 66, 76, 79, 80, 81, 94, 95, 96, 117, 118, 119, 134, 135, 136, 173, 176, 177, 178, 191, 192, 195, 196, 197, 198, 199, 200, 201, 203, 219, 222, 223, 231, 236, 237, 273, 274, 275], "true": [15, 16, 17, 30, 31, 32, 45, 46, 47, 60, 61, 62, 66, 68, 76, 79, 80, 81, 94, 95, 96, 117, 118, 119, 134, 135, 136, 173, 176, 177, 178, 191, 192, 195, 196, 197, 198, 199, 200, 201, 203, 219, 222, 223, 231, 236, 237, 273, 274, 275, 288, 289, 291], "digest": [15, 30, 45, 60, 79, 94, 117, 134, 231, 273], "hexadecim": [15, 30, 45, 60, 79, 94, 117, 134, 231, 273], "format": [15, 30, 45, 60, 79, 94, 117, 134, 144, 151, 156, 203, 231, 235, 273], "rather": [15, 30, 45, 60, 79, 94, 117, 134, 231, 273], "than": [15, 30, 45, 60, 79, 94, 117, 134, 231, 273, 285], "byte": [15, 30, 45, 60, 79, 94, 117, 134, 231, 273], "import": [15, 30, 45, 60, 79, 94, 117, 134, 146, 195, 231, 273, 285, 286, 287, 288, 289, 291, 292, 293, 294, 298], "from_obj": [15, 30, 45, 60, 79, 94, 117, 134, 146, 185, 187, 189, 195, 231, 241, 273], "get": [15, 30, 45, 60, 79, 94, 109, 110, 117, 134, 146, 149, 150, 160, 161, 170, 174, 175, 176, 177, 195, 209, 210, 218, 220, 221, 222, 223, 231, 266, 273, 289, 291, 298], "obj": [15, 30, 45, 60, 79, 94, 117, 134, 146, 160, 174, 188, 195, 209, 220, 231, 241, 273, 289, 291, 293], "v1": [15, 30, 45, 60, 79, 94, 117, 134, 231, 273], "v2": [15, 30, 45, 60, 79, 94, 117, 134, 231, 273], "vertex_attribut": [15, 30, 45, 60, 79, 94, 117, 134, 231, 273], "vertex_sampl": [15, 30, 45, 60, 79, 94, 117, 134, 231, 273], "v3": [15, 30, 45, 60, 79, 94, 117, 134, 231, 273], "pretti": [16, 17, 31, 32, 46, 47, 61, 62, 80, 81, 95, 96, 118, 119, 135, 136, 236, 237, 274, 275, 288], "nativ": [16, 17, 31, 32, 46, 47, 61, 62, 80, 81, 95, 96, 118, 119, 135, 136, 236, 237, 274, 275], "save": [16, 17, 31, 32, 46, 47, 61, 62, 80, 81, 95, 96, 118, 119, 135, 136, 236, 237, 274, 275], "all": [18, 33, 36, 48, 63, 82, 110, 145, 161, 175, 180, 201, 204, 210, 243, 297], "attrbut": [18, 33, 48, 63, 82], "appli": [18, 19, 33, 34, 48, 49, 63, 64, 82, 83, 181], "copi": [19, 34, 49, 64, 83, 114, 116, 122, 123, 125, 228, 230, 245, 246, 248, 270, 272, 278, 279, 281, 285, 286, 287, 288, 297], "new": [19, 34, 49, 64, 83, 182, 186, 202, 239, 283], "specifi": [19, 34, 49, 64, 83, 142, 143, 169, 187, 298], "valid": [20, 35, 50, 65, 84, 98, 127, 137, 253, 282], "against": [20, 35, 50, 65, 84, 98, 127, 137, 253, 282], "raw": [20, 35, 50, 65, 84, 98, 127, 137, 253, 282], "can": [20, 35, 50, 65, 84, 98, 127, 137, 176, 199, 222, 253, 254, 282, 298], "__from_data__": [20, 35, 50, 65, 84, 98, 127, 137, 253, 282], "ani": [20, 35, 50, 65, 71, 84, 89, 98, 127, 137, 142, 143, 146, 161, 173, 174, 175, 176, 177, 181, 210, 219, 220, 221, 222, 223, 251, 252, 253, 282, 297], "is_support": [21, 23], "whether": [21, 297], "support": 21, "worldxi": [21, 36, 288, 293, 298], "abstract": [39, 40, 41, 48, 298], "thick": [66, 68, 288, 298], "compute_loft": [66, 68, 76, 288], "central": [66, 285, 286], "implement": [66, 298], "inspir": 66, "compas_assembli": [66, 295], "blockresearchgroup": 66, "outlin": [66, 76, 78], "plate": [66, 76, 78, 284, 286, 287, 295, 298], "set": [66, 160, 161, 170, 174, 175, 176, 177, 185, 209, 210, 218, 220, 221, 222, 223, 249, 250, 283, 298], "loft": [66, 71, 76], "two": [66, 76, 78, 178, 180, 195, 202, 232, 286, 287, 288, 298], "otherwis": [66, 178, 191, 195, 196, 199, 200, 201, 297, 298], "polygon0": [76, 78, 288], "polygon1": [76, 78], "first": [76, 78, 97, 126, 142, 288, 292], "second": [76, 142, 292], "static": [77, 78], "tupl": [78, 142, 149, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 182, 185, 187, 191, 193, 212, 219, 222, 223, 234, 238, 240, 249, 266], "polylin": 78, "note": [85, 138, 143, 153, 180, 181, 195, 196, 197, 199, 202, 203, 249, 250, 254], "except": [85, 233, 234], "de": 85, "serialis": 85, "outsid": [85, 169, 181], "context": 85, "child": [88, 93], "add": [89, 142, 143, 289, 291, 292, 293, 294], "tripl": 89, "behavior": 89, "parent": [89, 102, 254, 257, 258, 298], "children": 89, "dictionari": [89, 142, 143, 161, 165, 187, 190, 193, 194, 210, 213, 214, 251, 252, 298], "strategi": [97, 126], "depthfirst": [97, 126], "order": [97, 126, 181], "preorder": [97, 126], "breadthfirst": [97, 126], "postord": [97, 126], "depth": [97, 126], "yield": [97, 126, 173, 176, 177, 219, 222, 223], "next": [97, 126, 173, 176, 177, 219, 222, 223, 295], "valueerror": [97, 102, 126, 234], "which": [102, 143, 162, 176, 177, 181, 222, 223, 285, 295], "case": [102, 143, 295, 298], "root": [102, 126, 232, 298], "suppli": 102, "alreadi": 102, "anoth": 102, "try": 102, "spatial": [111, 267], "hierarchi": [111, 254], "angl": [113, 114, 227, 228, 269, 270], "radian": [113, 114, 227, 228, 269, 270], "origin": [113, 114, 227, 228, 269, 270, 293], "translat": [113, 114, 115, 116, 227, 228, 229, 230, 269, 270, 271, 272, 286, 288, 294], "scale": [113, 114, 124, 125, 227, 228, 247, 248, 269, 270, 280, 281, 286], "transform": [113, 114, 115, 116, 121, 123, 124, 125, 227, 228, 229, 230, 244, 246, 247, 248, 269, 270, 271, 272, 277, 279, 280, 281, 285, 286, 288, 294], "x": [115, 116, 229, 230, 271, 272], "y": [115, 116, 229, 230, 271, 272], "factor": [115, 116, 229, 230, 233, 271, 272], "rotat": [115, 116, 124, 125, 229, 230, 247, 248, 271, 272, 280, 281], "structur": [120, 121, 122, 123, 181, 202, 244, 245, 246, 254, 267, 276, 277, 278, 279, 285, 288, 292, 295, 298], "valu": [128, 130, 160, 161, 169, 174, 175, 176, 203, 209, 210, 220, 221, 222, 249, 250, 251, 252], "default_node_attribut": [138, 140], "default_edge_attribut": [138, 140], "interact": [138, 254, 259, 260, 266, 289, 291, 292, 295, 298], "between": [138, 181, 189, 232, 254, 295, 298], "ideal": 138, "rewritten": 138, "dedic": 138, "edg": [138, 142, 146, 149, 153, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 180, 182, 187, 191, 193, 196, 199, 200, 202, 212, 219, 222, 223, 224, 234, 240, 249, 251, 254, 267, 298], "allow": [138, 298], "more": [138, 203, 298], "fine": 138, "grain": 138, "over": [138, 173, 219], "It": [138, 181, 285], "also": [138, 285], "provid": [138, 143, 161, 176, 221, 233, 297, 298], "much": 138, "intuit": 138, "api": [138, 295], "calcul": [141, 226], "u": [142, 146, 173, 176, 177, 232, 298], "v": [142, 146, 173, 176, 177, 232], "attr_dict": [142, 143, 251, 252], "kwattr": [142, 143, 251, 252], "hashabl": [142, 143, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 182, 187, 190, 191, 192, 193, 194, 197, 198, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 232, 234, 240, 249], "compil": [142, 143, 251, 252], "remain": [142, 143, 251, 252], "add_nod": [142, 159], "delete_edg": [142, 159], "kei": [143, 154, 155, 157, 159, 160, 161, 174, 175, 176, 180, 187, 190, 192, 194, 197, 198, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 219, 220, 221, 222, 234, 249, 250], "int": [143, 153, 154, 155, 157, 165, 170, 185, 189, 190, 193, 194, 205, 213, 214, 218, 224, 225, 233, 250], "automat": [143, 298], "gener": [143, 146, 254, 295], "vertex": [143, 165, 180, 181, 193], "add_edg": [143, 158], "delete_nod": [143, 158], "one": [143, 196, 197, 254, 283], "increment": 143, "highest": 143, "integ": 143, "rtype": [144, 151, 156, 203], "arrai": [144, 151, 156, 165, 203, 214], "adjac": [144, 295, 298], "matrix": [144, 151, 156, 203], "liter": [144, 151, 156, 203], "csc": [144, 151, 156, 203], "csr": [144, 151, 156, 203], "coo": [144, 151, 156, 203], "result": [144, 151, 156, 203], "array_lik": [144, 151, 156, 203], "g": [146, 294], "h": 146, "same": [146, 181], "vertic": [146, 181, 195, 201, 232, 242], "whose": 146, "consist": 146, "present": [146, 191, 192], "refer": [146, 295], "wolfram": 146, "mathworld": 146, "avail": 146, "http": [146, 283, 296], "com": [146, 283, 296], "graphcompl": 146, "html": 146, "has_edg": [146, 192], "connected_nod": 149, "connected_edg": 150, "count": 153, "number": [153, 154, 155, 157, 185, 189, 190, 213, 224, 225, 233, 267], "pair": [153, 158, 160, 161, 165, 176, 180, 182, 185, 190, 191, 193, 194, 196, 210, 213, 214, 222, 238, 240, 288, 289, 291], "assum": [153, 180, 196], "li": [153, 180, 196, 201], "xy": [153, 180, 196, 201], "plane": [153, 178, 180, 196, 199, 200, 201], "neighbor": [154, 155, 157, 181, 197, 205, 207, 208, 216, 233], "degree_out": [154, 155], "degree_in": [154, 157], "numer": 155, "incom": [155, 207], "degre": [155, 156, 157, 189], "outgo": [157, 208], "delet": [158, 159], "function": [160, 161, 174, 175, 176, 177, 209, 210, 220, 221, 223, 233], "setter": [160, 161, 174, 175, 209, 210, 220, 221], "keyerror": [160, 161, 174, 175, 209, 210, 220, 221, 249, 250], "doe": [160, 161, 174, 175, 209, 210, 220, 221, 249, 250], "unset_edge_attribut": 160, "edges_attribut": [160, 161, 209, 210, 220, 221], "node_attribut": [160, 161, 174, 175, 220, 221, 250], "nodes_attribut": [160, 161, 174, 175, 209, 210], "multipl": [161, 174, 175, 210, 220, 221], "empti": [161, 175, 210], "correspond": [161, 165, 175, 190, 193, 210, 213, 214, 221, 298], "ax": [162, 211], "xyz": [162, 203, 211, 240], "coordin": [162, 185, 187, 201, 211, 238, 240, 242], "start": [162, 171, 172, 185, 232, 238, 283], "end": [162, 164, 172, 185, 232, 238], "along": [162, 169, 234, 267], "should": [162, 176, 177, 181, 222, 223], "includ": [162, 297, 298], "edge_point": [162, 164, 168, 171], "edge_start": [162, 164, 168, 169], "edge_end": [162, 168, 169, 171], "edge_midpoint": [162, 164, 169, 171], "edge_vector": [163, 166, 167], "edge_lin": [163, 166, 172], "edge_length": [163, 167, 172], "map": [165, 188, 190, 193, 194, 213, 214, 254], "e": [165, 283, 294, 296], "index": [165, 193, 194, 214, 295], "uv": [165, 193], "index_edg": [165, 194], "node_index": [165, 194], "edge_direct": [166, 167, 172], "locat": [168, 169], "midpoint": 168, "t": [169, 234], "5": [169, 233, 234, 285, 286, 287, 288, 292, 298], "parametr": 169, "rang": [169, 176, 222, 234, 292, 293], "lie": 169, "size": [170, 205, 218], "random": [170, 189, 218], "sampl": [170, 218], "node_sampl": 170, "iter": [173, 219, 233], "attr": [173, 176, 177, 219], "edges_wher": [173, 177, 219, 222, 223], "edges_where_pred": [173, 176, 219, 222, 223], "nodes_wher": [173, 176, 177, 219, 223], "nodes_where_pred": [173, 176, 177, 219, 222], "per": [174, 175, 189, 221], "request": [174, 175, 210], "edge_attribut": [174, 175, 209, 210, 220, 221, 249], "condit": [176, 177, 222, 223, 297], "certain": [176, 177, 190, 213, 222, 223], "form": [176, 222, 284, 295], "min": [176, 222], "max": [176, 222], "predic": [177, 223], "lambda": [177, 223], "callabl": [177, 223, 233], "you": [177, 223, 298], "want": [177, 223], "evalu": [177, 223], "2": [177, 223, 286, 287, 288, 289, 291, 292, 293, 295], "emb": 178, "embed": [178, 181, 199, 200], "wa": 178, "success": 178, "importerror": [178, 199], "networkx": [178, 186, 199, 239], "instal": [178, 199, 283, 295], "compon": [179, 211], "each": [180, 181, 220, 238, 240, 298], "breakpoint": 181, "find": [181, 232, 284, 295], "break": 181, "found": 181, "essenti": 181, "wall": [181, 292], "follow": [181, 285, 286, 288, 297], "maze": 181, "solv": 181, "reli": 181, "repes": 181, "planar": [181, 199], "straight": [181, 199], "determin": 181, "around": [181, 298], "alwai": 181, "turn": 181, "primarili": [181, 295], "up": [181, 213, 283], "specif": [181, 191, 192, 198], "applic": [181, 295], "involv": 181, "dual": 181, "diagram": 181, "where": 181, "extern": 181, "forc": 181, "load": 181, "reaction": 181, "input": 181, "inform": 182, "about": 182, "from_networkx": [182, 239], "precis": [185, 188, 190, 213], "tol": [185, 190, 213], "to_lin": [185, 240, 241, 242], "from_nodes_and_edg": [185, 188, 189, 240], "from_pointcloud": [185, 187, 188, 242], "digraph": [186, 239], "to_networkx": 186, "from_edg": 186, "hshabl": 187, "to_nodes_and_edg": [187, 238, 241, 242], "from_lin": [187, 188, 189, 238, 285], "like": [188, 241], "url": 188, "to_obj": [188, 238, 240, 242], "cloud": 189, "3": [189, 285, 286, 292], "pointcloud": 189, "to_point": [189, 238, 240, 241], "node_gkei": 190, "toler": [190, 213], "geometric_kei": [190, 213], "verifi": [191, 192, 195, 196, 197, 198, 200, 201, 288], "taken": 191, "account": 191, "has_nod": 191, "edge_index": [193, 214], "index_nod": [193, 214], "everi": [195, 233, 254], "them": [195, 289, 291, 293, 294, 295], "least": 196, "leaf": 197, "leav": 197, "is_node_connect": 197, "is_leaf": 198, "check": 199, "drawn": 199, "without": [199, 200, 297], "shown": 199, "furthermor": 199, "fase": 200, "zero": 201, "join": [202, 287], "incident": 202, "given": 202, "exactli": 202, "incid": 202, "modifi": [202, 297], "replac": 202, "transfer": 202, "therefor": [202, 203], "normal": 203, "laplacian": [203, 215], "entri": 203, "diagon": 203, "d": 203, "l": 203, "dot": 203, "centroid": [203, 215, 216, 233], "c": [203, 295, 297], "By": 203, "chang": [203, 283, 298], "sign": 203, "dsiplac": 203, "could": 203, "natur": 203, "wai": [203, 298], "ring": [205, 215], "neighbors_out": [206, 207], "neighbors_in": [206, 208], "neighborhood": [206, 215], "unset_node_attribut": 209, "node_point": [211, 215, 216], "node_laplacian": [211, 216, 217], "node_neighborhood_centroid": [211, 215, 217], "gkey_nod": 213, "node_coordin": [215, 216, 217], "n": 218, "edge_sampl": 218, "match": [222, 223], "number_of_nod": 224, "number_of_edg": 225, "shortest": 232, "goal": 232, "topologi": 232, "astar_shortest_path": 232, "kmax": 233, "100": 233, "damp": 233, "callback": 233, "callback_arg": 233, "move": 233, "free": [233, 297], "maximum": 233, "execut": 233, "after": [233, 283], "pass": 233, "split": 234, "posit": 234, "newli": 239, "write": 241, "unset": [249, 250], "implicitli": [249, 250], "back": [249, 250], "store": [249, 250, 295, 298], "updat": [251, 252, 298], "update_default_node_attribut": 251, "update_default_edge_attribut": 252, "hierarch": [254, 295], "organis": 254, "appear": 254, "onc": 254, "mean": 254, "have": 254, "mani": 254, "relat": 254, "elementtre": [254, 267, 295], "interactiongraph": [254, 295], "b": [259, 295], "id0": 260, "id1": 260, "log": 266, "total": 267, "To": 283, "local": 283, "clone": [283, 296], "repo": 283, "git": [283, 296], "github": [283, 296], "brg": [283, 296], "manual": [283, 298], "extens": 283, "modul": [283, 295], "simpli": 283, "run": 283, "setup": 283, "py": 283, "trough": 283, "sourc": 283, "pip": [283, 296], "beamel": [284, 295, 298], "masonri": [284, 295], "robot": [284, 295], "scene": [284, 295], "rectangular": 285, "target": 285, "smaller": 285, "fabric": 285, "longer": 285, "extend": [285, 291], "b0": 285, "25": [285, 286], "test": [285, 286, 287], "b0_copi": 285, "from_frame_to_fram": [285, 286, 288], "add_el": [285, 286, 287, 288, 289, 291, 292, 293, 294, 298], "belong": [285, 286, 288], "close": 286, "blockel": [286, 287, 289, 291, 293, 294, 295, 298], "def": 286, "mesh_from_polygon": 286, "4": [286, 287, 292, 298], "from_polygon": 286, "from_vector": [286, 288, 294], "compute_aabb": 286, "compute_obb": 286, "from_factor": 286, "block_copi": 286, "interfaceel": [287, 295, 298], "from_polyhedron": [287, 298], "box0": 287, "from_vertices_and_fac": [287, 289, 291, 293], "to_vertices_and_fac": 287, "box1": 287, "block0": 287, "block1": 287, "interface_copi": 287, "Or": 287, "add_interact": [287, 289, 298], "add_interaction_by_index": [287, 291, 292, 293, 298], "outward": 288, "consid": 288, "plateel": [288, 292, 295, 298], "from_sides_and_radius_xi": 288, "6": [288, 292, 293, 298], "10": [288, 291, 292, 294, 298], "15": [288, 292], "uncom": 288, "initi": 288, "correctli": 288, "regardless": 288, "wind": 288, "revers": 288, "from_two_polygon": [288, 292], "xform": 288, "serial": 288, "to_json": 288, "from_json": 288, "collid": [289, 291], "beams3": 289, "append": [289, 291, 293, 294], "collision_pair": [289, 291], "get_collision_pair": [289, 291], "01": [289, 291], "001": 289, "extract": [289, 291], "pollygon": [289, 291], "creation": 291, "vault": 291, "cross_vault": 291, "get_interactions_lin": [291, 293], "elements_plate_application_fold": 292, "fold": 292, "polys0": 292, "polys1": 292, "create_folded_mesh": 292, "len": [292, 293], "7": 292, "8": 292, "9": [292, 295], "11": 292, "roof": 292, "12": [292, 293], "13": 292, "14": 292, "16": 292, "17": [292, 295], "row": 292, "robot_kuka_bas": 293, "robot_kuka_axis0": 293, "robot_kuka_axis1": 293, "robot_kuka_axis2": 293, "robot_kuka_axis3": 293, "robot_kuka_axis4": 293, "robot_kuka_axis5": 293, "217": 293, "24": 293, "512667": 293, "66177": 293, "400": 293, "904867": 293, "178893": 293, "855": 293, "145": 293, "743477": 293, "750905": 293, "869": 293, "151417": 293, "443": 293, "020905": 293, "38": 293, "51023": 293, "816": 293, "506682": 293, "519": 293, "30574": 293, "44": 293, "271409": 293, "486246": 293, "x_ax": 293, "y_ax": 293, "f": 293, "elements_list": [293, 294], "select": 294, "compas_rhino": 294, "select_mesh": 294, "find_object": 294, "mesh_to_compa": 294, "idx": 294, "m": 294, "enumer": 294, "block_": 294, "draw": 294, "encompass": 295, "individu": 295, "discret": 295, "track": [295, 298], "commonli": [295, 298], "joineri": 295, "abstractli": 295, "manner": 295, "itself": [295, 298], "serv": [295, 298], "fundament": 295, "variou": [295, 298], "util": [295, 298], "visual": [295, 298], "abov": [295, 297], "introduct": 295, "develop": 295, "tutori": 295, "licens": 295, "acknowledg": 295, "search": 295, "page": 295, "cd": 296, "under": 297, "mit": 297, "copyright": 297, "05": 297, "decemb": 297, "2023": 297, "permiss": 297, "herebi": 297, "grant": 297, "charg": 297, "person": 297, "obtain": 297, "softwar": 297, "associ": 297, "document": 297, "deal": 297, "restrict": 297, "limit": 297, "right": 297, "merg": 297, "publish": 297, "distribut": 297, "sublicens": 297, "sell": 297, "permit": 297, "whom": 297, "furnish": 297, "do": [297, 298], "so": 297, "subject": 297, "notic": 297, "shall": 297, "substanti": 297, "portion": 297, "THE": 297, "AS": 297, "warranti": 297, "OF": 297, "kind": 297, "express": 297, "OR": 297, "impli": 297, "BUT": 297, "NOT": 297, "TO": 297, "merchant": 297, "fit": 297, "FOR": 297, "particular": 297, "purpos": 297, "AND": 297, "noninfring": 297, "IN": 297, "NO": 297, "event": 297, "holder": 297, "BE": 297, "liabl": 297, "claim": 297, "damag": 297, "liabil": 297, "action": 297, "contract": 297, "tort": 297, "aris": 297, "out": 297, "WITH": 297, "here": 298, "we": 298, "simpl": 298, "In": 298, "similarli": 298, "common": 298, "touch": 298, "expand": 298, "howev": 298, "instead": 298, "my_block": 298, "my_beam": 298, "my_plat": 298, "my_joint": 298, "There": 298, "sever": 298, "keep": 298, "manag": 298, "remov": 298, "now": 298, "know": 298, "how": 298, "establish": 298, "third": 298, "parti": 298, "consol": 298, "properti": 298, "need": 298, "combin": 298, "previou": 298, "complex": 298, "group_block": 298, "group_beam": 298, "my_block_0": 298, "my_block_1": 298, "my_beam_0": 298, "my_beam_1": 298, "20": 298, "crate": 298, "backward": 298, "forward": 298, "recus": 298}, "objects": {"compas_model.elements": [[4, 0, 1, "", "BeamElement"], [21, 0, 1, "", "BlockElement"], [36, 0, 1, "", "Element"], [51, 0, 1, "", "InterfaceElement"], [66, 0, 1, "", "PlateElement"]], "compas_model.elements.BeamElement": [[5, 1, 1, "", "ToString"], [6, 1, 1, "", "__init__"], [7, 1, 1, "", "compute_aabb"], [8, 1, 1, "", "compute_collision_mesh"], [9, 1, 1, "", "compute_face_polygons"], [10, 1, 1, "", "compute_obb"], [11, 1, 1, "", "copy"], [12, 1, 1, "", "from_json"], [13, 1, 1, "", "from_jsonstring"], [14, 1, 1, "", "from_line"], [15, 1, 1, "", "sha256"], [16, 1, 1, "", "to_json"], [17, 1, 1, "", "to_jsonstring"], [18, 1, 1, "", "transform"], [19, 1, 1, "", "transformed"], [20, 1, 1, "", "validate_data"]], "compas_model.elements.BlockElement": [[22, 1, 1, "", "ToString"], [23, 1, 1, "", "__init__"], [24, 1, 1, "", "compute_aabb"], [25, 1, 1, "", "compute_collision_mesh"], [26, 1, 1, "", "compute_obb"], [27, 1, 1, "", "copy"], [28, 1, 1, "", "from_json"], [29, 1, 1, "", "from_jsonstring"], [30, 1, 1, "", "sha256"], [31, 1, 1, "", "to_json"], [32, 1, 1, "", "to_jsonstring"], [33, 1, 1, "", "transform"], [34, 1, 1, "", "transformed"], [35, 1, 1, "", "validate_data"]], "compas_model.elements.Element": [[37, 1, 1, "", "ToString"], [38, 1, 1, "", "__init__"], [39, 1, 1, "", "compute_aabb"], [40, 1, 1, "", "compute_collision_mesh"], [41, 1, 1, "", "compute_obb"], [42, 1, 1, "", "copy"], [43, 1, 1, "", "from_json"], [44, 1, 1, "", "from_jsonstring"], [45, 1, 1, "", "sha256"], [46, 1, 1, "", "to_json"], [47, 1, 1, "", "to_jsonstring"], [48, 1, 1, "", "transform"], [49, 1, 1, "", "transformed"], [50, 1, 1, "", "validate_data"]], "compas_model.elements.InterfaceElement": [[52, 1, 1, "", "ToString"], [53, 1, 1, "", "__init__"], [54, 1, 1, "", "compute_aabb"], [55, 1, 1, "", "compute_collision_mesh"], [56, 1, 1, "", "compute_obb"], [57, 1, 1, "", "copy"], [58, 1, 1, "", "from_json"], [59, 1, 1, "", "from_jsonstring"], [60, 1, 1, "", "sha256"], [61, 1, 1, "", "to_json"], [62, 1, 1, "", "to_jsonstring"], [63, 1, 1, "", "transform"], [64, 1, 1, "", "transformed"], [65, 1, 1, "", "validate_data"]], "compas_model.elements.PlateElement": [[67, 1, 1, "", "ToString"], [68, 1, 1, "", "__init__"], [69, 1, 1, "", "compute_aabb"], [70, 1, 1, "", "compute_collision_mesh"], [71, 1, 1, "", "compute_loft"], [72, 1, 1, "", "compute_obb"], [73, 1, 1, "", "copy"], [74, 1, 1, "", "from_json"], [75, 1, 1, "", "from_jsonstring"], [76, 1, 1, "", "from_two_polygons"], [77, 1, 1, "", "get_average_frame"], [78, 1, 1, "", "mesh_from_loft"], [79, 1, 1, "", "sha256"], [80, 1, 1, "", "to_json"], [81, 1, 1, "", "to_jsonstring"], [82, 1, 1, "", "transform"], [83, 1, 1, "", "transformed"], [84, 1, 1, "", "validate_data"]], "compas_model.model": [[85, 0, 1, "", "ElementNode"], [99, 0, 1, "", "ElementTree"], [128, 0, 1, "", "Interaction"], [138, 0, 1, "", "InteractionGraph"], [254, 0, 1, "", "Model"]], "compas_model.model.ElementNode": [[86, 1, 1, "", "ToString"], [87, 1, 1, "", "__init__"], [88, 1, 1, "", "add"], [89, 1, 1, "", "add_element"], [90, 1, 1, "", "copy"], [91, 1, 1, "", "from_json"], [92, 1, 1, "", "from_jsonstring"], [93, 1, 1, "", "remove"], [94, 1, 1, "", "sha256"], [95, 1, 1, "", "to_json"], [96, 1, 1, "", "to_jsonstring"], [97, 1, 1, "", "traverse"], [98, 1, 1, "", "validate_data"]], "compas_model.model.ElementTree": [[100, 1, 1, "", "ToString"], [101, 1, 1, "", "__init__"], [102, 1, 1, "", "add"], [103, 1, 1, "", "compute_aabb"], [104, 1, 1, "", "compute_obb"], [105, 1, 1, "", "copy"], [106, 1, 1, "", "find_element_node"], [107, 1, 1, "", "from_json"], [108, 1, 1, "", "from_jsonstring"], [109, 1, 1, "", "get_node_by_name"], [110, 1, 1, "", "get_nodes_by_name"], [111, 1, 1, "", "print_hierarchy"], [112, 1, 1, "", "remove"], [113, 1, 1, "", "rotate"], [114, 1, 1, "", "rotated"], [115, 1, 1, "", "scale"], [116, 1, 1, "", "scaled"], [117, 1, 1, "", "sha256"], [118, 1, 1, "", "to_json"], [119, 1, 1, "", "to_jsonstring"], [120, 1, 1, "", "transform"], [121, 1, 1, "", "transform_numpy"], [122, 1, 1, "", "transformed"], [123, 1, 1, "", "transformed_numpy"], [124, 1, 1, "", "translate"], [125, 1, 1, "", "translated"], [126, 1, 1, "", "traverse"], [127, 1, 1, "", "validate_data"]], "compas_model.model.Interaction": [[129, 1, 1, "", "ToString"], [130, 1, 1, "", "__init__"], [131, 1, 1, "", "copy"], [132, 1, 1, "", "from_json"], [133, 1, 1, "", "from_jsonstring"], [134, 1, 1, "", "sha256"], [135, 1, 1, "", "to_json"], [136, 1, 1, "", "to_jsonstring"], [137, 1, 1, "", "validate_data"]], "compas_model.model.InteractionGraph": [[139, 1, 1, "", "ToString"], [140, 1, 1, "", "__init__"], [141, 1, 1, "", "aabb"], [142, 1, 1, "", "add_edge"], [143, 1, 1, "", "add_node"], [144, 1, 1, "", "adjacency_matrix"], [145, 1, 1, "", "clear"], [146, 1, 1, "", "complement"], [147, 1, 1, "", "compute_aabb"], [148, 1, 1, "", "compute_obb"], [149, 1, 1, "", "connected_edges"], [150, 1, 1, "", "connected_nodes"], [151, 1, 1, "", "connectivity_matrix"], [152, 1, 1, "", "copy"], [153, 1, 1, "", "count_crossings"], [154, 1, 1, "", "degree"], [155, 1, 1, "", "degree_in"], [156, 1, 1, "", "degree_matrix"], [157, 1, 1, "", "degree_out"], [158, 1, 1, "", "delete_edge"], [159, 1, 1, "", "delete_node"], [160, 1, 1, "", "edge_attribute"], [161, 1, 1, "", "edge_attributes"], [162, 1, 1, "", "edge_coordinates"], [163, 1, 1, "", "edge_direction"], [164, 1, 1, "", "edge_end"], [165, 1, 1, "", "edge_index"], [166, 1, 1, "", "edge_length"], [167, 1, 1, "", "edge_line"], [168, 1, 1, "", "edge_midpoint"], [169, 1, 1, "", "edge_point"], [170, 1, 1, "", "edge_sample"], [171, 1, 1, "", "edge_start"], [172, 1, 1, "", "edge_vector"], [173, 1, 1, "", "edges"], [174, 1, 1, "", "edges_attribute"], [175, 1, 1, "", "edges_attributes"], [176, 1, 1, "", "edges_where"], [177, 1, 1, "", "edges_where_predicate"], [178, 1, 1, "", "embed_in_plane"], [179, 1, 1, "", "exploded"], [180, 1, 1, "", "find_crossings"], [181, 1, 1, "", "find_cycles"], [182, 1, 1, "", "from_edges"], [183, 1, 1, "", "from_json"], [184, 1, 1, "", "from_jsonstring"], [185, 1, 1, "", "from_lines"], [186, 1, 1, "", "from_networkx"], [187, 1, 1, "", "from_nodes_and_edges"], [188, 1, 1, "", "from_obj"], [189, 1, 1, "", "from_pointcloud"], [190, 1, 1, "", "gkey_node"], [191, 1, 1, "", "has_edge"], [192, 1, 1, "", "has_node"], [193, 1, 1, "", "index_edge"], [194, 1, 1, "", "index_node"], [195, 1, 1, "", "is_connected"], [196, 1, 1, "", "is_crossed"], [197, 1, 1, "", "is_leaf"], [198, 1, 1, "", "is_node_connected"], [199, 1, 1, "", "is_planar"], [200, 1, 1, "", "is_planar_embedding"], [201, 1, 1, "", "is_xy"], [202, 1, 1, "", "join_edges"], [203, 1, 1, "", "laplacian_matrix"], [204, 1, 1, "", "leaves"], [205, 1, 1, "", "neighborhood"], [206, 1, 1, "", "neighbors"], [207, 1, 1, "", "neighbors_in"], [208, 1, 1, "", "neighbors_out"], [209, 1, 1, "", "node_attribute"], [210, 1, 1, "", "node_attributes"], [211, 1, 1, "", "node_coordinates"], [212, 1, 1, "", "node_edges"], [213, 1, 1, "", "node_gkey"], [214, 1, 1, "", "node_index"], [215, 1, 1, "", "node_laplacian"], [216, 1, 1, "", "node_neighborhood_centroid"], [217, 1, 1, "", "node_point"], [218, 1, 1, "", "node_sample"], [219, 1, 1, "", "nodes"], [220, 1, 1, "", "nodes_attribute"], [221, 1, 1, "", "nodes_attributes"], [222, 1, 1, "", "nodes_where"], [223, 1, 1, "", "nodes_where_predicate"], [224, 1, 1, "", "number_of_edges"], [225, 1, 1, "", "number_of_nodes"], [226, 1, 1, "", "obb"], [227, 1, 1, "", "rotate"], [228, 1, 1, "", "rotated"], [229, 1, 1, "", "scale"], [230, 1, 1, "", "scaled"], [231, 1, 1, "", "sha256"], [232, 1, 1, "", "shortest_path"], [233, 1, 1, "", "smooth"], [234, 1, 1, "", "split_edge"], [235, 1, 1, "", "summary"], [236, 1, 1, "", "to_json"], [237, 1, 1, "", "to_jsonstring"], [238, 1, 1, "", "to_lines"], [239, 1, 1, "", "to_networkx"], [240, 1, 1, "", "to_nodes_and_edges"], [241, 1, 1, "", "to_obj"], [242, 1, 1, "", "to_points"], [243, 1, 1, "", "transform"], [244, 1, 1, "", "transform_numpy"], [245, 1, 1, "", "transformed"], [246, 1, 1, "", "transformed_numpy"], [247, 1, 1, "", "translate"], [248, 1, 1, "", "translated"], [249, 1, 1, "", "unset_edge_attribute"], [250, 1, 1, "", "unset_node_attribute"], [251, 1, 1, "", "update_default_edge_attributes"], [252, 1, 1, "", "update_default_node_attributes"], [253, 1, 1, "", "validate_data"]], "compas_model.model.Model": [[255, 1, 1, "", "ToString"], [256, 1, 1, "", "__init__"], [257, 1, 1, "", "add_element"], [258, 1, 1, "", "add_elements"], [259, 1, 1, "", "add_interaction"], [260, 1, 1, "", "add_interaction_by_index"], [261, 1, 1, "", "compute_aabb"], [262, 1, 1, "", "compute_obb"], [263, 1, 1, "", "copy"], [264, 1, 1, "", "from_json"], [265, 1, 1, "", "from_jsonstring"], [266, 1, 1, "", "get_interactions_lines"], [267, 1, 1, "", "print"], [268, 1, 1, "", "remove_element"], [269, 1, 1, "", "rotate"], [270, 1, 1, "", "rotated"], [271, 1, 1, "", "scale"], [272, 1, 1, "", "scaled"], [273, 1, 1, "", "sha256"], [274, 1, 1, "", "to_json"], [275, 1, 1, "", "to_jsonstring"], [276, 1, 1, "", "transform"], [277, 1, 1, "", "transform_numpy"], [278, 1, 1, "", "transformed"], [279, 1, 1, "", "transformed_numpy"], [280, 1, 1, "", "translate"], [281, 1, 1, "", "translated"], [282, 1, 1, "", "validate_data"]]}, "objtypes": {"0": "py:class", "1": "py:method"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"]}, "titleterms": {"acknowledg": 0, "api": 1, "refer": 1, "compas_model": [2, 3], "element": [2, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 285, 286, 287, 288, 298], "class": [2, 3], "model": [3, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 289, 290, 291, 292, 293, 295, 298], "beamel": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 285], "tostr": [5, 22, 37, 52, 67, 86, 100, 129, 139, 255], "__init__": [6, 23, 38, 53, 68, 87, 101, 130, 140, 256], "compute_aabb": [7, 24, 39, 54, 69, 103, 147, 261], "compute_collision_mesh": [8, 25, 40, 55, 70], "compute_face_polygon": 9, "compute_obb": [10, 26, 41, 56, 72, 104, 148, 262], "copi": [11, 27, 42, 57, 73, 90, 105, 131, 152, 263], "from_json": [12, 28, 43, 58, 74, 91, 107, 132, 183, 264], "from_jsonstr": [13, 29, 44, 59, 75, 92, 108, 133, 184, 265], "from_lin": [14, 185], "sha256": [15, 30, 45, 60, 79, 94, 117, 134, 231, 273], "to_json": [16, 31, 46, 61, 80, 95, 118, 135, 236, 274], "to_jsonstr": [17, 32, 47, 62, 81, 96, 119, 136, 237, 275], "transform": [18, 19, 33, 34, 48, 49, 63, 64, 82, 83, 120, 122, 243, 245, 276, 278], "validate_data": [20, 35, 50, 65, 84, 98, 127, 137, 253, 282], "blockel": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "interfaceel": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "plateel": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "compute_loft": 71, "from_two_polygon": 76, "get_average_fram": 77, "mesh_from_loft": 78, "elementnod": [85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "add": [88, 102, 298], "add_el": [89, 257, 258], "remov": [93, 112], "travers": [97, 126, 298], "elementtre": [99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "find_element_nod": 106, "get_node_by_nam": 109, "get_nodes_by_nam": 110, "print_hierarchi": 111, "rotat": [113, 114, 227, 228, 269, 270], "scale": [115, 116, 229, 230, 271, 272], "transform_numpi": [121, 244, 277], "transformed_numpi": [123, 246, 279], "translat": [124, 125, 247, 248, 280, 281], "interact": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "interactiongraph": [138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253], "aabb": 141, "add_edg": 142, "add_nod": 143, "adjacency_matrix": 144, "clear": 145, "complement": 146, "connected_edg": 149, "connected_nod": 150, "connectivity_matrix": 151, "count_cross": 153, "degre": 154, "degree_in": 155, "degree_matrix": 156, "degree_out": 157, "delete_edg": 158, "delete_nod": 159, "edge_attribut": [160, 161], "edge_coordin": 162, "edge_direct": 163, "edge_end": 164, "edge_index": 165, "edge_length": 166, "edge_lin": 167, "edge_midpoint": 168, "edge_point": 169, "edge_sampl": 170, "edge_start": 171, "edge_vector": 172, "edg": 173, "edges_attribut": [174, 175], "edges_wher": 176, "edges_where_pred": 177, "embed_in_plan": 178, "explod": 179, "find_cross": 180, "find_cycl": 181, "from_edg": 182, "from_networkx": 186, "from_nodes_and_edg": 187, "from_obj": 188, "from_pointcloud": 189, "gkey_nod": 190, "has_edg": 191, "has_nod": 192, "index_edg": 193, "index_nod": 194, "is_connect": 195, "is_cross": 196, "is_leaf": 197, "is_node_connect": 198, "is_planar": 199, "is_planar_embed": 200, "is_xi": 201, "join_edg": 202, "laplacian_matrix": 203, "leav": 204, "neighborhood": 205, "neighbor": 206, "neighbors_in": 207, "neighbors_out": 208, "node_attribut": [209, 210], "node_coordin": 211, "node_edg": 212, "node_gkei": 213, "node_index": 214, "node_laplacian": 215, "node_neighborhood_centroid": 216, "node_point": 217, "node_sampl": 218, "node": 219, "nodes_attribut": [220, 221], "nodes_wher": 222, "nodes_where_pred": 223, "number_of_edg": 224, "number_of_nod": 225, "obb": 226, "shortest_path": 232, "smooth": 233, "split_edg": 234, "summari": 235, "to_lin": 238, "to_networkx": 239, "to_nodes_and_edg": 240, "to_obj": 241, "to_point": 242, "unset_edge_attribut": 249, "unset_node_attribut": 250, "update_default_edge_attribut": 251, "update_default_node_attribut": 252, "add_interact": 259, "add_interaction_by_index": 260, "get_interactions_lin": 266, "print": 267, "remove_el": 268, "develop": [283, 296], "guid": 283, "environ": 283, "build": 283, "exampl": 284, "block": 286, "interfac": 287, "plate": [288, 292], "beam": 289, "form": 290, "find": 290, "masonri": 291, "robot": 293, "scene": 294, "rhino": 294, "compa": 295, "tabl": 295, "content": 295, "indic": 295, "instal": 296, "stabl": 296, "licens": 297, "tutori": 298, "other": 298, "type": 298, "creat": 298, "connect": 298, "hierarchi": 298}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Acknowledgements": [[0, "acknowledgements"]], "API Reference": [[1, "api-reference"]], "compas_model.elements": [[2, "compas-model-elements"]], "Classes": [[2, "classes"], [3, "classes"]], "compas_model.model": [[3, "compas-model-model"]], "BeamElement": [[4, "beamelement"]], "BeamElement.ToString": [[5, "beamelement-tostring"]], "BeamElement.__init__": [[6, "beamelement-init"]], "BeamElement.compute_aabb": [[7, "beamelement-compute-aabb"]], "BeamElement.compute_collision_mesh": [[8, "beamelement-compute-collision-mesh"]], "BeamElement.compute_face_polygons": [[9, "beamelement-compute-face-polygons"]], "BeamElement.compute_obb": [[10, "beamelement-compute-obb"]], "BeamElement.copy": [[11, "beamelement-copy"]], "BeamElement.from_json": [[12, "beamelement-from-json"]], "BeamElement.from_jsonstring": [[13, "beamelement-from-jsonstring"]], "BeamElement.from_line": [[14, "beamelement-from-line"]], "BeamElement.sha256": [[15, "beamelement-sha256"]], "BeamElement.to_json": [[16, "beamelement-to-json"]], "BeamElement.to_jsonstring": [[17, "beamelement-to-jsonstring"]], "BeamElement.transform": [[18, "beamelement-transform"]], "BeamElement.transformed": [[19, "beamelement-transformed"]], "BeamElement.validate_data": [[20, "beamelement-validate-data"]], "BlockElement": [[21, "blockelement"]], "BlockElement.ToString": [[22, "blockelement-tostring"]], "BlockElement.__init__": [[23, "blockelement-init"]], "BlockElement.compute_aabb": [[24, "blockelement-compute-aabb"]], "BlockElement.compute_collision_mesh": [[25, "blockelement-compute-collision-mesh"]], "BlockElement.compute_obb": [[26, "blockelement-compute-obb"]], "BlockElement.copy": [[27, "blockelement-copy"]], "BlockElement.from_json": [[28, "blockelement-from-json"]], "BlockElement.from_jsonstring": [[29, "blockelement-from-jsonstring"]], "BlockElement.sha256": [[30, "blockelement-sha256"]], "BlockElement.to_json": [[31, "blockelement-to-json"]], "BlockElement.to_jsonstring": [[32, "blockelement-to-jsonstring"]], "BlockElement.transform": [[33, "blockelement-transform"]], "BlockElement.transformed": [[34, "blockelement-transformed"]], "BlockElement.validate_data": [[35, "blockelement-validate-data"]], "Element": [[36, "element"], [298, "element"]], "Element.ToString": [[37, "element-tostring"]], "Element.__init__": [[38, "element-init"]], "Element.compute_aabb": [[39, "element-compute-aabb"]], "Element.compute_collision_mesh": [[40, "element-compute-collision-mesh"]], "Element.compute_obb": [[41, "element-compute-obb"]], "Element.copy": [[42, "element-copy"]], "Element.from_json": [[43, "element-from-json"]], "Element.from_jsonstring": [[44, "element-from-jsonstring"]], "Element.sha256": [[45, "element-sha256"]], "Element.to_json": [[46, "element-to-json"]], "Element.to_jsonstring": [[47, "element-to-jsonstring"]], "Element.transform": [[48, "element-transform"]], "Element.transformed": [[49, "element-transformed"]], "Element.validate_data": [[50, "element-validate-data"]], "InterfaceElement": [[51, "interfaceelement"]], "InterfaceElement.ToString": [[52, "interfaceelement-tostring"]], "InterfaceElement.__init__": [[53, "interfaceelement-init"]], "InterfaceElement.compute_aabb": [[54, "interfaceelement-compute-aabb"]], "InterfaceElement.compute_collision_mesh": [[55, "interfaceelement-compute-collision-mesh"]], "InterfaceElement.compute_obb": [[56, "interfaceelement-compute-obb"]], "InterfaceElement.copy": [[57, "interfaceelement-copy"]], "InterfaceElement.from_json": [[58, "interfaceelement-from-json"]], "InterfaceElement.from_jsonstring": [[59, "interfaceelement-from-jsonstring"]], "InterfaceElement.sha256": [[60, "interfaceelement-sha256"]], "InterfaceElement.to_json": [[61, "interfaceelement-to-json"]], "InterfaceElement.to_jsonstring": [[62, "interfaceelement-to-jsonstring"]], "InterfaceElement.transform": [[63, "interfaceelement-transform"]], "InterfaceElement.transformed": [[64, "interfaceelement-transformed"]], "InterfaceElement.validate_data": [[65, "interfaceelement-validate-data"]], "PlateElement": [[66, "plateelement"]], "PlateElement.ToString": [[67, "plateelement-tostring"]], "PlateElement.__init__": [[68, "plateelement-init"]], "PlateElement.compute_aabb": [[69, "plateelement-compute-aabb"]], "PlateElement.compute_collision_mesh": [[70, "plateelement-compute-collision-mesh"]], "PlateElement.compute_loft": [[71, "plateelement-compute-loft"]], "PlateElement.compute_obb": [[72, "plateelement-compute-obb"]], "PlateElement.copy": [[73, "plateelement-copy"]], "PlateElement.from_json": [[74, "plateelement-from-json"]], "PlateElement.from_jsonstring": [[75, "plateelement-from-jsonstring"]], "PlateElement.from_two_polygons": [[76, "plateelement-from-two-polygons"]], "PlateElement.get_average_frame": [[77, "plateelement-get-average-frame"]], "PlateElement.mesh_from_loft": [[78, "plateelement-mesh-from-loft"]], "PlateElement.sha256": [[79, "plateelement-sha256"]], "PlateElement.to_json": [[80, "plateelement-to-json"]], "PlateElement.to_jsonstring": [[81, "plateelement-to-jsonstring"]], "PlateElement.transform": [[82, "plateelement-transform"]], "PlateElement.transformed": [[83, "plateelement-transformed"]], "PlateElement.validate_data": [[84, "plateelement-validate-data"]], "ElementNode": [[85, "elementnode"]], "ElementNode.ToString": [[86, "elementnode-tostring"]], "ElementNode.__init__": [[87, "elementnode-init"]], "ElementNode.add": [[88, "elementnode-add"]], "ElementNode.add_element": [[89, "elementnode-add-element"]], "ElementNode.copy": [[90, "elementnode-copy"]], "ElementNode.from_json": [[91, "elementnode-from-json"]], "ElementNode.from_jsonstring": [[92, "elementnode-from-jsonstring"]], "ElementNode.remove": [[93, "elementnode-remove"]], "ElementNode.sha256": [[94, "elementnode-sha256"]], "ElementNode.to_json": [[95, "elementnode-to-json"]], "ElementNode.to_jsonstring": [[96, "elementnode-to-jsonstring"]], "ElementNode.traverse": [[97, "elementnode-traverse"]], "ElementNode.validate_data": [[98, "elementnode-validate-data"]], "ElementTree": [[99, "elementtree"]], "ElementTree.ToString": [[100, "elementtree-tostring"]], "ElementTree.__init__": [[101, "elementtree-init"]], "ElementTree.add": [[102, "elementtree-add"]], "ElementTree.compute_aabb": [[103, "elementtree-compute-aabb"]], "ElementTree.compute_obb": [[104, "elementtree-compute-obb"]], "ElementTree.copy": [[105, "elementtree-copy"]], "ElementTree.find_element_node": [[106, "elementtree-find-element-node"]], "ElementTree.from_json": [[107, "elementtree-from-json"]], "ElementTree.from_jsonstring": [[108, "elementtree-from-jsonstring"]], "ElementTree.get_node_by_name": [[109, "elementtree-get-node-by-name"]], "ElementTree.get_nodes_by_name": [[110, "elementtree-get-nodes-by-name"]], "ElementTree.print_hierarchy": [[111, "elementtree-print-hierarchy"]], "ElementTree.remove": [[112, "elementtree-remove"]], "ElementTree.rotate": [[113, "elementtree-rotate"]], "ElementTree.rotated": [[114, "elementtree-rotated"]], "ElementTree.scale": [[115, "elementtree-scale"]], "ElementTree.scaled": [[116, "elementtree-scaled"]], "ElementTree.sha256": [[117, "elementtree-sha256"]], "ElementTree.to_json": [[118, "elementtree-to-json"]], "ElementTree.to_jsonstring": [[119, "elementtree-to-jsonstring"]], "ElementTree.transform": [[120, "elementtree-transform"]], "ElementTree.transform_numpy": [[121, "elementtree-transform-numpy"]], "ElementTree.transformed": [[122, "elementtree-transformed"]], "ElementTree.transformed_numpy": [[123, "elementtree-transformed-numpy"]], "ElementTree.translate": [[124, "elementtree-translate"]], "ElementTree.translated": [[125, "elementtree-translated"]], "ElementTree.traverse": [[126, "elementtree-traverse"]], "ElementTree.validate_data": [[127, "elementtree-validate-data"]], "Interaction": [[128, "interaction"]], "Interaction.ToString": [[129, "interaction-tostring"]], "Interaction.__init__": [[130, "interaction-init"]], "Interaction.copy": [[131, "interaction-copy"]], "Interaction.from_json": [[132, "interaction-from-json"]], "Interaction.from_jsonstring": [[133, "interaction-from-jsonstring"]], "Interaction.sha256": [[134, "interaction-sha256"]], "Interaction.to_json": [[135, "interaction-to-json"]], "Interaction.to_jsonstring": [[136, "interaction-to-jsonstring"]], "Interaction.validate_data": [[137, "interaction-validate-data"]], "InteractionGraph": [[138, "interactiongraph"]], "InteractionGraph.ToString": [[139, "interactiongraph-tostring"]], "InteractionGraph.__init__": [[140, "interactiongraph-init"]], "InteractionGraph.aabb": [[141, "interactiongraph-aabb"]], "InteractionGraph.add_edge": [[142, "interactiongraph-add-edge"]], "InteractionGraph.add_node": [[143, "interactiongraph-add-node"]], "InteractionGraph.adjacency_matrix": [[144, "interactiongraph-adjacency-matrix"]], "InteractionGraph.clear": [[145, "interactiongraph-clear"]], "InteractionGraph.complement": [[146, "interactiongraph-complement"]], "InteractionGraph.compute_aabb": [[147, "interactiongraph-compute-aabb"]], "InteractionGraph.compute_obb": [[148, "interactiongraph-compute-obb"]], "InteractionGraph.connected_edges": [[149, "interactiongraph-connected-edges"]], "InteractionGraph.connected_nodes": [[150, "interactiongraph-connected-nodes"]], "InteractionGraph.connectivity_matrix": [[151, "interactiongraph-connectivity-matrix"]], "InteractionGraph.copy": [[152, "interactiongraph-copy"]], "InteractionGraph.count_crossings": [[153, "interactiongraph-count-crossings"]], "InteractionGraph.degree": [[154, "interactiongraph-degree"]], "InteractionGraph.degree_in": [[155, "interactiongraph-degree-in"]], "InteractionGraph.degree_matrix": [[156, "interactiongraph-degree-matrix"]], "InteractionGraph.degree_out": [[157, "interactiongraph-degree-out"]], "InteractionGraph.delete_edge": [[158, "interactiongraph-delete-edge"]], "InteractionGraph.delete_node": [[159, "interactiongraph-delete-node"]], "InteractionGraph.edge_attribute": [[160, "interactiongraph-edge-attribute"]], "InteractionGraph.edge_attributes": [[161, "interactiongraph-edge-attributes"]], "InteractionGraph.edge_coordinates": [[162, "interactiongraph-edge-coordinates"]], "InteractionGraph.edge_direction": [[163, "interactiongraph-edge-direction"]], "InteractionGraph.edge_end": [[164, "interactiongraph-edge-end"]], "InteractionGraph.edge_index": [[165, "interactiongraph-edge-index"]], "InteractionGraph.edge_length": [[166, "interactiongraph-edge-length"]], "InteractionGraph.edge_line": [[167, "interactiongraph-edge-line"]], "InteractionGraph.edge_midpoint": [[168, "interactiongraph-edge-midpoint"]], "InteractionGraph.edge_point": [[169, "interactiongraph-edge-point"]], "InteractionGraph.edge_sample": [[170, "interactiongraph-edge-sample"]], "InteractionGraph.edge_start": [[171, "interactiongraph-edge-start"]], "InteractionGraph.edge_vector": [[172, "interactiongraph-edge-vector"]], "InteractionGraph.edges": [[173, "interactiongraph-edges"]], "InteractionGraph.edges_attribute": [[174, "interactiongraph-edges-attribute"]], "InteractionGraph.edges_attributes": [[175, "interactiongraph-edges-attributes"]], "InteractionGraph.edges_where": [[176, "interactiongraph-edges-where"]], "InteractionGraph.edges_where_predicate": [[177, "interactiongraph-edges-where-predicate"]], "InteractionGraph.embed_in_plane": [[178, "interactiongraph-embed-in-plane"]], "InteractionGraph.exploded": [[179, "interactiongraph-exploded"]], "InteractionGraph.find_crossings": [[180, "interactiongraph-find-crossings"]], "InteractionGraph.find_cycles": [[181, "interactiongraph-find-cycles"]], "InteractionGraph.from_edges": [[182, "interactiongraph-from-edges"]], "InteractionGraph.from_json": [[183, "interactiongraph-from-json"]], "InteractionGraph.from_jsonstring": [[184, "interactiongraph-from-jsonstring"]], "InteractionGraph.from_lines": [[185, "interactiongraph-from-lines"]], "InteractionGraph.from_networkx": [[186, "interactiongraph-from-networkx"]], "InteractionGraph.from_nodes_and_edges": [[187, "interactiongraph-from-nodes-and-edges"]], "InteractionGraph.from_obj": [[188, "interactiongraph-from-obj"]], "InteractionGraph.from_pointcloud": [[189, "interactiongraph-from-pointcloud"]], "InteractionGraph.gkey_node": [[190, "interactiongraph-gkey-node"]], "InteractionGraph.has_edge": [[191, "interactiongraph-has-edge"]], "InteractionGraph.has_node": [[192, "interactiongraph-has-node"]], "InteractionGraph.index_edge": [[193, "interactiongraph-index-edge"]], "InteractionGraph.index_node": [[194, "interactiongraph-index-node"]], "InteractionGraph.is_connected": [[195, "interactiongraph-is-connected"]], "InteractionGraph.is_crossed": [[196, "interactiongraph-is-crossed"]], "InteractionGraph.is_leaf": [[197, "interactiongraph-is-leaf"]], "InteractionGraph.is_node_connected": [[198, "interactiongraph-is-node-connected"]], "InteractionGraph.is_planar": [[199, "interactiongraph-is-planar"]], "InteractionGraph.is_planar_embedding": [[200, "interactiongraph-is-planar-embedding"]], "InteractionGraph.is_xy": [[201, "interactiongraph-is-xy"]], "InteractionGraph.join_edges": [[202, "interactiongraph-join-edges"]], "InteractionGraph.laplacian_matrix": [[203, "interactiongraph-laplacian-matrix"]], "InteractionGraph.leaves": [[204, "interactiongraph-leaves"]], "InteractionGraph.neighborhood": [[205, "interactiongraph-neighborhood"]], "InteractionGraph.neighbors": [[206, "interactiongraph-neighbors"]], "InteractionGraph.neighbors_in": [[207, "interactiongraph-neighbors-in"]], "InteractionGraph.neighbors_out": [[208, "interactiongraph-neighbors-out"]], "InteractionGraph.node_attribute": [[209, "interactiongraph-node-attribute"]], "InteractionGraph.node_attributes": [[210, "interactiongraph-node-attributes"]], "InteractionGraph.node_coordinates": [[211, "interactiongraph-node-coordinates"]], "InteractionGraph.node_edges": [[212, "interactiongraph-node-edges"]], "InteractionGraph.node_gkey": [[213, "interactiongraph-node-gkey"]], "InteractionGraph.node_index": [[214, "interactiongraph-node-index"]], "InteractionGraph.node_laplacian": [[215, "interactiongraph-node-laplacian"]], "InteractionGraph.node_neighborhood_centroid": [[216, "interactiongraph-node-neighborhood-centroid"]], "InteractionGraph.node_point": [[217, "interactiongraph-node-point"]], "InteractionGraph.node_sample": [[218, "interactiongraph-node-sample"]], "InteractionGraph.nodes": [[219, "interactiongraph-nodes"]], "InteractionGraph.nodes_attribute": [[220, "interactiongraph-nodes-attribute"]], "InteractionGraph.nodes_attributes": [[221, "interactiongraph-nodes-attributes"]], "InteractionGraph.nodes_where": [[222, "interactiongraph-nodes-where"]], "InteractionGraph.nodes_where_predicate": [[223, "interactiongraph-nodes-where-predicate"]], "InteractionGraph.number_of_edges": [[224, "interactiongraph-number-of-edges"]], "InteractionGraph.number_of_nodes": [[225, "interactiongraph-number-of-nodes"]], "InteractionGraph.obb": [[226, "interactiongraph-obb"]], "InteractionGraph.rotate": [[227, "interactiongraph-rotate"]], "InteractionGraph.rotated": [[228, "interactiongraph-rotated"]], "InteractionGraph.scale": [[229, "interactiongraph-scale"]], "InteractionGraph.scaled": [[230, "interactiongraph-scaled"]], "InteractionGraph.sha256": [[231, "interactiongraph-sha256"]], "InteractionGraph.shortest_path": [[232, "interactiongraph-shortest-path"]], "InteractionGraph.smooth": [[233, "interactiongraph-smooth"]], "InteractionGraph.split_edge": [[234, "interactiongraph-split-edge"]], "InteractionGraph.summary": [[235, "interactiongraph-summary"]], "InteractionGraph.to_json": [[236, "interactiongraph-to-json"]], "InteractionGraph.to_jsonstring": [[237, "interactiongraph-to-jsonstring"]], "InteractionGraph.to_lines": [[238, "interactiongraph-to-lines"]], "InteractionGraph.to_networkx": [[239, "interactiongraph-to-networkx"]], "InteractionGraph.to_nodes_and_edges": [[240, "interactiongraph-to-nodes-and-edges"]], "InteractionGraph.to_obj": [[241, "interactiongraph-to-obj"]], "InteractionGraph.to_points": [[242, "interactiongraph-to-points"]], "InteractionGraph.transform": [[243, "interactiongraph-transform"]], "InteractionGraph.transform_numpy": [[244, "interactiongraph-transform-numpy"]], "InteractionGraph.transformed": [[245, "interactiongraph-transformed"]], "InteractionGraph.transformed_numpy": [[246, "interactiongraph-transformed-numpy"]], "InteractionGraph.translate": [[247, "interactiongraph-translate"]], "InteractionGraph.translated": [[248, "interactiongraph-translated"]], "InteractionGraph.unset_edge_attribute": [[249, "interactiongraph-unset-edge-attribute"]], "InteractionGraph.unset_node_attribute": [[250, "interactiongraph-unset-node-attribute"]], "InteractionGraph.update_default_edge_attributes": [[251, "interactiongraph-update-default-edge-attributes"]], "InteractionGraph.update_default_node_attributes": [[252, "interactiongraph-update-default-node-attributes"]], "InteractionGraph.validate_data": [[253, "interactiongraph-validate-data"]], "Model": [[254, "model"]], "Model.ToString": [[255, "model-tostring"]], "Model.__init__": [[256, "model-init"]], "Model.add_element": [[257, "model-add-element"]], "Model.add_elements": [[258, "model-add-elements"]], "Model.add_interaction": [[259, "model-add-interaction"]], "Model.add_interaction_by_index": [[260, "model-add-interaction-by-index"]], "Model.compute_aabb": [[261, "model-compute-aabb"]], "Model.compute_obb": [[262, "model-compute-obb"]], "Model.copy": [[263, "model-copy"]], "Model.from_json": [[264, "model-from-json"]], "Model.from_jsonstring": [[265, "model-from-jsonstring"]], "Model.get_interactions_lines": [[266, "model-get-interactions-lines"]], "Model.print": [[267, "model-print"]], "Model.remove_element": [[268, "model-remove-element"]], "Model.rotate": [[269, "model-rotate"]], "Model.rotated": [[270, "model-rotated"]], "Model.scale": [[271, "model-scale"]], "Model.scaled": [[272, "model-scaled"]], "Model.sha256": [[273, "model-sha256"]], "Model.to_json": [[274, "model-to-json"]], "Model.to_jsonstring": [[275, "model-to-jsonstring"]], "Model.transform": [[276, "model-transform"]], "Model.transform_numpy": [[277, "model-transform-numpy"]], "Model.transformed": [[278, "model-transformed"]], "Model.transformed_numpy": [[279, "model-transformed-numpy"]], "Model.translate": [[280, "model-translate"]], "Model.translated": [[281, "model-translated"]], "Model.validate_data": [[282, "model-validate-data"]], "Development Guide": [[283, "development-guide"]], "Environment": [[283, "environment"]], "Build": [[283, "build"]], "Examples": [[284, "examples"]], "Elements: BeamElement": [[285, "elements-beamelement"]], "Elements: Block": [[286, "elements-block"]], "Elements: Interface": [[287, "elements-interface"]], "Elements: Plate": [[288, "elements-plate"]], "Model Beams": [[289, "model-beams"]], "Model Form Finding": [[290, "model-form-finding"]], "Model Masonry": [[291, "model-masonry"]], "Model Plates": [[292, "model-plates"]], "Model Robots": [[293, "model-robots"]], "Scene Rhino": [[294, "scene-rhino"]], "COMPAS Model": [[295, "compas-model"]], "Table of Contents": [[295, "table-of-contents"]], "Indices and tables": [[295, "indices-and-tables"]], "Installation": [[296, "installation"]], "Stable": [[296, "stable"]], "Development": [[296, "development"]], "License": [[297, "license"]], "Tutorial": [[298, "tutorial"]], "Other Types of Elements": [[298, "other-types-of-elements"]], "Create Model": [[298, "create-model"]], "Add Connectivity": [[298, "add-connectivity"]], "Add Hierarchy": [[298, "add-hierarchy"]], "Traverse Hierarchy": [[298, "traverse-hierarchy"]]}, "indexentries": {"beamelement (class in compas_model.elements)": [[4, "compas_model.elements.BeamElement"]], "tostring() (compas_model.elements.beamelement method)": [[5, "compas_model.elements.BeamElement.ToString"]], "__init__() (compas_model.elements.beamelement method)": [[6, "compas_model.elements.BeamElement.__init__"]], "compute_aabb() (compas_model.elements.beamelement method)": [[7, "compas_model.elements.BeamElement.compute_aabb"]], "compute_collision_mesh() (compas_model.elements.beamelement method)": [[8, "compas_model.elements.BeamElement.compute_collision_mesh"]], "compute_face_polygons() (compas_model.elements.beamelement method)": [[9, "compas_model.elements.BeamElement.compute_face_polygons"]], "compute_obb() (compas_model.elements.beamelement method)": [[10, "compas_model.elements.BeamElement.compute_obb"]], "copy() (compas_model.elements.beamelement method)": [[11, "compas_model.elements.BeamElement.copy"]], "from_json() (compas_model.elements.beamelement class method)": [[12, "compas_model.elements.BeamElement.from_json"]], "from_jsonstring() (compas_model.elements.beamelement class method)": [[13, "compas_model.elements.BeamElement.from_jsonstring"]], "from_line() (compas_model.elements.beamelement class method)": [[14, "compas_model.elements.BeamElement.from_line"]], "sha256() (compas_model.elements.beamelement method)": [[15, "compas_model.elements.BeamElement.sha256"]], "to_json() (compas_model.elements.beamelement method)": [[16, "compas_model.elements.BeamElement.to_json"]], "to_jsonstring() (compas_model.elements.beamelement method)": [[17, "compas_model.elements.BeamElement.to_jsonstring"]], "transform() (compas_model.elements.beamelement method)": [[18, "compas_model.elements.BeamElement.transform"]], "transformed() (compas_model.elements.beamelement method)": [[19, "compas_model.elements.BeamElement.transformed"]], "validate_data() (compas_model.elements.beamelement class method)": [[20, "compas_model.elements.BeamElement.validate_data"]], "blockelement (class in compas_model.elements)": [[21, "compas_model.elements.BlockElement"]], "tostring() (compas_model.elements.blockelement method)": [[22, "compas_model.elements.BlockElement.ToString"]], "__init__() (compas_model.elements.blockelement method)": [[23, "compas_model.elements.BlockElement.__init__"]], "compute_aabb() (compas_model.elements.blockelement method)": [[24, "compas_model.elements.BlockElement.compute_aabb"]], "compute_collision_mesh() (compas_model.elements.blockelement method)": [[25, "compas_model.elements.BlockElement.compute_collision_mesh"]], "compute_obb() (compas_model.elements.blockelement method)": [[26, "compas_model.elements.BlockElement.compute_obb"]], "copy() (compas_model.elements.blockelement method)": [[27, "compas_model.elements.BlockElement.copy"]], "from_json() (compas_model.elements.blockelement class method)": [[28, "compas_model.elements.BlockElement.from_json"]], "from_jsonstring() (compas_model.elements.blockelement class method)": [[29, "compas_model.elements.BlockElement.from_jsonstring"]], "sha256() (compas_model.elements.blockelement method)": [[30, "compas_model.elements.BlockElement.sha256"]], "to_json() (compas_model.elements.blockelement method)": [[31, "compas_model.elements.BlockElement.to_json"]], "to_jsonstring() (compas_model.elements.blockelement method)": [[32, "compas_model.elements.BlockElement.to_jsonstring"]], "transform() (compas_model.elements.blockelement method)": [[33, "compas_model.elements.BlockElement.transform"]], "transformed() (compas_model.elements.blockelement method)": [[34, "compas_model.elements.BlockElement.transformed"]], "validate_data() (compas_model.elements.blockelement class method)": [[35, "compas_model.elements.BlockElement.validate_data"]], "element (class in compas_model.elements)": [[36, "compas_model.elements.Element"]], "tostring() (compas_model.elements.element method)": [[37, "compas_model.elements.Element.ToString"]], "__init__() (compas_model.elements.element method)": [[38, "compas_model.elements.Element.__init__"]], "compute_aabb() (compas_model.elements.element method)": [[39, "compas_model.elements.Element.compute_aabb"]], "compute_collision_mesh() (compas_model.elements.element method)": [[40, "compas_model.elements.Element.compute_collision_mesh"]], "compute_obb() (compas_model.elements.element method)": [[41, "compas_model.elements.Element.compute_obb"]], "copy() (compas_model.elements.element method)": [[42, "compas_model.elements.Element.copy"]], "from_json() (compas_model.elements.element class method)": [[43, "compas_model.elements.Element.from_json"]], "from_jsonstring() (compas_model.elements.element class method)": [[44, "compas_model.elements.Element.from_jsonstring"]], "sha256() (compas_model.elements.element method)": [[45, "compas_model.elements.Element.sha256"]], "to_json() (compas_model.elements.element method)": [[46, "compas_model.elements.Element.to_json"]], "to_jsonstring() (compas_model.elements.element method)": [[47, "compas_model.elements.Element.to_jsonstring"]], "transform() (compas_model.elements.element method)": [[48, "compas_model.elements.Element.transform"]], "transformed() (compas_model.elements.element method)": [[49, "compas_model.elements.Element.transformed"]], "validate_data() (compas_model.elements.element class method)": [[50, "compas_model.elements.Element.validate_data"]], "interfaceelement (class in compas_model.elements)": [[51, "compas_model.elements.InterfaceElement"]], "tostring() (compas_model.elements.interfaceelement method)": [[52, "compas_model.elements.InterfaceElement.ToString"]], "__init__() (compas_model.elements.interfaceelement method)": [[53, "compas_model.elements.InterfaceElement.__init__"]], "compute_aabb() (compas_model.elements.interfaceelement method)": [[54, "compas_model.elements.InterfaceElement.compute_aabb"]], "compute_collision_mesh() (compas_model.elements.interfaceelement method)": [[55, "compas_model.elements.InterfaceElement.compute_collision_mesh"]], "compute_obb() (compas_model.elements.interfaceelement method)": [[56, "compas_model.elements.InterfaceElement.compute_obb"]], "copy() (compas_model.elements.interfaceelement method)": [[57, "compas_model.elements.InterfaceElement.copy"]], "from_json() (compas_model.elements.interfaceelement class method)": [[58, "compas_model.elements.InterfaceElement.from_json"]], "from_jsonstring() (compas_model.elements.interfaceelement class method)": [[59, "compas_model.elements.InterfaceElement.from_jsonstring"]], "sha256() (compas_model.elements.interfaceelement method)": [[60, "compas_model.elements.InterfaceElement.sha256"]], "to_json() (compas_model.elements.interfaceelement method)": [[61, "compas_model.elements.InterfaceElement.to_json"]], "to_jsonstring() (compas_model.elements.interfaceelement method)": [[62, "compas_model.elements.InterfaceElement.to_jsonstring"]], "transform() (compas_model.elements.interfaceelement method)": [[63, "compas_model.elements.InterfaceElement.transform"]], "transformed() (compas_model.elements.interfaceelement method)": [[64, "compas_model.elements.InterfaceElement.transformed"]], "validate_data() (compas_model.elements.interfaceelement class method)": [[65, "compas_model.elements.InterfaceElement.validate_data"]], "plateelement (class in compas_model.elements)": [[66, "compas_model.elements.PlateElement"]], "tostring() (compas_model.elements.plateelement method)": [[67, "compas_model.elements.PlateElement.ToString"]], "__init__() (compas_model.elements.plateelement method)": [[68, "compas_model.elements.PlateElement.__init__"]], "compute_aabb() (compas_model.elements.plateelement method)": [[69, "compas_model.elements.PlateElement.compute_aabb"]], "compute_collision_mesh() (compas_model.elements.plateelement method)": [[70, "compas_model.elements.PlateElement.compute_collision_mesh"]], "compute_loft() (compas_model.elements.plateelement method)": [[71, "compas_model.elements.PlateElement.compute_loft"]], "compute_obb() (compas_model.elements.plateelement method)": [[72, "compas_model.elements.PlateElement.compute_obb"]], "copy() (compas_model.elements.plateelement method)": [[73, "compas_model.elements.PlateElement.copy"]], "from_json() (compas_model.elements.plateelement class method)": [[74, "compas_model.elements.PlateElement.from_json"]], "from_jsonstring() (compas_model.elements.plateelement class method)": [[75, "compas_model.elements.PlateElement.from_jsonstring"]], "from_two_polygons() (compas_model.elements.plateelement class method)": [[76, "compas_model.elements.PlateElement.from_two_polygons"]], "get_average_frame() (compas_model.elements.plateelement static method)": [[77, "compas_model.elements.PlateElement.get_average_frame"]], "mesh_from_loft() (compas_model.elements.plateelement static method)": [[78, "compas_model.elements.PlateElement.mesh_from_loft"]], "sha256() (compas_model.elements.plateelement method)": [[79, "compas_model.elements.PlateElement.sha256"]], "to_json() (compas_model.elements.plateelement method)": [[80, "compas_model.elements.PlateElement.to_json"]], "to_jsonstring() (compas_model.elements.plateelement method)": [[81, "compas_model.elements.PlateElement.to_jsonstring"]], "transform() (compas_model.elements.plateelement method)": [[82, "compas_model.elements.PlateElement.transform"]], "transformed() (compas_model.elements.plateelement method)": [[83, "compas_model.elements.PlateElement.transformed"]], "validate_data() (compas_model.elements.plateelement class method)": [[84, "compas_model.elements.PlateElement.validate_data"]], "elementnode (class in compas_model.model)": [[85, "compas_model.model.ElementNode"]], "tostring() (compas_model.model.elementnode method)": [[86, "compas_model.model.ElementNode.ToString"]], "__init__() (compas_model.model.elementnode method)": [[87, "compas_model.model.ElementNode.__init__"]], "add() (compas_model.model.elementnode method)": [[88, "compas_model.model.ElementNode.add"]], "add_element() (compas_model.model.elementnode method)": [[89, "compas_model.model.ElementNode.add_element"]], "copy() (compas_model.model.elementnode method)": [[90, "compas_model.model.ElementNode.copy"]], "from_json() (compas_model.model.elementnode class method)": [[91, "compas_model.model.ElementNode.from_json"]], "from_jsonstring() (compas_model.model.elementnode class method)": [[92, "compas_model.model.ElementNode.from_jsonstring"]], "remove() (compas_model.model.elementnode method)": [[93, "compas_model.model.ElementNode.remove"]], "sha256() (compas_model.model.elementnode method)": [[94, "compas_model.model.ElementNode.sha256"]], "to_json() (compas_model.model.elementnode method)": [[95, "compas_model.model.ElementNode.to_json"]], "to_jsonstring() (compas_model.model.elementnode method)": [[96, "compas_model.model.ElementNode.to_jsonstring"]], "traverse() (compas_model.model.elementnode method)": [[97, "compas_model.model.ElementNode.traverse"]], "validate_data() (compas_model.model.elementnode class method)": [[98, "compas_model.model.ElementNode.validate_data"]], "elementtree (class in compas_model.model)": [[99, "compas_model.model.ElementTree"]], "tostring() (compas_model.model.elementtree method)": [[100, "compas_model.model.ElementTree.ToString"]], "__init__() (compas_model.model.elementtree method)": [[101, "compas_model.model.ElementTree.__init__"]], "add() (compas_model.model.elementtree method)": [[102, "compas_model.model.ElementTree.add"]], "compute_aabb() (compas_model.model.elementtree method)": [[103, "compas_model.model.ElementTree.compute_aabb"]], "compute_obb() (compas_model.model.elementtree method)": [[104, "compas_model.model.ElementTree.compute_obb"]], "copy() (compas_model.model.elementtree method)": [[105, "compas_model.model.ElementTree.copy"]], "find_element_node() (compas_model.model.elementtree method)": [[106, "compas_model.model.ElementTree.find_element_node"]], "from_json() (compas_model.model.elementtree class method)": [[107, "compas_model.model.ElementTree.from_json"]], "from_jsonstring() (compas_model.model.elementtree class method)": [[108, "compas_model.model.ElementTree.from_jsonstring"]], "get_node_by_name() (compas_model.model.elementtree method)": [[109, "compas_model.model.ElementTree.get_node_by_name"]], "get_nodes_by_name() (compas_model.model.elementtree method)": [[110, "compas_model.model.ElementTree.get_nodes_by_name"]], "print_hierarchy() (compas_model.model.elementtree method)": [[111, "compas_model.model.ElementTree.print_hierarchy"]], "remove() (compas_model.model.elementtree method)": [[112, "compas_model.model.ElementTree.remove"]], "rotate() (compas_model.model.elementtree method)": [[113, "compas_model.model.ElementTree.rotate"]], "rotated() (compas_model.model.elementtree method)": [[114, "compas_model.model.ElementTree.rotated"]], "scale() (compas_model.model.elementtree method)": [[115, "compas_model.model.ElementTree.scale"]], "scaled() (compas_model.model.elementtree method)": [[116, "compas_model.model.ElementTree.scaled"]], "sha256() (compas_model.model.elementtree method)": [[117, "compas_model.model.ElementTree.sha256"]], "to_json() (compas_model.model.elementtree method)": [[118, "compas_model.model.ElementTree.to_json"]], "to_jsonstring() (compas_model.model.elementtree method)": [[119, "compas_model.model.ElementTree.to_jsonstring"]], "transform() (compas_model.model.elementtree method)": [[120, "compas_model.model.ElementTree.transform"]], "transform_numpy() (compas_model.model.elementtree method)": [[121, "compas_model.model.ElementTree.transform_numpy"]], "transformed() (compas_model.model.elementtree method)": [[122, "compas_model.model.ElementTree.transformed"]], "transformed_numpy() (compas_model.model.elementtree method)": [[123, "compas_model.model.ElementTree.transformed_numpy"]], "translate() (compas_model.model.elementtree method)": [[124, "compas_model.model.ElementTree.translate"]], "translated() (compas_model.model.elementtree method)": [[125, "compas_model.model.ElementTree.translated"]], "traverse() (compas_model.model.elementtree method)": [[126, "compas_model.model.ElementTree.traverse"]], "validate_data() (compas_model.model.elementtree class method)": [[127, "compas_model.model.ElementTree.validate_data"]], "interaction (class in compas_model.model)": [[128, "compas_model.model.Interaction"]], "tostring() (compas_model.model.interaction method)": [[129, "compas_model.model.Interaction.ToString"]], "__init__() (compas_model.model.interaction method)": [[130, "compas_model.model.Interaction.__init__"]], "copy() (compas_model.model.interaction method)": [[131, "compas_model.model.Interaction.copy"]], "from_json() (compas_model.model.interaction class method)": [[132, "compas_model.model.Interaction.from_json"]], "from_jsonstring() (compas_model.model.interaction class method)": [[133, "compas_model.model.Interaction.from_jsonstring"]], "sha256() (compas_model.model.interaction method)": [[134, "compas_model.model.Interaction.sha256"]], "to_json() (compas_model.model.interaction method)": [[135, "compas_model.model.Interaction.to_json"]], "to_jsonstring() (compas_model.model.interaction method)": [[136, "compas_model.model.Interaction.to_jsonstring"]], "validate_data() (compas_model.model.interaction class method)": [[137, "compas_model.model.Interaction.validate_data"]], "interactiongraph (class in compas_model.model)": [[138, "compas_model.model.InteractionGraph"]], "tostring() (compas_model.model.interactiongraph method)": [[139, "compas_model.model.InteractionGraph.ToString"]], "__init__() (compas_model.model.interactiongraph method)": [[140, "compas_model.model.InteractionGraph.__init__"]], "aabb() (compas_model.model.interactiongraph method)": [[141, "compas_model.model.InteractionGraph.aabb"]], "add_edge() (compas_model.model.interactiongraph method)": [[142, "compas_model.model.InteractionGraph.add_edge"]], "add_node() (compas_model.model.interactiongraph method)": [[143, "compas_model.model.InteractionGraph.add_node"]], "adjacency_matrix() (compas_model.model.interactiongraph method)": [[144, "compas_model.model.InteractionGraph.adjacency_matrix"]], "clear() (compas_model.model.interactiongraph method)": [[145, "compas_model.model.InteractionGraph.clear"]], "complement() (compas_model.model.interactiongraph method)": [[146, "compas_model.model.InteractionGraph.complement"]], "compute_aabb() (compas_model.model.interactiongraph method)": [[147, "compas_model.model.InteractionGraph.compute_aabb"]], "compute_obb() (compas_model.model.interactiongraph method)": [[148, "compas_model.model.InteractionGraph.compute_obb"]], "connected_edges() (compas_model.model.interactiongraph method)": [[149, "compas_model.model.InteractionGraph.connected_edges"]], "connected_nodes() (compas_model.model.interactiongraph method)": [[150, "compas_model.model.InteractionGraph.connected_nodes"]], "connectivity_matrix() (compas_model.model.interactiongraph method)": [[151, "compas_model.model.InteractionGraph.connectivity_matrix"]], "copy() (compas_model.model.interactiongraph method)": [[152, "compas_model.model.InteractionGraph.copy"]], "count_crossings() (compas_model.model.interactiongraph method)": [[153, "compas_model.model.InteractionGraph.count_crossings"]], "degree() (compas_model.model.interactiongraph method)": [[154, "compas_model.model.InteractionGraph.degree"]], "degree_in() (compas_model.model.interactiongraph method)": [[155, "compas_model.model.InteractionGraph.degree_in"]], "degree_matrix() (compas_model.model.interactiongraph method)": [[156, "compas_model.model.InteractionGraph.degree_matrix"]], "degree_out() (compas_model.model.interactiongraph method)": [[157, "compas_model.model.InteractionGraph.degree_out"]], "delete_edge() (compas_model.model.interactiongraph method)": [[158, "compas_model.model.InteractionGraph.delete_edge"]], "delete_node() (compas_model.model.interactiongraph method)": [[159, "compas_model.model.InteractionGraph.delete_node"]], "edge_attribute() (compas_model.model.interactiongraph method)": [[160, "compas_model.model.InteractionGraph.edge_attribute"]], "edge_attributes() (compas_model.model.interactiongraph method)": [[161, "compas_model.model.InteractionGraph.edge_attributes"]], "edge_coordinates() (compas_model.model.interactiongraph method)": [[162, "compas_model.model.InteractionGraph.edge_coordinates"]], "edge_direction() (compas_model.model.interactiongraph method)": [[163, "compas_model.model.InteractionGraph.edge_direction"]], "edge_end() (compas_model.model.interactiongraph method)": [[164, "compas_model.model.InteractionGraph.edge_end"]], "edge_index() (compas_model.model.interactiongraph method)": [[165, "compas_model.model.InteractionGraph.edge_index"]], "edge_length() (compas_model.model.interactiongraph method)": [[166, "compas_model.model.InteractionGraph.edge_length"]], "edge_line() (compas_model.model.interactiongraph method)": [[167, "compas_model.model.InteractionGraph.edge_line"]], "edge_midpoint() (compas_model.model.interactiongraph method)": [[168, "compas_model.model.InteractionGraph.edge_midpoint"]], "edge_point() (compas_model.model.interactiongraph method)": [[169, "compas_model.model.InteractionGraph.edge_point"]], "edge_sample() (compas_model.model.interactiongraph method)": [[170, "compas_model.model.InteractionGraph.edge_sample"]], "edge_start() (compas_model.model.interactiongraph method)": [[171, "compas_model.model.InteractionGraph.edge_start"]], "edge_vector() (compas_model.model.interactiongraph method)": [[172, "compas_model.model.InteractionGraph.edge_vector"]], "edges() (compas_model.model.interactiongraph method)": [[173, "compas_model.model.InteractionGraph.edges"]], "edges_attribute() (compas_model.model.interactiongraph method)": [[174, "compas_model.model.InteractionGraph.edges_attribute"]], "edges_attributes() (compas_model.model.interactiongraph method)": [[175, "compas_model.model.InteractionGraph.edges_attributes"]], "edges_where() (compas_model.model.interactiongraph method)": [[176, "compas_model.model.InteractionGraph.edges_where"]], "edges_where_predicate() (compas_model.model.interactiongraph method)": [[177, "compas_model.model.InteractionGraph.edges_where_predicate"]], "embed_in_plane() (compas_model.model.interactiongraph method)": [[178, "compas_model.model.InteractionGraph.embed_in_plane"]], "exploded() (compas_model.model.interactiongraph method)": [[179, "compas_model.model.InteractionGraph.exploded"]], "find_crossings() (compas_model.model.interactiongraph method)": [[180, "compas_model.model.InteractionGraph.find_crossings"]], "find_cycles() (compas_model.model.interactiongraph method)": [[181, "compas_model.model.InteractionGraph.find_cycles"]], "from_edges() (compas_model.model.interactiongraph class method)": [[182, "compas_model.model.InteractionGraph.from_edges"]], "from_json() (compas_model.model.interactiongraph class method)": [[183, "compas_model.model.InteractionGraph.from_json"]], "from_jsonstring() (compas_model.model.interactiongraph class method)": [[184, "compas_model.model.InteractionGraph.from_jsonstring"]], "from_lines() (compas_model.model.interactiongraph class method)": [[185, "compas_model.model.InteractionGraph.from_lines"]], "from_networkx() (compas_model.model.interactiongraph class method)": [[186, "compas_model.model.InteractionGraph.from_networkx"]], "from_nodes_and_edges() (compas_model.model.interactiongraph class method)": [[187, "compas_model.model.InteractionGraph.from_nodes_and_edges"]], "from_obj() (compas_model.model.interactiongraph class method)": [[188, "compas_model.model.InteractionGraph.from_obj"]], "from_pointcloud() (compas_model.model.interactiongraph class method)": [[189, "compas_model.model.InteractionGraph.from_pointcloud"]], "gkey_node() (compas_model.model.interactiongraph method)": [[190, "compas_model.model.InteractionGraph.gkey_node"]], "has_edge() (compas_model.model.interactiongraph method)": [[191, "compas_model.model.InteractionGraph.has_edge"]], "has_node() (compas_model.model.interactiongraph method)": [[192, "compas_model.model.InteractionGraph.has_node"]], "index_edge() (compas_model.model.interactiongraph method)": [[193, "compas_model.model.InteractionGraph.index_edge"]], "index_node() (compas_model.model.interactiongraph method)": [[194, "compas_model.model.InteractionGraph.index_node"]], "is_connected() (compas_model.model.interactiongraph method)": [[195, "compas_model.model.InteractionGraph.is_connected"]], "is_crossed() (compas_model.model.interactiongraph method)": [[196, "compas_model.model.InteractionGraph.is_crossed"]], "is_leaf() (compas_model.model.interactiongraph method)": [[197, "compas_model.model.InteractionGraph.is_leaf"]], "is_node_connected() (compas_model.model.interactiongraph method)": [[198, "compas_model.model.InteractionGraph.is_node_connected"]], "is_planar() (compas_model.model.interactiongraph method)": [[199, "compas_model.model.InteractionGraph.is_planar"]], "is_planar_embedding() (compas_model.model.interactiongraph method)": [[200, "compas_model.model.InteractionGraph.is_planar_embedding"]], "is_xy() (compas_model.model.interactiongraph method)": [[201, "compas_model.model.InteractionGraph.is_xy"]], "join_edges() (compas_model.model.interactiongraph method)": [[202, "compas_model.model.InteractionGraph.join_edges"]], "laplacian_matrix() (compas_model.model.interactiongraph method)": [[203, "compas_model.model.InteractionGraph.laplacian_matrix"]], "leaves() (compas_model.model.interactiongraph method)": [[204, "compas_model.model.InteractionGraph.leaves"]], "neighborhood() (compas_model.model.interactiongraph method)": [[205, "compas_model.model.InteractionGraph.neighborhood"]], "neighbors() (compas_model.model.interactiongraph method)": [[206, "compas_model.model.InteractionGraph.neighbors"]], "neighbors_in() (compas_model.model.interactiongraph method)": [[207, "compas_model.model.InteractionGraph.neighbors_in"]], "neighbors_out() (compas_model.model.interactiongraph method)": [[208, "compas_model.model.InteractionGraph.neighbors_out"]], "node_attribute() (compas_model.model.interactiongraph method)": [[209, "compas_model.model.InteractionGraph.node_attribute"]], "node_attributes() (compas_model.model.interactiongraph method)": [[210, "compas_model.model.InteractionGraph.node_attributes"]], "node_coordinates() (compas_model.model.interactiongraph method)": [[211, "compas_model.model.InteractionGraph.node_coordinates"]], "node_edges() (compas_model.model.interactiongraph method)": [[212, "compas_model.model.InteractionGraph.node_edges"]], "node_gkey() (compas_model.model.interactiongraph method)": [[213, "compas_model.model.InteractionGraph.node_gkey"]], "node_index() (compas_model.model.interactiongraph method)": [[214, "compas_model.model.InteractionGraph.node_index"]], "node_laplacian() (compas_model.model.interactiongraph method)": [[215, "compas_model.model.InteractionGraph.node_laplacian"]], "node_neighborhood_centroid() (compas_model.model.interactiongraph method)": [[216, "compas_model.model.InteractionGraph.node_neighborhood_centroid"]], "node_point() (compas_model.model.interactiongraph method)": [[217, "compas_model.model.InteractionGraph.node_point"]], "node_sample() (compas_model.model.interactiongraph method)": [[218, "compas_model.model.InteractionGraph.node_sample"]], "nodes() (compas_model.model.interactiongraph method)": [[219, "compas_model.model.InteractionGraph.nodes"]], "nodes_attribute() (compas_model.model.interactiongraph method)": [[220, "compas_model.model.InteractionGraph.nodes_attribute"]], "nodes_attributes() (compas_model.model.interactiongraph method)": [[221, "compas_model.model.InteractionGraph.nodes_attributes"]], "nodes_where() (compas_model.model.interactiongraph method)": [[222, "compas_model.model.InteractionGraph.nodes_where"]], "nodes_where_predicate() (compas_model.model.interactiongraph method)": [[223, "compas_model.model.InteractionGraph.nodes_where_predicate"]], "number_of_edges() (compas_model.model.interactiongraph method)": [[224, "compas_model.model.InteractionGraph.number_of_edges"]], "number_of_nodes() (compas_model.model.interactiongraph method)": [[225, "compas_model.model.InteractionGraph.number_of_nodes"]], "obb() (compas_model.model.interactiongraph method)": [[226, "compas_model.model.InteractionGraph.obb"]], "rotate() (compas_model.model.interactiongraph method)": [[227, "compas_model.model.InteractionGraph.rotate"]], "rotated() (compas_model.model.interactiongraph method)": [[228, "compas_model.model.InteractionGraph.rotated"]], "scale() (compas_model.model.interactiongraph method)": [[229, "compas_model.model.InteractionGraph.scale"]], "scaled() (compas_model.model.interactiongraph method)": [[230, "compas_model.model.InteractionGraph.scaled"]], "sha256() (compas_model.model.interactiongraph method)": [[231, "compas_model.model.InteractionGraph.sha256"]], "shortest_path() (compas_model.model.interactiongraph method)": [[232, "compas_model.model.InteractionGraph.shortest_path"]], "smooth() (compas_model.model.interactiongraph method)": [[233, "compas_model.model.InteractionGraph.smooth"]], "split_edge() (compas_model.model.interactiongraph method)": [[234, "compas_model.model.InteractionGraph.split_edge"]], "summary() (compas_model.model.interactiongraph method)": [[235, "compas_model.model.InteractionGraph.summary"]], "to_json() (compas_model.model.interactiongraph method)": [[236, "compas_model.model.InteractionGraph.to_json"]], "to_jsonstring() (compas_model.model.interactiongraph method)": [[237, "compas_model.model.InteractionGraph.to_jsonstring"]], "to_lines() (compas_model.model.interactiongraph method)": [[238, "compas_model.model.InteractionGraph.to_lines"]], "to_networkx() (compas_model.model.interactiongraph method)": [[239, "compas_model.model.InteractionGraph.to_networkx"]], "to_nodes_and_edges() (compas_model.model.interactiongraph method)": [[240, "compas_model.model.InteractionGraph.to_nodes_and_edges"]], "to_obj() (compas_model.model.interactiongraph method)": [[241, "compas_model.model.InteractionGraph.to_obj"]], "to_points() (compas_model.model.interactiongraph method)": [[242, "compas_model.model.InteractionGraph.to_points"]], "transform() (compas_model.model.interactiongraph method)": [[243, "compas_model.model.InteractionGraph.transform"]], "transform_numpy() (compas_model.model.interactiongraph method)": [[244, "compas_model.model.InteractionGraph.transform_numpy"]], "transformed() (compas_model.model.interactiongraph method)": [[245, "compas_model.model.InteractionGraph.transformed"]], "transformed_numpy() (compas_model.model.interactiongraph method)": [[246, "compas_model.model.InteractionGraph.transformed_numpy"]], "translate() (compas_model.model.interactiongraph method)": [[247, "compas_model.model.InteractionGraph.translate"]], "translated() (compas_model.model.interactiongraph method)": [[248, "compas_model.model.InteractionGraph.translated"]], "unset_edge_attribute() (compas_model.model.interactiongraph method)": [[249, "compas_model.model.InteractionGraph.unset_edge_attribute"]], "unset_node_attribute() (compas_model.model.interactiongraph method)": [[250, "compas_model.model.InteractionGraph.unset_node_attribute"]], "update_default_edge_attributes() (compas_model.model.interactiongraph method)": [[251, "compas_model.model.InteractionGraph.update_default_edge_attributes"]], "update_default_node_attributes() (compas_model.model.interactiongraph method)": [[252, "compas_model.model.InteractionGraph.update_default_node_attributes"]], "validate_data() (compas_model.model.interactiongraph class method)": [[253, "compas_model.model.InteractionGraph.validate_data"]], "model (class in compas_model.model)": [[254, "compas_model.model.Model"]], "tostring() (compas_model.model.model method)": [[255, "compas_model.model.Model.ToString"]], "__init__() (compas_model.model.model method)": [[256, "compas_model.model.Model.__init__"]], "add_element() (compas_model.model.model method)": [[257, "compas_model.model.Model.add_element"]], "add_elements() (compas_model.model.model method)": [[258, "compas_model.model.Model.add_elements"]], "add_interaction() (compas_model.model.model method)": [[259, "compas_model.model.Model.add_interaction"]], "add_interaction_by_index() (compas_model.model.model method)": [[260, "compas_model.model.Model.add_interaction_by_index"]], "compute_aabb() (compas_model.model.model method)": [[261, "compas_model.model.Model.compute_aabb"]], "compute_obb() (compas_model.model.model method)": [[262, "compas_model.model.Model.compute_obb"]], "copy() (compas_model.model.model method)": [[263, "compas_model.model.Model.copy"]], "from_json() (compas_model.model.model class method)": [[264, "compas_model.model.Model.from_json"]], "from_jsonstring() (compas_model.model.model class method)": [[265, "compas_model.model.Model.from_jsonstring"]], "get_interactions_lines() (compas_model.model.model method)": [[266, "compas_model.model.Model.get_interactions_lines"]], "print() (compas_model.model.model method)": [[267, "compas_model.model.Model.print"]], "remove_element() (compas_model.model.model method)": [[268, "compas_model.model.Model.remove_element"]], "rotate() (compas_model.model.model method)": [[269, "compas_model.model.Model.rotate"]], "rotated() (compas_model.model.model method)": [[270, "compas_model.model.Model.rotated"]], "scale() (compas_model.model.model method)": [[271, "compas_model.model.Model.scale"]], "scaled() (compas_model.model.model method)": [[272, "compas_model.model.Model.scaled"]], "sha256() (compas_model.model.model method)": [[273, "compas_model.model.Model.sha256"]], "to_json() (compas_model.model.model method)": [[274, "compas_model.model.Model.to_json"]], "to_jsonstring() (compas_model.model.model method)": [[275, "compas_model.model.Model.to_jsonstring"]], "transform() (compas_model.model.model method)": [[276, "compas_model.model.Model.transform"]], "transform_numpy() (compas_model.model.model method)": [[277, "compas_model.model.Model.transform_numpy"]], "transformed() (compas_model.model.model method)": [[278, "compas_model.model.Model.transformed"]], "transformed_numpy() (compas_model.model.model method)": [[279, "compas_model.model.Model.transformed_numpy"]], "translate() (compas_model.model.model method)": [[280, "compas_model.model.Model.translate"]], "translated() (compas_model.model.model method)": [[281, "compas_model.model.Model.translated"]], "validate_data() (compas_model.model.model class method)": [[282, "compas_model.model.Model.validate_data"]]}})