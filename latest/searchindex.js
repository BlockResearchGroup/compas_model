Search.setIndex({"docnames": ["acknowledgements", "api", "api/compas_model.elements", "api/compas_model.model", "api/generated/compas_model.elements.Beam", "api/generated/compas_model.elements.Beam.ToString", "api/generated/compas_model.elements.Beam.__init__", "api/generated/compas_model.elements.Beam.compute_aabb", "api/generated/compas_model.elements.Beam.compute_collision_mesh", "api/generated/compas_model.elements.Beam.compute_face_polygons", "api/generated/compas_model.elements.Beam.compute_obb", "api/generated/compas_model.elements.Beam.copy", "api/generated/compas_model.elements.Beam.from_json", "api/generated/compas_model.elements.Beam.from_jsonstring", "api/generated/compas_model.elements.Beam.from_line", "api/generated/compas_model.elements.Beam.sha256", "api/generated/compas_model.elements.Beam.to_json", "api/generated/compas_model.elements.Beam.to_jsonstring", "api/generated/compas_model.elements.Beam.transform", "api/generated/compas_model.elements.Beam.transformed", "api/generated/compas_model.elements.Beam.validate_data", "api/generated/compas_model.elements.Block", "api/generated/compas_model.elements.Block.ToString", "api/generated/compas_model.elements.Block.__init__", "api/generated/compas_model.elements.Block.compute_aabb", "api/generated/compas_model.elements.Block.compute_collision_mesh", "api/generated/compas_model.elements.Block.compute_obb", "api/generated/compas_model.elements.Block.copy", "api/generated/compas_model.elements.Block.from_json", "api/generated/compas_model.elements.Block.from_jsonstring", "api/generated/compas_model.elements.Block.sha256", "api/generated/compas_model.elements.Block.to_json", "api/generated/compas_model.elements.Block.to_jsonstring", "api/generated/compas_model.elements.Block.transform", "api/generated/compas_model.elements.Block.transformed", "api/generated/compas_model.elements.Block.validate_data", "api/generated/compas_model.elements.Element", "api/generated/compas_model.elements.Element.ToString", "api/generated/compas_model.elements.Element.__init__", "api/generated/compas_model.elements.Element.compute_aabb", "api/generated/compas_model.elements.Element.compute_collision_mesh", "api/generated/compas_model.elements.Element.compute_obb", "api/generated/compas_model.elements.Element.copy", "api/generated/compas_model.elements.Element.from_json", "api/generated/compas_model.elements.Element.from_jsonstring", "api/generated/compas_model.elements.Element.sha256", "api/generated/compas_model.elements.Element.to_json", "api/generated/compas_model.elements.Element.to_jsonstring", "api/generated/compas_model.elements.Element.transform", "api/generated/compas_model.elements.Element.transformed", "api/generated/compas_model.elements.Element.validate_data", "api/generated/compas_model.elements.Interface", "api/generated/compas_model.elements.Interface.ToString", "api/generated/compas_model.elements.Interface.__init__", "api/generated/compas_model.elements.Interface.compute_aabb", "api/generated/compas_model.elements.Interface.compute_collision_mesh", "api/generated/compas_model.elements.Interface.compute_obb", "api/generated/compas_model.elements.Interface.copy", "api/generated/compas_model.elements.Interface.from_json", "api/generated/compas_model.elements.Interface.from_jsonstring", "api/generated/compas_model.elements.Interface.sha256", "api/generated/compas_model.elements.Interface.to_json", "api/generated/compas_model.elements.Interface.to_jsonstring", "api/generated/compas_model.elements.Interface.transform", "api/generated/compas_model.elements.Interface.transformed", "api/generated/compas_model.elements.Interface.validate_data", "api/generated/compas_model.elements.Plate", "api/generated/compas_model.elements.Plate.ToString", "api/generated/compas_model.elements.Plate.__init__", "api/generated/compas_model.elements.Plate.compute_aabb", "api/generated/compas_model.elements.Plate.compute_collision_mesh", "api/generated/compas_model.elements.Plate.compute_loft", "api/generated/compas_model.elements.Plate.compute_obb", "api/generated/compas_model.elements.Plate.copy", "api/generated/compas_model.elements.Plate.from_json", "api/generated/compas_model.elements.Plate.from_jsonstring", "api/generated/compas_model.elements.Plate.from_two_polygons", "api/generated/compas_model.elements.Plate.get_average_frame", "api/generated/compas_model.elements.Plate.mesh_from_loft", "api/generated/compas_model.elements.Plate.sha256", "api/generated/compas_model.elements.Plate.to_json", "api/generated/compas_model.elements.Plate.to_jsonstring", "api/generated/compas_model.elements.Plate.transform", "api/generated/compas_model.elements.Plate.transformed", "api/generated/compas_model.elements.Plate.validate_data", "api/generated/compas_model.model.ElementNode", "api/generated/compas_model.model.ElementNode.ToString", "api/generated/compas_model.model.ElementNode.__init__", "api/generated/compas_model.model.ElementNode.add", "api/generated/compas_model.model.ElementNode.copy", "api/generated/compas_model.model.ElementNode.from_json", "api/generated/compas_model.model.ElementNode.from_jsonstring", "api/generated/compas_model.model.ElementNode.remove", "api/generated/compas_model.model.ElementNode.sha256", "api/generated/compas_model.model.ElementNode.to_json", "api/generated/compas_model.model.ElementNode.to_jsonstring", "api/generated/compas_model.model.ElementNode.traverse", "api/generated/compas_model.model.ElementNode.validate_data", "api/generated/compas_model.model.ElementTree", "api/generated/compas_model.model.ElementTree.ToString", "api/generated/compas_model.model.ElementTree.__init__", "api/generated/compas_model.model.ElementTree.add", "api/generated/compas_model.model.ElementTree.add_element", "api/generated/compas_model.model.ElementTree.add_group", "api/generated/compas_model.model.ElementTree.copy", "api/generated/compas_model.model.ElementTree.from_json", "api/generated/compas_model.model.ElementTree.from_jsonstring", "api/generated/compas_model.model.ElementTree.get_node_by_name", "api/generated/compas_model.model.ElementTree.get_nodes_by_name", "api/generated/compas_model.model.ElementTree.print", "api/generated/compas_model.model.ElementTree.print_hierarchy", "api/generated/compas_model.model.ElementTree.remove", "api/generated/compas_model.model.ElementTree.sha256", "api/generated/compas_model.model.ElementTree.to_json", "api/generated/compas_model.model.ElementTree.to_jsonstring", "api/generated/compas_model.model.ElementTree.transform", "api/generated/compas_model.model.ElementTree.transform_numpy", "api/generated/compas_model.model.ElementTree.transformed", "api/generated/compas_model.model.ElementTree.transformed_numpy", "api/generated/compas_model.model.ElementTree.traverse", "api/generated/compas_model.model.ElementTree.validate_data", "api/generated/compas_model.model.GroupNode", "api/generated/compas_model.model.GroupNode.ToString", "api/generated/compas_model.model.GroupNode.__init__", "api/generated/compas_model.model.GroupNode.add", "api/generated/compas_model.model.GroupNode.add_element", "api/generated/compas_model.model.GroupNode.add_group", "api/generated/compas_model.model.GroupNode.copy", "api/generated/compas_model.model.GroupNode.from_json", "api/generated/compas_model.model.GroupNode.from_jsonstring", "api/generated/compas_model.model.GroupNode.remove", "api/generated/compas_model.model.GroupNode.sha256", "api/generated/compas_model.model.GroupNode.to_json", "api/generated/compas_model.model.GroupNode.to_jsonstring", "api/generated/compas_model.model.GroupNode.traverse", "api/generated/compas_model.model.GroupNode.validate_data", "api/generated/compas_model.model.Model", "api/generated/compas_model.model.Model.ToString", "api/generated/compas_model.model.Model.__init__", "api/generated/compas_model.model.Model.add_element", "api/generated/compas_model.model.Model.add_elements", "api/generated/compas_model.model.Model.add_group", "api/generated/compas_model.model.Model.add_interaction", "api/generated/compas_model.model.Model.copy", "api/generated/compas_model.model.Model.from_json", "api/generated/compas_model.model.Model.from_jsonstring", "api/generated/compas_model.model.Model.get_by_type", "api/generated/compas_model.model.Model.get_connected_elements", "api/generated/compas_model.model.Model.print", "api/generated/compas_model.model.Model.print_elements", "api/generated/compas_model.model.Model.print_interactions", "api/generated/compas_model.model.Model.sha256", "api/generated/compas_model.model.Model.to_json", "api/generated/compas_model.model.Model.to_jsonstring", "api/generated/compas_model.model.Model.to_nodes_and_neighbors", "api/generated/compas_model.model.Model.validate_data", "devguide", "examples", "examples/elements_beam", "examples/elements_block", "examples/elements_interface", "examples/elements_plate", "examples/model", "index", "installation", "license", "tutorial"], "filenames": ["acknowledgements.rst", "api.rst", "api/compas_model.elements.rst", "api/compas_model.model.rst", "api/generated/compas_model.elements.Beam.rst", "api/generated/compas_model.elements.Beam.ToString.rst", "api/generated/compas_model.elements.Beam.__init__.rst", "api/generated/compas_model.elements.Beam.compute_aabb.rst", "api/generated/compas_model.elements.Beam.compute_collision_mesh.rst", "api/generated/compas_model.elements.Beam.compute_face_polygons.rst", "api/generated/compas_model.elements.Beam.compute_obb.rst", "api/generated/compas_model.elements.Beam.copy.rst", "api/generated/compas_model.elements.Beam.from_json.rst", "api/generated/compas_model.elements.Beam.from_jsonstring.rst", "api/generated/compas_model.elements.Beam.from_line.rst", "api/generated/compas_model.elements.Beam.sha256.rst", "api/generated/compas_model.elements.Beam.to_json.rst", "api/generated/compas_model.elements.Beam.to_jsonstring.rst", "api/generated/compas_model.elements.Beam.transform.rst", "api/generated/compas_model.elements.Beam.transformed.rst", "api/generated/compas_model.elements.Beam.validate_data.rst", "api/generated/compas_model.elements.Block.rst", "api/generated/compas_model.elements.Block.ToString.rst", "api/generated/compas_model.elements.Block.__init__.rst", "api/generated/compas_model.elements.Block.compute_aabb.rst", "api/generated/compas_model.elements.Block.compute_collision_mesh.rst", "api/generated/compas_model.elements.Block.compute_obb.rst", "api/generated/compas_model.elements.Block.copy.rst", "api/generated/compas_model.elements.Block.from_json.rst", "api/generated/compas_model.elements.Block.from_jsonstring.rst", "api/generated/compas_model.elements.Block.sha256.rst", "api/generated/compas_model.elements.Block.to_json.rst", "api/generated/compas_model.elements.Block.to_jsonstring.rst", "api/generated/compas_model.elements.Block.transform.rst", "api/generated/compas_model.elements.Block.transformed.rst", "api/generated/compas_model.elements.Block.validate_data.rst", "api/generated/compas_model.elements.Element.rst", "api/generated/compas_model.elements.Element.ToString.rst", "api/generated/compas_model.elements.Element.__init__.rst", "api/generated/compas_model.elements.Element.compute_aabb.rst", "api/generated/compas_model.elements.Element.compute_collision_mesh.rst", "api/generated/compas_model.elements.Element.compute_obb.rst", "api/generated/compas_model.elements.Element.copy.rst", "api/generated/compas_model.elements.Element.from_json.rst", "api/generated/compas_model.elements.Element.from_jsonstring.rst", "api/generated/compas_model.elements.Element.sha256.rst", "api/generated/compas_model.elements.Element.to_json.rst", "api/generated/compas_model.elements.Element.to_jsonstring.rst", "api/generated/compas_model.elements.Element.transform.rst", "api/generated/compas_model.elements.Element.transformed.rst", "api/generated/compas_model.elements.Element.validate_data.rst", "api/generated/compas_model.elements.Interface.rst", "api/generated/compas_model.elements.Interface.ToString.rst", "api/generated/compas_model.elements.Interface.__init__.rst", "api/generated/compas_model.elements.Interface.compute_aabb.rst", "api/generated/compas_model.elements.Interface.compute_collision_mesh.rst", "api/generated/compas_model.elements.Interface.compute_obb.rst", "api/generated/compas_model.elements.Interface.copy.rst", "api/generated/compas_model.elements.Interface.from_json.rst", "api/generated/compas_model.elements.Interface.from_jsonstring.rst", "api/generated/compas_model.elements.Interface.sha256.rst", "api/generated/compas_model.elements.Interface.to_json.rst", "api/generated/compas_model.elements.Interface.to_jsonstring.rst", "api/generated/compas_model.elements.Interface.transform.rst", "api/generated/compas_model.elements.Interface.transformed.rst", "api/generated/compas_model.elements.Interface.validate_data.rst", "api/generated/compas_model.elements.Plate.rst", "api/generated/compas_model.elements.Plate.ToString.rst", "api/generated/compas_model.elements.Plate.__init__.rst", "api/generated/compas_model.elements.Plate.compute_aabb.rst", "api/generated/compas_model.elements.Plate.compute_collision_mesh.rst", "api/generated/compas_model.elements.Plate.compute_loft.rst", "api/generated/compas_model.elements.Plate.compute_obb.rst", "api/generated/compas_model.elements.Plate.copy.rst", "api/generated/compas_model.elements.Plate.from_json.rst", "api/generated/compas_model.elements.Plate.from_jsonstring.rst", "api/generated/compas_model.elements.Plate.from_two_polygons.rst", "api/generated/compas_model.elements.Plate.get_average_frame.rst", "api/generated/compas_model.elements.Plate.mesh_from_loft.rst", "api/generated/compas_model.elements.Plate.sha256.rst", "api/generated/compas_model.elements.Plate.to_json.rst", "api/generated/compas_model.elements.Plate.to_jsonstring.rst", "api/generated/compas_model.elements.Plate.transform.rst", "api/generated/compas_model.elements.Plate.transformed.rst", "api/generated/compas_model.elements.Plate.validate_data.rst", "api/generated/compas_model.model.ElementNode.rst", "api/generated/compas_model.model.ElementNode.ToString.rst", "api/generated/compas_model.model.ElementNode.__init__.rst", "api/generated/compas_model.model.ElementNode.add.rst", "api/generated/compas_model.model.ElementNode.copy.rst", "api/generated/compas_model.model.ElementNode.from_json.rst", "api/generated/compas_model.model.ElementNode.from_jsonstring.rst", "api/generated/compas_model.model.ElementNode.remove.rst", "api/generated/compas_model.model.ElementNode.sha256.rst", "api/generated/compas_model.model.ElementNode.to_json.rst", "api/generated/compas_model.model.ElementNode.to_jsonstring.rst", "api/generated/compas_model.model.ElementNode.traverse.rst", "api/generated/compas_model.model.ElementNode.validate_data.rst", "api/generated/compas_model.model.ElementTree.rst", "api/generated/compas_model.model.ElementTree.ToString.rst", "api/generated/compas_model.model.ElementTree.__init__.rst", "api/generated/compas_model.model.ElementTree.add.rst", "api/generated/compas_model.model.ElementTree.add_element.rst", "api/generated/compas_model.model.ElementTree.add_group.rst", "api/generated/compas_model.model.ElementTree.copy.rst", "api/generated/compas_model.model.ElementTree.from_json.rst", "api/generated/compas_model.model.ElementTree.from_jsonstring.rst", "api/generated/compas_model.model.ElementTree.get_node_by_name.rst", "api/generated/compas_model.model.ElementTree.get_nodes_by_name.rst", "api/generated/compas_model.model.ElementTree.print.rst", "api/generated/compas_model.model.ElementTree.print_hierarchy.rst", "api/generated/compas_model.model.ElementTree.remove.rst", "api/generated/compas_model.model.ElementTree.sha256.rst", "api/generated/compas_model.model.ElementTree.to_json.rst", "api/generated/compas_model.model.ElementTree.to_jsonstring.rst", "api/generated/compas_model.model.ElementTree.transform.rst", "api/generated/compas_model.model.ElementTree.transform_numpy.rst", "api/generated/compas_model.model.ElementTree.transformed.rst", "api/generated/compas_model.model.ElementTree.transformed_numpy.rst", "api/generated/compas_model.model.ElementTree.traverse.rst", "api/generated/compas_model.model.ElementTree.validate_data.rst", "api/generated/compas_model.model.GroupNode.rst", "api/generated/compas_model.model.GroupNode.ToString.rst", "api/generated/compas_model.model.GroupNode.__init__.rst", "api/generated/compas_model.model.GroupNode.add.rst", "api/generated/compas_model.model.GroupNode.add_element.rst", "api/generated/compas_model.model.GroupNode.add_group.rst", "api/generated/compas_model.model.GroupNode.copy.rst", "api/generated/compas_model.model.GroupNode.from_json.rst", "api/generated/compas_model.model.GroupNode.from_jsonstring.rst", "api/generated/compas_model.model.GroupNode.remove.rst", "api/generated/compas_model.model.GroupNode.sha256.rst", "api/generated/compas_model.model.GroupNode.to_json.rst", "api/generated/compas_model.model.GroupNode.to_jsonstring.rst", "api/generated/compas_model.model.GroupNode.traverse.rst", "api/generated/compas_model.model.GroupNode.validate_data.rst", "api/generated/compas_model.model.Model.rst", "api/generated/compas_model.model.Model.ToString.rst", "api/generated/compas_model.model.Model.__init__.rst", "api/generated/compas_model.model.Model.add_element.rst", "api/generated/compas_model.model.Model.add_elements.rst", "api/generated/compas_model.model.Model.add_group.rst", "api/generated/compas_model.model.Model.add_interaction.rst", "api/generated/compas_model.model.Model.copy.rst", "api/generated/compas_model.model.Model.from_json.rst", "api/generated/compas_model.model.Model.from_jsonstring.rst", "api/generated/compas_model.model.Model.get_by_type.rst", "api/generated/compas_model.model.Model.get_connected_elements.rst", "api/generated/compas_model.model.Model.print.rst", "api/generated/compas_model.model.Model.print_elements.rst", "api/generated/compas_model.model.Model.print_interactions.rst", "api/generated/compas_model.model.Model.sha256.rst", "api/generated/compas_model.model.Model.to_json.rst", "api/generated/compas_model.model.Model.to_jsonstring.rst", "api/generated/compas_model.model.Model.to_nodes_and_neighbors.rst", "api/generated/compas_model.model.Model.validate_data.rst", "devguide.rst", "examples.rst", "examples/elements_beam.rst", "examples/elements_block.rst", "examples/elements_interface.rst", "examples/elements_plate.rst", "examples/model.rst", "index.rst", "installation.rst", "license.rst", "tutorial.rst"], "titles": ["Acknowledgements", "API Reference", "compas_model.elements", "compas_model.model", "Beam", "Beam.ToString", "Beam.__init__", "Beam.compute_aabb", "Beam.compute_collision_mesh", "Beam.compute_face_polygons", "Beam.compute_obb", "Beam.copy", "Beam.from_json", "Beam.from_jsonstring", "Beam.from_line", "Beam.sha256", "Beam.to_json", "Beam.to_jsonstring", "Beam.transform", "Beam.transformed", "Beam.validate_data", "Block", "Block.ToString", "Block.__init__", "Block.compute_aabb", "Block.compute_collision_mesh", "Block.compute_obb", "Block.copy", "Block.from_json", "Block.from_jsonstring", "Block.sha256", "Block.to_json", "Block.to_jsonstring", "Block.transform", "Block.transformed", "Block.validate_data", "Element", "Element.ToString", "Element.__init__", "Element.compute_aabb", "Element.compute_collision_mesh", "Element.compute_obb", "Element.copy", "Element.from_json", "Element.from_jsonstring", "Element.sha256", "Element.to_json", "Element.to_jsonstring", "Element.transform", "Element.transformed", "Element.validate_data", "Interface", "Interface.ToString", "Interface.__init__", "Interface.compute_aabb", "Interface.compute_collision_mesh", "Interface.compute_obb", "Interface.copy", "Interface.from_json", "Interface.from_jsonstring", "Interface.sha256", "Interface.to_json", "Interface.to_jsonstring", "Interface.transform", "Interface.transformed", "Interface.validate_data", "Plate", "Plate.ToString", "Plate.__init__", "Plate.compute_aabb", "Plate.compute_collision_mesh", "Plate.compute_loft", "Plate.compute_obb", "Plate.copy", "Plate.from_json", "Plate.from_jsonstring", "Plate.from_two_polygons", "Plate.get_average_frame", "Plate.mesh_from_loft", "Plate.sha256", "Plate.to_json", "Plate.to_jsonstring", "Plate.transform", "Plate.transformed", "Plate.validate_data", "ElementNode", "ElementNode.ToString", "ElementNode.__init__", "ElementNode.add", "ElementNode.copy", "ElementNode.from_json", "ElementNode.from_jsonstring", "ElementNode.remove", "ElementNode.sha256", "ElementNode.to_json", "ElementNode.to_jsonstring", "ElementNode.traverse", "ElementNode.validate_data", "ElementTree", "ElementTree.ToString", "ElementTree.__init__", "ElementTree.add", "ElementTree.add_element", "ElementTree.add_group", "ElementTree.copy", "ElementTree.from_json", "ElementTree.from_jsonstring", "ElementTree.get_node_by_name", "ElementTree.get_nodes_by_name", "ElementTree.print", "ElementTree.print_hierarchy", "ElementTree.remove", "ElementTree.sha256", "ElementTree.to_json", "ElementTree.to_jsonstring", "ElementTree.transform", "ElementTree.transform_numpy", "ElementTree.transformed", "ElementTree.transformed_numpy", "ElementTree.traverse", "ElementTree.validate_data", "GroupNode", "GroupNode.ToString", "GroupNode.__init__", "GroupNode.add", "GroupNode.add_element", "GroupNode.add_group", "GroupNode.copy", "GroupNode.from_json", "GroupNode.from_jsonstring", "GroupNode.remove", "GroupNode.sha256", "GroupNode.to_json", "GroupNode.to_jsonstring", "GroupNode.traverse", "GroupNode.validate_data", "Model", "Model.ToString", "Model.__init__", "Model.add_element", "Model.add_elements", "Model.add_group", "Model.add_interaction", "Model.copy", "Model.from_json", "Model.from_jsonstring", "Model.get_by_type", "Model.get_connected_elements", "Model.print", "Model.print_elements", "Model.print_interactions", "Model.sha256", "Model.to_json", "Model.to_jsonstring", "Model.to_nodes_and_neighbors", "Model.validate_data", "Development Guide", "Examples", "Elements: Beam", "Elements: Block", "Elements: Interface", "Elements: Plate", "Model", "Documentation of COMPAS MODEL", "Installation", "License", "Tutorial"], "terms": {"compas_model": [1, 4, 19, 21, 34, 36, 49, 51, 64, 66, 76, 83, 85, 98, 102, 103, 121, 125, 126, 136, 139, 140, 141, 142, 143, 148, 149, 156, 158, 159, 160, 161, 162, 163, 164], "model": [1, 4, 21, 36, 51, 66, 85, 98, 100, 102, 103, 121, 125, 126, 157, 158, 159, 160, 161], "element": [1, 4, 7, 8, 9, 10, 18, 19, 21, 24, 25, 26, 33, 34, 51, 54, 55, 56, 63, 64, 66, 69, 70, 71, 72, 76, 82, 83, 85, 87, 98, 102, 125, 136, 138, 139, 140, 142, 143, 146, 147, 148, 149, 157, 162, 163], "class": [4, 5, 18, 19, 21, 22, 33, 34, 36, 37, 48, 49, 51, 52, 63, 64, 66, 67, 82, 83, 85, 86, 98, 99, 102, 103, 121, 122, 125, 126, 136, 137, 139, 163], "frame": [4, 6, 18, 21, 33, 36, 38, 48, 51, 63, 66, 78, 82, 158, 159, 160, 161, 162, 163], "length": [4, 6, 14], "width": [4, 6, 14], "height": [4, 6, 14], "kwarg": [4, 6, 14, 21, 23, 36, 38, 51, 53, 66, 68, 76], "base": [4, 21, 36, 51, 66, 85, 98, 121, 125, 136, 161], "A": [4, 14, 19, 21, 34, 36, 49, 51, 64, 66, 83, 85, 98, 102, 103, 121, 125, 126, 136, 139, 140, 141, 143, 146, 147, 158, 159, 161, 165], "represent": [4, 5, 16, 17, 22, 31, 32, 37, 46, 47, 51, 52, 61, 62, 67, 80, 81, 86, 94, 95, 99, 113, 114, 122, 132, 133, 137, 152, 153, 158, 159], "line": [4, 14, 36, 51, 158, 161], "box": [4, 7, 10, 21, 24, 26, 36, 39, 41, 51, 54, 56, 66, 69, 72, 160], "paramet": [4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 144, 145, 146, 147, 151, 152, 153, 155], "compa": [4, 7, 8, 10, 11, 12, 13, 14, 15, 18, 19, 21, 24, 25, 26, 27, 28, 29, 30, 33, 34, 36, 39, 40, 41, 42, 43, 44, 45, 48, 49, 51, 54, 55, 56, 57, 58, 59, 60, 63, 64, 66, 69, 70, 72, 73, 74, 75, 76, 78, 79, 82, 83, 88, 89, 90, 91, 92, 93, 96, 101, 104, 105, 106, 107, 108, 111, 112, 119, 124, 127, 128, 129, 130, 131, 134, 136, 142, 143, 144, 145, 148, 150, 151, 154, 158, 159, 160, 161, 162], "geometri": [4, 7, 8, 10, 14, 18, 19, 21, 24, 25, 26, 33, 34, 36, 38, 39, 40, 41, 48, 49, 51, 54, 55, 56, 63, 64, 66, 69, 70, 72, 76, 78, 82, 83, 103, 121, 123, 126, 141, 142, 158, 159, 160, 161, 162, 163], "The": [4, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 94, 95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 142, 144, 145, 152, 153, 155, 161, 165], "float": [4, 7, 10, 14, 24, 26, 39, 41, 54, 56, 66, 69, 72], "cross": [4, 14], "section": [4, 14], "dict": [4, 14, 21, 36, 51, 66, 76, 98, 136, 143], "option": [4, 11, 14, 15, 16, 17, 21, 27, 30, 31, 32, 36, 42, 45, 46, 47, 51, 57, 60, 61, 62, 66, 73, 76, 79, 80, 81, 85, 89, 93, 94, 95, 96, 98, 101, 102, 103, 104, 112, 113, 114, 119, 121, 125, 126, 127, 131, 132, 133, 134, 136, 139, 140, 141, 142, 146, 147, 151, 152, 153], "addit": [4, 14, 21, 36, 51, 66, 76], "keyword": [4, 14, 21, 36, 51, 66, 76], "argument": [4, 14, 21, 36, 51, 66, 76], "attribut": [4, 21, 36, 51, 66, 85, 98, 121, 136, 162], "guid": [4, 21, 36, 51, 66, 121, 158, 159, 163], "str": [4, 12, 13, 15, 16, 17, 21, 28, 29, 30, 31, 32, 36, 43, 44, 45, 46, 47, 51, 58, 59, 60, 61, 62, 66, 74, 75, 79, 80, 81, 85, 90, 91, 93, 94, 95, 98, 102, 103, 105, 106, 107, 108, 112, 113, 114, 121, 125, 126, 128, 129, 131, 132, 133, 136, 139, 141, 142, 144, 145, 146, 147, 151, 152, 153, 161], "read": [4, 21, 36, 51, 66, 85, 121], "onli": [4, 21, 36, 51, 66, 85, 96, 98, 119, 121, 134], "global": [4, 21, 36, 51, 66], "uniqu": [4, 21, 36, 51, 66], "identifi": [4, 21, 36, 51, 66, 102, 103, 126, 136, 139, 140, 141, 142], "object": [4, 5, 11, 12, 13, 16, 17, 20, 21, 22, 27, 28, 29, 31, 32, 35, 36, 37, 42, 43, 44, 46, 47, 50, 51, 52, 57, 58, 59, 61, 62, 65, 66, 67, 73, 74, 75, 80, 81, 84, 85, 86, 88, 89, 90, 91, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 113, 114, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 133, 135, 137, 143, 144, 145, 152, 153, 155], "i": [4, 12, 13, 20, 21, 28, 29, 35, 36, 43, 44, 50, 51, 58, 59, 65, 66, 74, 75, 76, 84, 85, 88, 90, 91, 96, 97, 101, 105, 106, 119, 120, 121, 124, 125, 128, 129, 134, 135, 139, 144, 145, 155, 158, 159, 160, 161, 162, 165], "gener": [4, 21, 36, 51, 66], "uuid": [4, 21, 36, 51, 66, 85, 98, 121, 136, 140, 142, 143], "uuid4": [4, 21, 36, 51, 66, 85, 98, 121, 136, 140, 142, 143], "name": [4, 21, 36, 38, 51, 66, 85, 87, 98, 100, 102, 103, 107, 108, 121, 123, 125, 126, 136, 138, 139, 141, 142, 146, 147, 162], "thi": [4, 5, 11, 12, 13, 20, 21, 22, 27, 28, 29, 35, 36, 37, 42, 43, 44, 50, 51, 52, 57, 58, 59, 65, 66, 67, 73, 74, 75, 84, 85, 86, 88, 89, 90, 91, 92, 96, 97, 99, 101, 102, 103, 104, 105, 106, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 134, 135, 137, 144, 145, 148, 155, 158, 162, 165], "necessarili": [4, 21, 36, 51, 66], "can": [4, 20, 21, 35, 36, 50, 51, 65, 66, 84, 97, 120, 135, 147, 155], "set": [4, 21, 36, 51, 66, 156], "user": [4, 21, 36, 51, 66, 85, 121, 162], "default": [4, 5, 11, 14, 16, 17, 21, 22, 27, 31, 32, 36, 37, 42, 46, 47, 51, 52, 57, 61, 62, 66, 67, 73, 80, 81, 85, 86, 89, 94, 95, 99, 101, 104, 113, 114, 121, 122, 127, 132, 133, 137, 146, 147, 152, 153], "valu": [4, 21, 36, 51, 66], "": [4, 14, 18, 20, 21, 33, 35, 36, 48, 50, 51, 63, 65, 66, 82, 84, 97, 120, 135, 148, 155], "self": [4, 5, 21, 22, 36, 37, 51, 52, 66, 67, 86, 99, 122, 137], "__class__": [4, 21, 36, 51, 66], "__name__": [4, 21, 36, 51, 66], "local": [4, 21, 36, 51, 66, 156], "coordin": [4, 21, 36, 51, 66], "worldxi": [4, 21, 36, 51, 66, 161, 162, 163], "repres": [4, 21, 36, 51, 66, 136, 139, 141, 158, 160, 161], "solid": 4, "shape": [4, 21, 36, 51, 66, 103, 121, 126, 141, 142], "geometry_simplifi": [4, 21, 23, 36, 38, 51, 66], "central": [4, 21, 36, 66, 158, 159], "axi": [4, 7, 14, 21, 24, 36, 39, 51, 54, 66, 72, 158], "aabb": [4, 7, 21, 24, 36, 39, 51, 54, 66, 72], "align": [4, 7, 21, 24, 36, 39, 51, 54, 66, 72], "bound": [4, 7, 10, 21, 24, 26, 36, 39, 41, 51, 54, 56, 66, 69, 72], "obb": [4, 10, 21, 26, 36, 41, 51, 56, 66, 69], "orient": [4, 10, 14, 21, 26, 36, 41, 51, 56, 66, 69, 161], "collision_mesh": [4, 21, 36, 51, 66], "datastructur": [4, 8, 15, 21, 25, 30, 36, 40, 45, 51, 55, 60, 66, 70, 79, 88, 92, 93, 96, 101, 107, 108, 111, 112, 117, 118, 119, 124, 130, 131, 134, 136, 142, 143, 148, 150, 151, 154, 159, 160, 161, 162, 163], "mesh": [4, 8, 15, 21, 25, 30, 36, 40, 45, 51, 55, 60, 66, 70, 71, 76, 78, 79, 93, 112, 131, 151, 159, 160, 161, 162, 163], "collis": [4, 8, 21, 25, 36, 40, 51, 55, 66, 70], "dimens": [4, 21, 36, 51, 66, 158, 159], "list": [4, 9, 21, 36, 51, 66, 78, 108, 136, 140, 146, 147, 154, 161], "featur": [4, 21, 36, 51, 66], "These": [4, 21, 36, 51, 66], "ar": [4, 5, 21, 22, 36, 37, 51, 52, 66, 67, 86, 99, 122, 136, 137, 140, 161], "custom": [4, 21, 36, 51, 66], "geometr": [4, 21, 36, 51, 66], "ad": [4, 21, 36, 51, 66, 101, 125, 136, 139, 140, 142, 156], "through": [4, 21, 36, 51, 66], "oper": [4, 21, 36, 51, 66], "made": [4, 21, 36, 51, 66], "For": [4, 21, 36, 51, 66], "exampl": [4, 15, 21, 30, 36, 45, 51, 60, 66, 79, 93, 112, 131, 151, 156, 160, 161, 163], "cut": [4, 21, 36, 51, 66], "boolean": [4, 21, 36, 51, 66], "differ": [4, 21, 36, 51, 66], "text": [4, 21, 36, 51, 66], "insert": [4, 21, 36, 51, 66], "vector": [4, 14, 21, 36, 51, 66, 161], "0": [4, 7, 10, 15, 21, 24, 26, 30, 36, 39, 41, 45, 51, 54, 56, 60, 66, 69, 72, 79, 93, 112, 131, 151, 158, 159, 160, 161, 162, 163], "1": [4, 15, 21, 30, 36, 45, 51, 60, 66, 79, 93, 112, 131, 142, 151, 158, 159, 160, 161, 162, 163], "downward": [4, 21, 36, 51, 66], "often": [4, 21, 36, 51, 66, 158], "us": [4, 5, 15, 20, 21, 22, 30, 35, 36, 37, 45, 50, 51, 52, 60, 65, 66, 67, 79, 84, 86, 93, 96, 97, 99, 112, 115, 116, 117, 118, 119, 120, 122, 131, 134, 135, 137, 151, 155, 158, 165], "simul": [4, 21, 36, 51, 66], "an": [4, 11, 12, 13, 16, 17, 19, 20, 21, 27, 28, 29, 31, 32, 34, 35, 36, 42, 43, 44, 46, 47, 49, 50, 51, 57, 58, 59, 61, 62, 64, 65, 66, 73, 74, 75, 80, 81, 83, 84, 89, 90, 91, 94, 95, 97, 102, 104, 105, 106, 113, 114, 120, 125, 127, 128, 129, 132, 133, 135, 139, 142, 144, 145, 152, 153, 155, 160, 161, 165], "assembli": [4, 21, 36, 51, 66], "sequenc": [4, 21, 36, 51, 66], "node": [4, 21, 36, 51, 66, 85, 88, 92, 96, 98, 101, 102, 103, 107, 108, 109, 111, 119, 121, 124, 125, 126, 130, 134, 136, 148, 150, 154, 158, 159, 160, 161, 162], "elementnod": [4, 21, 36, 51, 66, 98, 102, 125, 136, 139, 142, 158, 159, 160, 161, 162, 163], "tree": [4, 21, 36, 51, 66, 96, 98, 101, 102, 103, 110, 111, 119, 121, 125, 134, 136, 143, 148, 162, 163], "contain": [4, 12, 13, 21, 28, 29, 36, 43, 44, 51, 58, 59, 66, 74, 75, 78, 90, 91, 105, 106, 128, 129, 136, 142, 144, 145, 158, 162], "face_polygon": [4, 21, 66], "flat": [4, 21, 66, 136], "area": [4, 21, 66], "face": [4, 9, 15, 21, 30, 45, 60, 66, 79, 93, 112, 131, 151, 161], "polygon": [4, 9, 21, 36, 51, 53, 66, 68, 76, 77, 78, 159, 160, 161, 162, 163], "interfac": [4, 21, 36, 66, 146, 147, 157, 162, 163], "detect": [4, 21, 66], "method": [4, 5, 21, 22, 36, 37, 51, 52, 66, 67, 85, 86, 98, 99, 121, 122, 136, 137, 140, 148], "inherit": [4, 21, 36, 51, 66, 85, 98, 102, 103, 121, 125, 126, 136, 139], "convert": [5, 16, 17, 22, 31, 32, 37, 46, 47, 52, 61, 62, 67, 80, 81, 86, 94, 95, 99, 113, 114, 122, 132, 133, 137, 152, 153], "instanc": [5, 12, 13, 19, 22, 28, 29, 34, 37, 43, 44, 49, 52, 58, 59, 64, 67, 74, 75, 83, 86, 90, 91, 99, 105, 106, 122, 128, 129, 137, 144, 145], "string": [5, 13, 17, 22, 29, 32, 37, 44, 47, 52, 59, 62, 67, 75, 81, 86, 91, 95, 99, 106, 114, 122, 129, 133, 137, 145, 153], "exist": [5, 22, 37, 52, 67, 86, 99, 122, 125, 137], "net": [5, 22, 37, 52, 67, 86, 99, 122, 137], "compat": [5, 22, 37, 52, 67, 86, 99, 122, 137], "when": [5, 22, 37, 52, 67, 85, 86, 99, 101, 103, 121, 122, 126, 137, 141, 142], "ironpython": [5, 22, 37, 52, 67, 86, 99, 122, 137], "implicit": [5, 22, 37, 52, 67, 86, 99, 122, 137], "convers": [5, 22, 37, 52, 67, 86, 99, 122, 137], "usual": [5, 22, 37, 52, 67, 86, 99, 122, 137], "take": [5, 22, 37, 52, 67, 86, 99, 122, 137], "place": [5, 22, 37, 52, 67, 86, 99, 122, 137], "cpython": [5, 22, 37, 52, 67, 86, 99, 122, 137], "kick": [5, 22, 37, 52, 67, 86, 99, 122, 137], "its": [5, 14, 16, 17, 22, 31, 32, 37, 46, 47, 52, 61, 62, 67, 80, 81, 86, 94, 95, 99, 107, 113, 114, 122, 132, 133, 137, 152, 153, 162], "print": [5, 16, 17, 22, 31, 32, 37, 46, 47, 52, 61, 62, 67, 80, 81, 86, 94, 95, 99, 110, 113, 114, 122, 132, 133, 137, 149, 150, 152, 153, 158, 159, 160, 161, 162, 163], "gettyp": [5, 22, 37, 52, 67, 86, 99, 122, 137], "fullnam": [5, 22, 37, 52, 67, 86, 99, 122, 137], "similar": [5, 22, 37, 52, 67, 86, 99, 122, 137], "overrid": [5, 22, 37, 52, 67, 86, 99, 122, 137], "fix": [5, 22, 37, 52, 67, 86, 99, 122, 137], "make": [5, 11, 22, 27, 37, 42, 52, 57, 67, 73, 86, 89, 99, 104, 122, 127, 137, 156], "rhino": [5, 22, 37, 52, 67, 86, 99, 122, 137], "grasshopp": [5, 22, 37, 52, 67, 86, 99, 122, 137], "displai": [5, 22, 37, 52, 67, 86, 99, 122, 137], "proper": [5, 22, 37, 52, 67, 86, 99, 122, 137], "connect": [5, 22, 37, 52, 67, 86, 99, 122, 136, 137, 147, 162, 165], "panel": [5, 22, 37, 52, 67, 86, 99, 122, 137], "other": [5, 22, 37, 52, 67, 86, 99, 103, 121, 122, 126, 137, 141, 142, 165], "type": [5, 11, 12, 13, 20, 22, 27, 28, 29, 35, 37, 42, 43, 44, 50, 52, 57, 58, 59, 65, 67, 73, 74, 75, 84, 86, 89, 90, 91, 97, 99, 104, 105, 106, 120, 121, 122, 127, 128, 129, 135, 137, 142, 144, 145, 146, 147, 155], "output": [5, 22, 37, 52, 67, 86, 99, 122, 137], "inflat": [7, 10, 24, 26, 39, 41, 54, 56, 69, 72], "comput": [7, 8, 9, 10, 15, 24, 25, 26, 30, 39, 40, 41, 45, 54, 55, 56, 60, 69, 70, 71, 72, 79, 93, 112, 131, 136, 151], "offset": [7, 10, 24, 26, 39, 41, 54, 56, 69, 72, 161], "avoid": [7, 10, 24, 26, 39, 41, 54, 56, 69, 72], "point": [7, 10, 21, 24, 26, 39, 41, 54, 56, 66, 69, 72, 78, 158, 159, 161, 162, 163], "error": [7, 10, 24, 26, 39, 41, 54, 56, 69, 72], "return": [7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 88, 89, 90, 91, 92, 93, 95, 97, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 114, 115, 116, 117, 118, 120, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 153, 155, 159, 161], "cl": [11, 27, 42, 57, 73, 89, 104, 127], "none": [11, 14, 18, 21, 23, 27, 33, 36, 38, 42, 48, 57, 63, 73, 82, 85, 87, 88, 89, 92, 98, 100, 101, 102, 103, 104, 111, 115, 116, 121, 123, 124, 125, 126, 127, 130, 139, 141, 142, 161, 162], "independ": [11, 27, 42, 57, 73, 89, 104, 127], "data": [11, 12, 13, 15, 16, 17, 20, 27, 28, 29, 30, 31, 32, 35, 36, 42, 43, 44, 45, 46, 47, 50, 57, 58, 59, 60, 61, 62, 65, 73, 74, 75, 79, 80, 81, 84, 89, 90, 91, 93, 94, 95, 97, 98, 104, 105, 106, 112, 113, 114, 115, 116, 117, 118, 120, 127, 128, 129, 131, 132, 133, 135, 136, 144, 145, 151, 152, 153, 155, 158, 159, 161, 162, 163], "current": [11, 27, 42, 57, 73, 89, 104, 125, 126, 127], "classmethod": [12, 13, 14, 20, 28, 29, 35, 43, 44, 50, 58, 59, 65, 74, 75, 76, 84, 90, 91, 97, 105, 106, 120, 128, 129, 135, 144, 145, 155], "filepath": [12, 16, 28, 31, 43, 46, 58, 61, 74, 80, 90, 94, 105, 113, 128, 132, 144, 152], "construct": [12, 13, 20, 28, 29, 35, 43, 44, 50, 58, 59, 65, 74, 75, 84, 90, 91, 97, 105, 106, 120, 128, 129, 135, 144, 145, 155], "from": [12, 13, 14, 15, 28, 29, 30, 43, 44, 45, 51, 58, 59, 60, 66, 74, 75, 76, 78, 79, 85, 90, 91, 92, 93, 96, 102, 103, 105, 106, 111, 112, 119, 125, 126, 128, 129, 130, 131, 134, 139, 144, 145, 151, 158, 159, 160, 161, 162, 163, 165], "json": [12, 13, 16, 17, 28, 29, 31, 32, 43, 44, 46, 47, 58, 59, 61, 62, 74, 75, 80, 81, 90, 91, 94, 95, 105, 106, 113, 114, 128, 129, 132, 133, 144, 145, 152, 153, 161, 162, 163], "file": [12, 16, 28, 31, 43, 46, 58, 61, 74, 80, 90, 94, 105, 113, 128, 132, 144, 152, 156, 160, 163, 165], "path": [12, 16, 28, 31, 43, 46, 58, 61, 74, 80, 90, 94, 105, 113, 128, 132, 144, 152], "ha": [12, 13, 28, 29, 43, 44, 58, 59, 74, 75, 90, 91, 101, 105, 106, 128, 129, 144, 145], "correct": [12, 13, 28, 29, 43, 44, 58, 59, 74, 75, 90, 91, 105, 106, 128, 129, 144, 145], "schema": [12, 13, 20, 28, 29, 35, 43, 44, 50, 58, 59, 65, 74, 75, 84, 90, 91, 97, 105, 106, 120, 128, 129, 135, 144, 145, 155], "rais": [12, 13, 28, 29, 43, 44, 58, 59, 74, 75, 88, 90, 91, 96, 101, 105, 106, 119, 124, 128, 129, 134, 144, 145, 161], "typeerror": [12, 13, 28, 29, 43, 44, 58, 59, 74, 75, 88, 90, 91, 101, 105, 106, 124, 128, 129, 144, 145], "If": [12, 13, 15, 16, 17, 28, 29, 30, 31, 32, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 66, 74, 75, 76, 79, 80, 81, 85, 88, 90, 91, 93, 94, 95, 96, 101, 105, 106, 112, 113, 114, 119, 124, 125, 128, 129, 131, 132, 133, 134, 136, 139, 140, 144, 145, 151, 152, 153], "center_axi": 14, "z_vector": 14, "defin": [14, 85, 121], "creat": [14, 19, 34, 49, 64, 76, 78, 83, 85, 121, 158, 159, 160, 161, 162], "indic": 14, "direct": 14, "z": [14, 15, 30, 45, 60, 79, 93, 112, 131, 151, 161], "worldz": 14, "worldx": 14, "depend": [14, 162], "compas_timb": 14, "part": [14, 101], "as_str": [15, 30, 45, 60, 79, 93, 112, 131, 151], "fals": [15, 16, 17, 30, 31, 32, 45, 46, 47, 60, 61, 62, 79, 80, 81, 93, 94, 95, 112, 113, 114, 125, 131, 132, 133, 136, 138, 139, 140, 151, 152, 153, 161], "hash": [15, 30, 45, 60, 79, 93, 112, 131, 151], "comparison": [15, 30, 45, 60, 79, 93, 112, 131, 151], "dure": [15, 30, 45, 60, 79, 93, 112, 131, 151], "version": [15, 30, 45, 60, 79, 93, 112, 131, 151], "control": [15, 30, 45, 60, 79, 93, 112, 131, 151], "algorithm": [15, 30, 45, 60, 79, 93, 112, 131, 151], "bool": [15, 16, 17, 30, 31, 32, 45, 46, 47, 60, 61, 62, 66, 76, 79, 80, 81, 93, 94, 95, 112, 113, 114, 125, 131, 132, 133, 136, 139, 140, 151, 152, 153], "true": [15, 16, 17, 30, 31, 32, 45, 46, 47, 60, 61, 62, 66, 68, 76, 79, 80, 81, 93, 94, 95, 112, 113, 114, 125, 131, 132, 133, 136, 139, 140, 151, 152, 153, 161, 162], "digest": [15, 30, 45, 60, 79, 93, 112, 131, 151], "hexadecim": [15, 30, 45, 60, 79, 93, 112, 131, 151], "format": [15, 30, 45, 60, 79, 93, 109, 112, 131, 151], "rather": [15, 30, 45, 60, 79, 93, 112, 131, 151], "than": [15, 30, 45, 60, 79, 93, 112, 131, 151, 158], "byte": [15, 30, 45, 60, 79, 93, 112, 131, 151], "import": [15, 30, 45, 60, 79, 93, 112, 131, 151, 158, 159, 160, 161, 162, 163], "from_obj": [15, 30, 45, 60, 79, 93, 112, 131, 151], "get": [15, 30, 45, 60, 79, 93, 107, 108, 112, 131, 146, 147, 151, 154], "obj": [15, 30, 45, 60, 79, 93, 112, 131, 151], "v1": [15, 30, 45, 60, 79, 93, 112, 131, 151], "v2": [15, 30, 45, 60, 79, 93, 112, 131, 151], "vertex_attribut": [15, 30, 45, 60, 79, 93, 112, 131, 151], "vertex_sampl": [15, 30, 45, 60, 79, 93, 112, 131, 151], "v3": [15, 30, 45, 60, 79, 93, 112, 131, 151], "pretti": [16, 17, 31, 32, 46, 47, 61, 62, 80, 81, 94, 95, 113, 114, 132, 133, 152, 153, 161, 162], "nativ": [16, 17, 31, 32, 46, 47, 61, 62, 80, 81, 94, 95, 113, 114, 132, 133, 152, 153], "save": [16, 17, 31, 32, 46, 47, 61, 62, 80, 81, 94, 95, 113, 114, 132, 133, 152, 153], "all": [18, 33, 48, 63, 82, 108, 136, 142, 149, 150, 162, 165], "attrbut": [18, 33, 48, 63, 82], "appli": [18, 19, 33, 34, 48, 49, 63, 64, 82, 83], "copi": [19, 34, 49, 64, 83, 117, 118, 125, 136, 139, 140, 158, 159, 160, 161, 162, 165], "new": [19, 34, 49, 64, 83, 156], "specifi": [19, 34, 49, 64, 83], "valid": [20, 35, 50, 65, 84, 97, 120, 135, 155], "against": [20, 35, 50, 65, 84, 97, 120, 135, 155], "raw": [20, 35, 50, 65, 84, 97, 120, 135, 155], "__from_data__": [20, 35, 50, 65, 84, 97, 120, 135, 155], "ani": [20, 21, 35, 36, 50, 65, 71, 84, 85, 97, 102, 103, 120, 121, 125, 126, 135, 139, 141, 142, 155, 165], "closed_mesh": [21, 23], "implement": [21, 66], "inspir": [21, 66], "compas_assembli": [21, 66], "blockresearchgroup": [21, 66], "By": 21, "centroid": 21, "close": [21, 36, 66, 159], "simplifi": [21, 36], "e": [36, 156, 164], "g": 36, "beam": [36, 51, 157, 160, 161, 162, 163], "plate": [36, 157, 159, 160, 162, 163], "actual": 36, "block": [36, 66, 157, 160, 162, 163], "warn": 36, "do": [36, 165], "directli": 36, "instead": 36, "subclass": 36, "etc": 36, "abstract": [39, 40, 41, 48, 136], "thick": [66, 68, 161], "compute_loft": [66, 68, 76, 161], "outlin": [66, 76, 78], "loft": [66, 71, 76], "two": [66, 76, 78, 147, 159, 160, 161], "otherwis": [66, 85, 121, 165], "polygon0": [76, 78, 161], "polygon1": [76, 78, 161], "first": [76, 78, 96, 119, 134, 142, 161], "second": [76, 142], "static": [77, 78], "tupl": [78, 142], "polylin": [78, 161], "parent": [85, 87, 98, 101, 102, 103, 121, 123, 125, 126, 148], "treenod": [85, 88, 92, 96, 101, 107, 108, 111, 119, 121, 124, 130, 134, 136], "leaf": [85, 121, 139, 162], "store": [85, 98, 121, 136], "given": 85, "groupnod": [85, 102, 103, 136, 141, 162, 163], "input": [85, 121], "requir": [85, 121], "separ": [85, 121], "my_model": [85, 162], "add_el": [85, 158, 159, 160, 161, 162, 163], "after": [85, 121, 156, 162], "creation": [85, 121], "becom": [85, 121], "branch": [85, 121, 162], "sub": [85, 109, 121], "child": [88, 92, 124, 130, 148], "strategi": [96, 119, 134], "depthfirst": [96, 119, 134], "order": [96, 119, 134], "preorder": [96, 119, 134], "breadthfirst": [96, 119, 134], "postord": [96, 119, 134], "depth": [96, 119, 134], "yield": [96, 119, 134], "next": [96, 119, 134], "valueerror": [96, 101, 119, 134], "root": [98, 100, 101, 119], "structur": [98, 115, 116, 117, 118, 136, 158, 161, 162, 163], "group": [98, 103, 121, 126, 136, 141, 162], "updat": 98, "dictionari": [98, 125, 136, 162, 163], "graph": [98, 125, 136, 142, 143, 148, 150, 154, 162, 163], "allow": 98, "access": 98, "interact": [98, 136, 142, 162], "number_of_el": [98, 136], "int": [98, 136, 142], "number": [98, 148], "which": [101, 158], "case": 101, "suppli": 101, "alreadi": [101, 142], "anoth": 101, "try": 101, "add": [102, 103, 125, 126, 139, 141, 142, 161, 162], "properti": [103, 121, 126, 139, 141, 142, 143], "you": [103, 121, 126, 141, 142], "want": [103, 121, 126, 141, 142], "give": [103, 121, 126, 141, 142], "besid": [103, 121, 126, 141, 142], "readabl": 109, "spatial": [110, 148], "hierarchi": [110, 136, 148, 162], "transform": [116, 118, 158, 159, 161], "add_group": [121, 162, 163], "assign": 121, "copy_el": [125, 136, 138, 139, 140], "tripl": 125, "behavior": 125, "element_nod": [125, 162], "befor": [125, 136, 139, 140, 162], "note": 136, "collect": 136, "between": 136, "linkag": 136, "total": [136, 148], "count": 136, "number_of_nod": 136, "number_of_edg": 136, "edg": [136, 142, 148, 150, 161], "multipl": 140, "call": 140, "element0": 142, "element1": 142, "weight": 142, "pair": [142, 161], "previous": 142, "involv": 142, "duplic": 143, "element_typ": [146, 147], "One": 147, "joint": 147, "have": 147, "more": 147, "one": [147, 156], "strucutr": 148, "elementtre": [148, 162, 163], "also": [148, 158], "inform": 148, "about": 148, "includ": [148, 165], "relationship": 148, "neighbor": 154, "To": 156, "up": 156, "start": 156, "clone": [156, 164], "repo": 156, "git": [156, 164], "http": [156, 164], "github": [156, 164], "com": [156, 164], "brg": [156, 164], "research": [156, 164], "manual": 156, "extens": 156, "modul": [156, 163], "chang": 156, "simpli": 156, "run": 156, "setup": 156, "py": 156, "trough": 156, "sourc": 156, "instal": 156, "pip": [156, 163, 164], "rectangular": 158, "It": 158, "target": 158, "smaller": 158, "fabric": [158, 163], "longer": 158, "viewer": [158, 159, 160, 161], "viewermodel": [158, 159, 160, 161], "extend": 158, "b0": 158, "from_lin": 158, "3": [158, 161, 162], "25": [158, 161], "5": [158, 159, 160, 161, 162, 163], "test": [158, 159, 160], "b0_copi": 158, "from_frame_to_fram": [158, 159, 161], "belong": [158, 159, 160, 161], "follow": [158, 159, 160, 161, 165], "visual": [158, 159], "show": [158, 159, 160, 161], "scale_factor": [158, 159, 160, 161], "def": [159, 161, 162], "mesh_from_polygon": 159, "2": [159, 160, 161, 162, 163], "4": [159, 160, 161, 162, 163], "from_polygon": 159, "compute_aabb": 159, "compute_obb": 159, "block_copi": 159, "translat": [159, 161], "from_vector": [159, 161], "join": 160, "from_polyhedron": [160, 162, 163], "box0": 160, "from_vertices_and_fac": [160, 161], "to_vertices_and_fac": 160, "box1": 160, "block0": 160, "block1": 160, "interface_copi": 160, "Or": 160, "add_interact": [160, 162, 163], "vizual": [160, 161], "outward": 161, "consid": 161, "from_sides_and_radius_xi": 161, "6": 161, "10": [161, 162, 163], "15": 161, "uncom": 161, "verifi": 161, "initi": 161, "correctli": 161, "regardless": 161, "wind": 161, "revers": 161, "from_two_polygon": 161, "xform": 161, "serial": [161, 162, 163], "to_json": [161, 162], "from_json": [161, 162], "my_plat": [161, 162, 163], "larger": 161, "applic": [161, 162], "fold": 161, "system": 161, "plane": 161, "intersection_line_plan": 161, "intersection_plane_plan": 161, "intersection_line_lin": 161, "reflex_fold_mesh": 161, "poly1": 161, "poly2": 161, "reflx_pln": 161, "point3d": 161, "mkmesh": 161, "poli": 161, "normal": [161, 162], "pt": 161, "enumer": 161, "len": 161, "els": 161, "item": 161, "unit": 161, "append": 161, "pvrt": 161, "mesh_fac": 161, "num": 161, "point3ds1": 161, "rang": [161, 162], "point3ds2": 161, "nums1": 161, "origin": 161, "point3d1": 161, "vpi": 161, "k": 161, "weld": 161, "unify_cycl": 161, "p1": 161, "n1": 161, "p2": 161, "n2": 161, "line_plane_intersect": 161, "bisector_lin": 161, "plane0": 161, "plane1": 161, "toler": 161, "0001": 161, "ab": 161, "dot": 161, "mesh_polylin": 161, "faces_plan": 161, "face_plan": 161, "edges_fac": 161, "bisector": 161, "edge_fac": 161, "mid_point": 161, "edge_midpoint": 161, "01": 161, "except": 161, "parallel": 161, "face_edg": 161, "face_halfedg": 161, "interesect": 161, "consequ": 161, "edge0": 161, "edge1": 161, "intersect": 161, "line0": 161, "line1": 161, "vertical_profil": 161, "horizontal_profil": 161, "75": 161, "bottom_polygon": 161, "top_polygon": 161, "idx": 161, "my_block": [162, 163], "my_beam": [162, 163], "my_joint": [162, 163], "copy_model": 162, "truss1": 162, "truss2": 162, "print_interact": 162, "model_copi": 162, "serialize_model_nod": 162, "model_nod": 162, "insid": 162, "group_nod": 162, "timber1": 162, "my_model_nod": 162, "deseri": 162, "group_node_deseri": 162, "content": 162, "model_node_deseri": 162, "specif": 162, "spoke1": 162, "element_node_deseri": 162, "hidden": 162, "typic": 162, "car": 162, "wheel": 162, "special": 162, "spoke2": 162, "spoke3": 162, "model_tre": 162, "my_model_tre": 162, "model_tree_deseri": 162, "full": 162, "model_deseri": 162, "storag": 163, "analysi": 163, "group_block": 163, "my_block_0": 163, "my_block_1": 163, "group_beam": 163, "my_beam_0": 163, "my_beam_1": 163, "20": 163, "introduct": 163, "api": 163, "refer": 163, "develop": 163, "licens": 163, "index": 163, "cd": 164, "copyright": 165, "c": 165, "05": 165, "decemb": 165, "2023": 165, "petra": 165, "vestarta": 165, "permiss": 165, "herebi": 165, "grant": 165, "free": 165, "charg": 165, "person": 165, "obtain": 165, "softwar": 165, "associ": 165, "document": 165, "deal": 165, "without": 165, "restrict": 165, "limit": 165, "right": 165, "modifi": 165, "merg": 165, "publish": 165, "distribut": 165, "sublicens": 165, "sell": 165, "permit": 165, "whom": 165, "furnish": 165, "so": 165, "subject": 165, "condit": 165, "abov": 165, "notic": 165, "shall": 165, "substanti": 165, "portion": 165, "THE": 165, "provid": 165, "AS": 165, "warranti": 165, "OF": 165, "kind": 165, "express": 165, "OR": 165, "impli": 165, "BUT": 165, "NOT": 165, "TO": 165, "merchant": 165, "fit": 165, "FOR": 165, "particular": 165, "purpos": 165, "AND": 165, "noninfring": 165, "IN": 165, "NO": 165, "event": 165, "author": 165, "holder": 165, "BE": 165, "liabl": 165, "claim": 165, "damag": 165, "liabil": 165, "whether": 165, "action": 165, "contract": 165, "tort": 165, "aris": 165, "out": 165, "WITH": 165}, "objects": {"compas_model.elements": [[4, 0, 1, "", "Beam"], [21, 0, 1, "", "Block"], [36, 0, 1, "", "Element"], [51, 0, 1, "", "Interface"], [66, 0, 1, "", "Plate"]], "compas_model.elements.Beam": [[5, 1, 1, "", "ToString"], [6, 1, 1, "", "__init__"], [7, 1, 1, "", "compute_aabb"], [8, 1, 1, "", "compute_collision_mesh"], [9, 1, 1, "", "compute_face_polygons"], [10, 1, 1, "", "compute_obb"], [11, 1, 1, "", "copy"], [12, 1, 1, "", "from_json"], [13, 1, 1, "", "from_jsonstring"], [14, 1, 1, "", "from_line"], [15, 1, 1, "", "sha256"], [16, 1, 1, "", "to_json"], [17, 1, 1, "", "to_jsonstring"], [18, 1, 1, "", "transform"], [19, 1, 1, "", "transformed"], [20, 1, 1, "", "validate_data"]], "compas_model.elements.Block": [[22, 1, 1, "", "ToString"], [23, 1, 1, "", "__init__"], [24, 1, 1, "", "compute_aabb"], [25, 1, 1, "", "compute_collision_mesh"], [26, 1, 1, "", "compute_obb"], [27, 1, 1, "", "copy"], [28, 1, 1, "", "from_json"], [29, 1, 1, "", "from_jsonstring"], [30, 1, 1, "", "sha256"], [31, 1, 1, "", "to_json"], [32, 1, 1, "", "to_jsonstring"], [33, 1, 1, "", "transform"], [34, 1, 1, "", "transformed"], [35, 1, 1, "", "validate_data"]], "compas_model.elements.Element": [[37, 1, 1, "", "ToString"], [38, 1, 1, "", "__init__"], [39, 1, 1, "", "compute_aabb"], [40, 1, 1, "", "compute_collision_mesh"], [41, 1, 1, "", "compute_obb"], [42, 1, 1, "", "copy"], [43, 1, 1, "", "from_json"], [44, 1, 1, "", "from_jsonstring"], [45, 1, 1, "", "sha256"], [46, 1, 1, "", "to_json"], [47, 1, 1, "", "to_jsonstring"], [48, 1, 1, "", "transform"], [49, 1, 1, "", "transformed"], [50, 1, 1, "", "validate_data"]], "compas_model.elements.Interface": [[52, 1, 1, "", "ToString"], [53, 1, 1, "", "__init__"], [54, 1, 1, "", "compute_aabb"], [55, 1, 1, "", "compute_collision_mesh"], [56, 1, 1, "", "compute_obb"], [57, 1, 1, "", "copy"], [58, 1, 1, "", "from_json"], [59, 1, 1, "", "from_jsonstring"], [60, 1, 1, "", "sha256"], [61, 1, 1, "", "to_json"], [62, 1, 1, "", "to_jsonstring"], [63, 1, 1, "", "transform"], [64, 1, 1, "", "transformed"], [65, 1, 1, "", "validate_data"]], "compas_model.elements.Plate": [[67, 1, 1, "", "ToString"], [68, 1, 1, "", "__init__"], [69, 1, 1, "", "compute_aabb"], [70, 1, 1, "", "compute_collision_mesh"], [71, 1, 1, "", "compute_loft"], [72, 1, 1, "", "compute_obb"], [73, 1, 1, "", "copy"], [74, 1, 1, "", "from_json"], [75, 1, 1, "", "from_jsonstring"], [76, 1, 1, "", "from_two_polygons"], [77, 1, 1, "", "get_average_frame"], [78, 1, 1, "", "mesh_from_loft"], [79, 1, 1, "", "sha256"], [80, 1, 1, "", "to_json"], [81, 1, 1, "", "to_jsonstring"], [82, 1, 1, "", "transform"], [83, 1, 1, "", "transformed"], [84, 1, 1, "", "validate_data"]], "compas_model.model": [[85, 0, 1, "", "ElementNode"], [98, 0, 1, "", "ElementTree"], [121, 0, 1, "", "GroupNode"], [136, 0, 1, "", "Model"]], "compas_model.model.ElementNode": [[86, 1, 1, "", "ToString"], [87, 1, 1, "", "__init__"], [88, 1, 1, "", "add"], [89, 1, 1, "", "copy"], [90, 1, 1, "", "from_json"], [91, 1, 1, "", "from_jsonstring"], [92, 1, 1, "", "remove"], [93, 1, 1, "", "sha256"], [94, 1, 1, "", "to_json"], [95, 1, 1, "", "to_jsonstring"], [96, 1, 1, "", "traverse"], [97, 1, 1, "", "validate_data"]], "compas_model.model.ElementTree": [[99, 1, 1, "", "ToString"], [100, 1, 1, "", "__init__"], [101, 1, 1, "", "add"], [102, 1, 1, "", "add_element"], [103, 1, 1, "", "add_group"], [104, 1, 1, "", "copy"], [105, 1, 1, "", "from_json"], [106, 1, 1, "", "from_jsonstring"], [107, 1, 1, "", "get_node_by_name"], [108, 1, 1, "", "get_nodes_by_name"], [109, 1, 1, "", "print"], [110, 1, 1, "", "print_hierarchy"], [111, 1, 1, "", "remove"], [112, 1, 1, "", "sha256"], [113, 1, 1, "", "to_json"], [114, 1, 1, "", "to_jsonstring"], [115, 1, 1, "", "transform"], [116, 1, 1, "", "transform_numpy"], [117, 1, 1, "", "transformed"], [118, 1, 1, "", "transformed_numpy"], [119, 1, 1, "", "traverse"], [120, 1, 1, "", "validate_data"]], "compas_model.model.GroupNode": [[122, 1, 1, "", "ToString"], [123, 1, 1, "", "__init__"], [124, 1, 1, "", "add"], [125, 1, 1, "", "add_element"], [126, 1, 1, "", "add_group"], [127, 1, 1, "", "copy"], [128, 1, 1, "", "from_json"], [129, 1, 1, "", "from_jsonstring"], [130, 1, 1, "", "remove"], [131, 1, 1, "", "sha256"], [132, 1, 1, "", "to_json"], [133, 1, 1, "", "to_jsonstring"], [134, 1, 1, "", "traverse"], [135, 1, 1, "", "validate_data"]], "compas_model.model.Model": [[137, 1, 1, "", "ToString"], [138, 1, 1, "", "__init__"], [139, 1, 1, "", "add_element"], [140, 1, 1, "", "add_elements"], [141, 1, 1, "", "add_group"], [142, 1, 1, "", "add_interaction"], [143, 1, 1, "", "copy"], [144, 1, 1, "", "from_json"], [145, 1, 1, "", "from_jsonstring"], [146, 1, 1, "", "get_by_type"], [147, 1, 1, "", "get_connected_elements"], [148, 1, 1, "", "print"], [149, 1, 1, "", "print_elements"], [150, 1, 1, "", "print_interactions"], [151, 1, 1, "", "sha256"], [152, 1, 1, "", "to_json"], [153, 1, 1, "", "to_jsonstring"], [154, 1, 1, "", "to_nodes_and_neighbors"], [155, 1, 1, "", "validate_data"]]}, "objtypes": {"0": "py:class", "1": "py:method"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"]}, "titleterms": {"acknowledg": 0, "api": 1, "refer": 1, "compas_model": [2, 3], "element": [2, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 158, 159, 160, 161], "class": [2, 3], "model": [3, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 162, 163], "beam": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 158], "tostr": [5, 22, 37, 52, 67, 86, 99, 122, 137], "__init__": [6, 23, 38, 53, 68, 87, 100, 123, 138], "compute_aabb": [7, 24, 39, 54, 69], "compute_collision_mesh": [8, 25, 40, 55, 70], "compute_face_polygon": 9, "compute_obb": [10, 26, 41, 56, 72], "copi": [11, 27, 42, 57, 73, 89, 104, 127, 143], "from_json": [12, 28, 43, 58, 74, 90, 105, 128, 144], "from_jsonstr": [13, 29, 44, 59, 75, 91, 106, 129, 145], "from_lin": 14, "sha256": [15, 30, 45, 60, 79, 93, 112, 131, 151], "to_json": [16, 31, 46, 61, 80, 94, 113, 132, 152], "to_jsonstr": [17, 32, 47, 62, 81, 95, 114, 133, 153], "transform": [18, 19, 33, 34, 48, 49, 63, 64, 82, 83, 115, 117], "validate_data": [20, 35, 50, 65, 84, 97, 120, 135, 155], "block": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 159], "interfac": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 160], "plate": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 161], "compute_loft": 71, "from_two_polygon": 76, "get_average_fram": 77, "mesh_from_loft": 78, "elementnod": [85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "add": [88, 101, 124, 163], "remov": [92, 111, 130], "travers": [96, 119, 134], "elementtre": [98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120], "add_el": [102, 125, 139, 140], "add_group": [103, 126, 141], "get_node_by_nam": 107, "get_nodes_by_nam": 108, "print": [109, 148], "print_hierarchi": 110, "transform_numpi": 116, "transformed_numpi": 118, "groupnod": [121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135], "add_interact": 142, "get_by_typ": 146, "get_connected_el": 147, "print_el": 149, "print_interact": 150, "to_nodes_and_neighbor": 154, "develop": [156, 164], "guid": 156, "environ": 156, "build": 156, "exampl": 157, "document": 163, "compa": 163, "what": 163, "i": 163, "instal": [163, 164], "creat": 163, "connect": 163, "hierarchi": 163, "tabl": 163, "content": 163, "indic": 163, "stabl": 164, "licens": 165, "tutori": 166}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Acknowledgements": [[0, "acknowledgements"]], "API Reference": [[1, "api-reference"]], "compas_model.elements": [[2, "compas-model-elements"]], "Classes": [[2, "classes"], [3, "classes"]], "compas_model.model": [[3, "compas-model-model"]], "Beam": [[4, "beam"]], "Beam.ToString": [[5, "beam-tostring"]], "Beam.__init__": [[6, "beam-init"]], "Beam.compute_aabb": [[7, "beam-compute-aabb"]], "Beam.compute_collision_mesh": [[8, "beam-compute-collision-mesh"]], "Beam.compute_face_polygons": [[9, "beam-compute-face-polygons"]], "Beam.compute_obb": [[10, "beam-compute-obb"]], "Beam.copy": [[11, "beam-copy"]], "Beam.from_json": [[12, "beam-from-json"]], "Beam.from_jsonstring": [[13, "beam-from-jsonstring"]], "Beam.from_line": [[14, "beam-from-line"]], "Beam.sha256": [[15, "beam-sha256"]], "Beam.to_json": [[16, "beam-to-json"]], "Beam.to_jsonstring": [[17, "beam-to-jsonstring"]], "Beam.transform": [[18, "beam-transform"]], "Beam.transformed": [[19, "beam-transformed"]], "Beam.validate_data": [[20, "beam-validate-data"]], "Block": [[21, "block"]], "Block.ToString": [[22, "block-tostring"]], "Block.__init__": [[23, "block-init"]], "Block.compute_aabb": [[24, "block-compute-aabb"]], "Block.compute_collision_mesh": [[25, "block-compute-collision-mesh"]], "Block.compute_obb": [[26, "block-compute-obb"]], "Block.copy": [[27, "block-copy"]], "Block.from_json": [[28, "block-from-json"]], "Block.from_jsonstring": [[29, "block-from-jsonstring"]], "Block.sha256": [[30, "block-sha256"]], "Block.to_json": [[31, "block-to-json"]], "Block.to_jsonstring": [[32, "block-to-jsonstring"]], "Block.transform": [[33, "block-transform"]], "Block.transformed": [[34, "block-transformed"]], "Block.validate_data": [[35, "block-validate-data"]], "Element": [[36, "element"]], "Element.ToString": [[37, "element-tostring"]], "Element.__init__": [[38, "element-init"]], "Element.compute_aabb": [[39, "element-compute-aabb"]], "Element.compute_collision_mesh": [[40, "element-compute-collision-mesh"]], "Element.compute_obb": [[41, "element-compute-obb"]], "Element.copy": [[42, "element-copy"]], "Element.from_json": [[43, "element-from-json"]], "Element.from_jsonstring": [[44, "element-from-jsonstring"]], "Element.sha256": [[45, "element-sha256"]], "Element.to_json": [[46, "element-to-json"]], "Element.to_jsonstring": [[47, "element-to-jsonstring"]], "Element.transform": [[48, "element-transform"]], "Element.transformed": [[49, "element-transformed"]], "Element.validate_data": [[50, "element-validate-data"]], "Interface": [[51, "interface"]], "Interface.ToString": [[52, "interface-tostring"]], "Interface.__init__": [[53, "interface-init"]], "Interface.compute_aabb": [[54, "interface-compute-aabb"]], "Interface.compute_collision_mesh": [[55, "interface-compute-collision-mesh"]], "Interface.compute_obb": [[56, "interface-compute-obb"]], "Interface.copy": [[57, "interface-copy"]], "Interface.from_json": [[58, "interface-from-json"]], "Interface.from_jsonstring": [[59, "interface-from-jsonstring"]], "Interface.sha256": [[60, "interface-sha256"]], "Interface.to_json": [[61, "interface-to-json"]], "Interface.to_jsonstring": [[62, "interface-to-jsonstring"]], "Interface.transform": [[63, "interface-transform"]], "Interface.transformed": [[64, "interface-transformed"]], "Interface.validate_data": [[65, "interface-validate-data"]], "Plate": [[66, "plate"]], "Plate.ToString": [[67, "plate-tostring"]], "Plate.__init__": [[68, "plate-init"]], "Plate.compute_aabb": [[69, "plate-compute-aabb"]], "Plate.compute_collision_mesh": [[70, "plate-compute-collision-mesh"]], "Plate.compute_loft": [[71, "plate-compute-loft"]], "Plate.compute_obb": [[72, "plate-compute-obb"]], "Plate.copy": [[73, "plate-copy"]], "Plate.from_json": [[74, "plate-from-json"]], "Plate.from_jsonstring": [[75, "plate-from-jsonstring"]], "Plate.from_two_polygons": [[76, "plate-from-two-polygons"]], "Plate.get_average_frame": [[77, "plate-get-average-frame"]], "Plate.mesh_from_loft": [[78, "plate-mesh-from-loft"]], "Plate.sha256": [[79, "plate-sha256"]], "Plate.to_json": [[80, "plate-to-json"]], "Plate.to_jsonstring": [[81, "plate-to-jsonstring"]], "Plate.transform": [[82, "plate-transform"]], "Plate.transformed": [[83, "plate-transformed"]], "Plate.validate_data": [[84, "plate-validate-data"]], "ElementNode": [[85, "elementnode"]], "ElementNode.ToString": [[86, "elementnode-tostring"]], "ElementNode.__init__": [[87, "elementnode-init"]], "ElementNode.add": [[88, "elementnode-add"]], "ElementNode.copy": [[89, "elementnode-copy"]], "ElementNode.from_json": [[90, "elementnode-from-json"]], "ElementNode.from_jsonstring": [[91, "elementnode-from-jsonstring"]], "ElementNode.remove": [[92, "elementnode-remove"]], "ElementNode.sha256": [[93, "elementnode-sha256"]], "ElementNode.to_json": [[94, "elementnode-to-json"]], "ElementNode.to_jsonstring": [[95, "elementnode-to-jsonstring"]], "ElementNode.traverse": [[96, "elementnode-traverse"]], "ElementNode.validate_data": [[97, "elementnode-validate-data"]], "ElementTree": [[98, "elementtree"]], "ElementTree.ToString": [[99, "elementtree-tostring"]], "ElementTree.__init__": [[100, "elementtree-init"]], "ElementTree.add": [[101, "elementtree-add"]], "ElementTree.add_element": [[102, "elementtree-add-element"]], "ElementTree.add_group": [[103, "elementtree-add-group"]], "ElementTree.copy": [[104, "elementtree-copy"]], "ElementTree.from_json": [[105, "elementtree-from-json"]], "ElementTree.from_jsonstring": [[106, "elementtree-from-jsonstring"]], "ElementTree.get_node_by_name": [[107, "elementtree-get-node-by-name"]], "ElementTree.get_nodes_by_name": [[108, "elementtree-get-nodes-by-name"]], "ElementTree.print": [[109, "elementtree-print"]], "ElementTree.print_hierarchy": [[110, "elementtree-print-hierarchy"]], "ElementTree.remove": [[111, "elementtree-remove"]], "ElementTree.sha256": [[112, "elementtree-sha256"]], "ElementTree.to_json": [[113, "elementtree-to-json"]], "ElementTree.to_jsonstring": [[114, "elementtree-to-jsonstring"]], "ElementTree.transform": [[115, "elementtree-transform"]], "ElementTree.transform_numpy": [[116, "elementtree-transform-numpy"]], "ElementTree.transformed": [[117, "elementtree-transformed"]], "ElementTree.transformed_numpy": [[118, "elementtree-transformed-numpy"]], "ElementTree.traverse": [[119, "elementtree-traverse"]], "ElementTree.validate_data": [[120, "elementtree-validate-data"]], "GroupNode": [[121, "groupnode"]], "GroupNode.ToString": [[122, "groupnode-tostring"]], "GroupNode.__init__": [[123, "groupnode-init"]], "GroupNode.add": [[124, "groupnode-add"]], "GroupNode.add_element": [[125, "groupnode-add-element"]], "GroupNode.add_group": [[126, "groupnode-add-group"]], "GroupNode.copy": [[127, "groupnode-copy"]], "GroupNode.from_json": [[128, "groupnode-from-json"]], "GroupNode.from_jsonstring": [[129, "groupnode-from-jsonstring"]], "GroupNode.remove": [[130, "groupnode-remove"]], "GroupNode.sha256": [[131, "groupnode-sha256"]], "GroupNode.to_json": [[132, "groupnode-to-json"]], "GroupNode.to_jsonstring": [[133, "groupnode-to-jsonstring"]], "GroupNode.traverse": [[134, "groupnode-traverse"]], "GroupNode.validate_data": [[135, "groupnode-validate-data"]], "Model": [[136, "model"], [162, "model"]], "Model.ToString": [[137, "model-tostring"]], "Model.__init__": [[138, "model-init"]], "Model.add_element": [[139, "model-add-element"]], "Model.add_elements": [[140, "model-add-elements"]], "Model.add_group": [[141, "model-add-group"]], "Model.add_interaction": [[142, "model-add-interaction"]], "Model.copy": [[143, "model-copy"]], "Model.from_json": [[144, "model-from-json"]], "Model.from_jsonstring": [[145, "model-from-jsonstring"]], "Model.get_by_type": [[146, "model-get-by-type"]], "Model.get_connected_elements": [[147, "model-get-connected-elements"]], "Model.print": [[148, "model-print"]], "Model.print_elements": [[149, "model-print-elements"]], "Model.print_interactions": [[150, "model-print-interactions"]], "Model.sha256": [[151, "model-sha256"]], "Model.to_json": [[152, "model-to-json"]], "Model.to_jsonstring": [[153, "model-to-jsonstring"]], "Model.to_nodes_and_neighbors": [[154, "model-to-nodes-and-neighbors"]], "Model.validate_data": [[155, "model-validate-data"]], "Development Guide": [[156, "development-guide"]], "Environment": [[156, "environment"]], "Build": [[156, "build"]], "Examples": [[157, "examples"]], "Elements: Beam": [[158, "elements-beam"]], "Elements: Block": [[159, "elements-block"]], "Elements: Interface": [[160, "elements-interface"]], "Elements: Plate": [[161, "elements-plate"]], "Documentation of COMPAS MODEL": [[163, "documentation-of-compas-model"]], "What it is?": [[163, "what-it-is"]], "What is for?": [[163, "what-is-for"]], "Installation": [[163, "installation"], [164, "installation"]], "Create a Model": [[163, "create-a-model"]], "Add Connectivity": [[163, "add-connectivity"]], "Create Hierarchy": [[163, "create-hierarchy"]], "Table of Contents": [[163, "table-of-contents"]], "Indices and tables": [[163, "indices-and-tables"]], "Stable": [[164, "stable"]], "Development": [[164, "development"]], "License": [[165, "license"]], "Tutorial": [[166, "tutorial"]]}, "indexentries": {"beam (class in compas_model.elements)": [[4, "compas_model.elements.Beam"]], "tostring() (compas_model.elements.beam method)": [[5, "compas_model.elements.Beam.ToString"]], "__init__() (compas_model.elements.beam method)": [[6, "compas_model.elements.Beam.__init__"]], "compute_aabb() (compas_model.elements.beam method)": [[7, "compas_model.elements.Beam.compute_aabb"]], "compute_collision_mesh() (compas_model.elements.beam method)": [[8, "compas_model.elements.Beam.compute_collision_mesh"]], "compute_face_polygons() (compas_model.elements.beam method)": [[9, "compas_model.elements.Beam.compute_face_polygons"]], "compute_obb() (compas_model.elements.beam method)": [[10, "compas_model.elements.Beam.compute_obb"]], "copy() (compas_model.elements.beam method)": [[11, "compas_model.elements.Beam.copy"]], "from_json() (compas_model.elements.beam class method)": [[12, "compas_model.elements.Beam.from_json"]], "from_jsonstring() (compas_model.elements.beam class method)": [[13, "compas_model.elements.Beam.from_jsonstring"]], "from_line() (compas_model.elements.beam class method)": [[14, "compas_model.elements.Beam.from_line"]], "sha256() (compas_model.elements.beam method)": [[15, "compas_model.elements.Beam.sha256"]], "to_json() (compas_model.elements.beam method)": [[16, "compas_model.elements.Beam.to_json"]], "to_jsonstring() (compas_model.elements.beam method)": [[17, "compas_model.elements.Beam.to_jsonstring"]], "transform() (compas_model.elements.beam method)": [[18, "compas_model.elements.Beam.transform"]], "transformed() (compas_model.elements.beam method)": [[19, "compas_model.elements.Beam.transformed"]], "validate_data() (compas_model.elements.beam class method)": [[20, "compas_model.elements.Beam.validate_data"]], "block (class in compas_model.elements)": [[21, "compas_model.elements.Block"]], "tostring() (compas_model.elements.block method)": [[22, "compas_model.elements.Block.ToString"]], "__init__() (compas_model.elements.block method)": [[23, "compas_model.elements.Block.__init__"]], "compute_aabb() (compas_model.elements.block method)": [[24, "compas_model.elements.Block.compute_aabb"]], "compute_collision_mesh() (compas_model.elements.block method)": [[25, "compas_model.elements.Block.compute_collision_mesh"]], "compute_obb() (compas_model.elements.block method)": [[26, "compas_model.elements.Block.compute_obb"]], "copy() (compas_model.elements.block method)": [[27, "compas_model.elements.Block.copy"]], "from_json() (compas_model.elements.block class method)": [[28, "compas_model.elements.Block.from_json"]], "from_jsonstring() (compas_model.elements.block class method)": [[29, "compas_model.elements.Block.from_jsonstring"]], "sha256() (compas_model.elements.block method)": [[30, "compas_model.elements.Block.sha256"]], "to_json() (compas_model.elements.block method)": [[31, "compas_model.elements.Block.to_json"]], "to_jsonstring() (compas_model.elements.block method)": [[32, "compas_model.elements.Block.to_jsonstring"]], "transform() (compas_model.elements.block method)": [[33, "compas_model.elements.Block.transform"]], "transformed() (compas_model.elements.block method)": [[34, "compas_model.elements.Block.transformed"]], "validate_data() (compas_model.elements.block class method)": [[35, "compas_model.elements.Block.validate_data"]], "element (class in compas_model.elements)": [[36, "compas_model.elements.Element"]], "tostring() (compas_model.elements.element method)": [[37, "compas_model.elements.Element.ToString"]], "__init__() (compas_model.elements.element method)": [[38, "compas_model.elements.Element.__init__"]], "compute_aabb() (compas_model.elements.element method)": [[39, "compas_model.elements.Element.compute_aabb"]], "compute_collision_mesh() (compas_model.elements.element method)": [[40, "compas_model.elements.Element.compute_collision_mesh"]], "compute_obb() (compas_model.elements.element method)": [[41, "compas_model.elements.Element.compute_obb"]], "copy() (compas_model.elements.element method)": [[42, "compas_model.elements.Element.copy"]], "from_json() (compas_model.elements.element class method)": [[43, "compas_model.elements.Element.from_json"]], "from_jsonstring() (compas_model.elements.element class method)": [[44, "compas_model.elements.Element.from_jsonstring"]], "sha256() (compas_model.elements.element method)": [[45, "compas_model.elements.Element.sha256"]], "to_json() (compas_model.elements.element method)": [[46, "compas_model.elements.Element.to_json"]], "to_jsonstring() (compas_model.elements.element method)": [[47, "compas_model.elements.Element.to_jsonstring"]], "transform() (compas_model.elements.element method)": [[48, "compas_model.elements.Element.transform"]], "transformed() (compas_model.elements.element method)": [[49, "compas_model.elements.Element.transformed"]], "validate_data() (compas_model.elements.element class method)": [[50, "compas_model.elements.Element.validate_data"]], "interface (class in compas_model.elements)": [[51, "compas_model.elements.Interface"]], "tostring() (compas_model.elements.interface method)": [[52, "compas_model.elements.Interface.ToString"]], "__init__() (compas_model.elements.interface method)": [[53, "compas_model.elements.Interface.__init__"]], "compute_aabb() (compas_model.elements.interface method)": [[54, "compas_model.elements.Interface.compute_aabb"]], "compute_collision_mesh() (compas_model.elements.interface method)": [[55, "compas_model.elements.Interface.compute_collision_mesh"]], "compute_obb() (compas_model.elements.interface method)": [[56, "compas_model.elements.Interface.compute_obb"]], "copy() (compas_model.elements.interface method)": [[57, "compas_model.elements.Interface.copy"]], "from_json() (compas_model.elements.interface class method)": [[58, "compas_model.elements.Interface.from_json"]], "from_jsonstring() (compas_model.elements.interface class method)": [[59, "compas_model.elements.Interface.from_jsonstring"]], "sha256() (compas_model.elements.interface method)": [[60, "compas_model.elements.Interface.sha256"]], "to_json() (compas_model.elements.interface method)": [[61, "compas_model.elements.Interface.to_json"]], "to_jsonstring() (compas_model.elements.interface method)": [[62, "compas_model.elements.Interface.to_jsonstring"]], "transform() (compas_model.elements.interface method)": [[63, "compas_model.elements.Interface.transform"]], "transformed() (compas_model.elements.interface method)": [[64, "compas_model.elements.Interface.transformed"]], "validate_data() (compas_model.elements.interface class method)": [[65, "compas_model.elements.Interface.validate_data"]], "plate (class in compas_model.elements)": [[66, "compas_model.elements.Plate"]], "tostring() (compas_model.elements.plate method)": [[67, "compas_model.elements.Plate.ToString"]], "__init__() (compas_model.elements.plate method)": [[68, "compas_model.elements.Plate.__init__"]], "compute_aabb() (compas_model.elements.plate method)": [[69, "compas_model.elements.Plate.compute_aabb"]], "compute_collision_mesh() (compas_model.elements.plate method)": [[70, "compas_model.elements.Plate.compute_collision_mesh"]], "compute_loft() (compas_model.elements.plate method)": [[71, "compas_model.elements.Plate.compute_loft"]], "compute_obb() (compas_model.elements.plate method)": [[72, "compas_model.elements.Plate.compute_obb"]], "copy() (compas_model.elements.plate method)": [[73, "compas_model.elements.Plate.copy"]], "from_json() (compas_model.elements.plate class method)": [[74, "compas_model.elements.Plate.from_json"]], "from_jsonstring() (compas_model.elements.plate class method)": [[75, "compas_model.elements.Plate.from_jsonstring"]], "from_two_polygons() (compas_model.elements.plate class method)": [[76, "compas_model.elements.Plate.from_two_polygons"]], "get_average_frame() (compas_model.elements.plate static method)": [[77, "compas_model.elements.Plate.get_average_frame"]], "mesh_from_loft() (compas_model.elements.plate static method)": [[78, "compas_model.elements.Plate.mesh_from_loft"]], "sha256() (compas_model.elements.plate method)": [[79, "compas_model.elements.Plate.sha256"]], "to_json() (compas_model.elements.plate method)": [[80, "compas_model.elements.Plate.to_json"]], "to_jsonstring() (compas_model.elements.plate method)": [[81, "compas_model.elements.Plate.to_jsonstring"]], "transform() (compas_model.elements.plate method)": [[82, "compas_model.elements.Plate.transform"]], "transformed() (compas_model.elements.plate method)": [[83, "compas_model.elements.Plate.transformed"]], "validate_data() (compas_model.elements.plate class method)": [[84, "compas_model.elements.Plate.validate_data"]], "elementnode (class in compas_model.model)": [[85, "compas_model.model.ElementNode"]], "tostring() (compas_model.model.elementnode method)": [[86, "compas_model.model.ElementNode.ToString"]], "__init__() (compas_model.model.elementnode method)": [[87, "compas_model.model.ElementNode.__init__"]], "add() (compas_model.model.elementnode method)": [[88, "compas_model.model.ElementNode.add"]], "copy() (compas_model.model.elementnode method)": [[89, "compas_model.model.ElementNode.copy"]], "from_json() (compas_model.model.elementnode class method)": [[90, "compas_model.model.ElementNode.from_json"]], "from_jsonstring() (compas_model.model.elementnode class method)": [[91, "compas_model.model.ElementNode.from_jsonstring"]], "remove() (compas_model.model.elementnode method)": [[92, "compas_model.model.ElementNode.remove"]], "sha256() (compas_model.model.elementnode method)": [[93, "compas_model.model.ElementNode.sha256"]], "to_json() (compas_model.model.elementnode method)": [[94, "compas_model.model.ElementNode.to_json"]], "to_jsonstring() (compas_model.model.elementnode method)": [[95, "compas_model.model.ElementNode.to_jsonstring"]], "traverse() (compas_model.model.elementnode method)": [[96, "compas_model.model.ElementNode.traverse"]], "validate_data() (compas_model.model.elementnode class method)": [[97, "compas_model.model.ElementNode.validate_data"]], "elementtree (class in compas_model.model)": [[98, "compas_model.model.ElementTree"]], "tostring() (compas_model.model.elementtree method)": [[99, "compas_model.model.ElementTree.ToString"]], "__init__() (compas_model.model.elementtree method)": [[100, "compas_model.model.ElementTree.__init__"]], "add() (compas_model.model.elementtree method)": [[101, "compas_model.model.ElementTree.add"]], "add_element() (compas_model.model.elementtree method)": [[102, "compas_model.model.ElementTree.add_element"]], "add_group() (compas_model.model.elementtree method)": [[103, "compas_model.model.ElementTree.add_group"]], "copy() (compas_model.model.elementtree method)": [[104, "compas_model.model.ElementTree.copy"]], "from_json() (compas_model.model.elementtree class method)": [[105, "compas_model.model.ElementTree.from_json"]], "from_jsonstring() (compas_model.model.elementtree class method)": [[106, "compas_model.model.ElementTree.from_jsonstring"]], "get_node_by_name() (compas_model.model.elementtree method)": [[107, "compas_model.model.ElementTree.get_node_by_name"]], "get_nodes_by_name() (compas_model.model.elementtree method)": [[108, "compas_model.model.ElementTree.get_nodes_by_name"]], "print() (compas_model.model.elementtree method)": [[109, "compas_model.model.ElementTree.print"]], "print_hierarchy() (compas_model.model.elementtree method)": [[110, "compas_model.model.ElementTree.print_hierarchy"]], "remove() (compas_model.model.elementtree method)": [[111, "compas_model.model.ElementTree.remove"]], "sha256() (compas_model.model.elementtree method)": [[112, "compas_model.model.ElementTree.sha256"]], "to_json() (compas_model.model.elementtree method)": [[113, "compas_model.model.ElementTree.to_json"]], "to_jsonstring() (compas_model.model.elementtree method)": [[114, "compas_model.model.ElementTree.to_jsonstring"]], "transform() (compas_model.model.elementtree method)": [[115, "compas_model.model.ElementTree.transform"]], "transform_numpy() (compas_model.model.elementtree method)": [[116, "compas_model.model.ElementTree.transform_numpy"]], "transformed() (compas_model.model.elementtree method)": [[117, "compas_model.model.ElementTree.transformed"]], "transformed_numpy() (compas_model.model.elementtree method)": [[118, "compas_model.model.ElementTree.transformed_numpy"]], "traverse() (compas_model.model.elementtree method)": [[119, "compas_model.model.ElementTree.traverse"]], "validate_data() (compas_model.model.elementtree class method)": [[120, "compas_model.model.ElementTree.validate_data"]], "groupnode (class in compas_model.model)": [[121, "compas_model.model.GroupNode"]], "tostring() (compas_model.model.groupnode method)": [[122, "compas_model.model.GroupNode.ToString"]], "__init__() (compas_model.model.groupnode method)": [[123, "compas_model.model.GroupNode.__init__"]], "add() (compas_model.model.groupnode method)": [[124, "compas_model.model.GroupNode.add"]], "add_element() (compas_model.model.groupnode method)": [[125, "compas_model.model.GroupNode.add_element"]], "add_group() (compas_model.model.groupnode method)": [[126, "compas_model.model.GroupNode.add_group"]], "copy() (compas_model.model.groupnode method)": [[127, "compas_model.model.GroupNode.copy"]], "from_json() (compas_model.model.groupnode class method)": [[128, "compas_model.model.GroupNode.from_json"]], "from_jsonstring() (compas_model.model.groupnode class method)": [[129, "compas_model.model.GroupNode.from_jsonstring"]], "remove() (compas_model.model.groupnode method)": [[130, "compas_model.model.GroupNode.remove"]], "sha256() (compas_model.model.groupnode method)": [[131, "compas_model.model.GroupNode.sha256"]], "to_json() (compas_model.model.groupnode method)": [[132, "compas_model.model.GroupNode.to_json"]], "to_jsonstring() (compas_model.model.groupnode method)": [[133, "compas_model.model.GroupNode.to_jsonstring"]], "traverse() (compas_model.model.groupnode method)": [[134, "compas_model.model.GroupNode.traverse"]], "validate_data() (compas_model.model.groupnode class method)": [[135, "compas_model.model.GroupNode.validate_data"]], "model (class in compas_model.model)": [[136, "compas_model.model.Model"]], "tostring() (compas_model.model.model method)": [[137, "compas_model.model.Model.ToString"]], "__init__() (compas_model.model.model method)": [[138, "compas_model.model.Model.__init__"]], "add_element() (compas_model.model.model method)": [[139, "compas_model.model.Model.add_element"]], "add_elements() (compas_model.model.model method)": [[140, "compas_model.model.Model.add_elements"]], "add_group() (compas_model.model.model method)": [[141, "compas_model.model.Model.add_group"]], "add_interaction() (compas_model.model.model method)": [[142, "compas_model.model.Model.add_interaction"]], "copy() (compas_model.model.model method)": [[143, "compas_model.model.Model.copy"]], "from_json() (compas_model.model.model class method)": [[144, "compas_model.model.Model.from_json"]], "from_jsonstring() (compas_model.model.model class method)": [[145, "compas_model.model.Model.from_jsonstring"]], "get_by_type() (compas_model.model.model method)": [[146, "compas_model.model.Model.get_by_type"]], "get_connected_elements() (compas_model.model.model method)": [[147, "compas_model.model.Model.get_connected_elements"]], "print() (compas_model.model.model method)": [[148, "compas_model.model.Model.print"]], "print_elements() (compas_model.model.model method)": [[149, "compas_model.model.Model.print_elements"]], "print_interactions() (compas_model.model.model method)": [[150, "compas_model.model.Model.print_interactions"]], "sha256() (compas_model.model.model method)": [[151, "compas_model.model.Model.sha256"]], "to_json() (compas_model.model.model method)": [[152, "compas_model.model.Model.to_json"]], "to_jsonstring() (compas_model.model.model method)": [[153, "compas_model.model.Model.to_jsonstring"]], "to_nodes_and_neighbors() (compas_model.model.model method)": [[154, "compas_model.model.Model.to_nodes_and_neighbors"]], "validate_data() (compas_model.model.model class method)": [[155, "compas_model.model.Model.validate_data"]]}})