Search.setIndex({"docnames": ["acknowledgements", "api", "api/compas_model.elements", "api/compas_model.model", "api/generated/compas_model.elements.Beam", "api/generated/compas_model.elements.Beam.ToString", "api/generated/compas_model.elements.Beam.__init__", "api/generated/compas_model.elements.Beam.compute_aabb", "api/generated/compas_model.elements.Beam.compute_collision_mesh", "api/generated/compas_model.elements.Beam.compute_face_polygons", "api/generated/compas_model.elements.Beam.compute_obb", "api/generated/compas_model.elements.Beam.copy", "api/generated/compas_model.elements.Beam.from_json", "api/generated/compas_model.elements.Beam.from_jsonstring", "api/generated/compas_model.elements.Beam.from_line", "api/generated/compas_model.elements.Beam.sha256", "api/generated/compas_model.elements.Beam.to_json", "api/generated/compas_model.elements.Beam.to_jsonstring", "api/generated/compas_model.elements.Beam.transform", "api/generated/compas_model.elements.Beam.transformed", "api/generated/compas_model.elements.Beam.validate_data", "api/generated/compas_model.elements.Block", "api/generated/compas_model.elements.Block.ToString", "api/generated/compas_model.elements.Block.__init__", "api/generated/compas_model.elements.Block.compute_aabb", "api/generated/compas_model.elements.Block.compute_collision_mesh", "api/generated/compas_model.elements.Block.compute_obb", "api/generated/compas_model.elements.Block.copy", "api/generated/compas_model.elements.Block.from_json", "api/generated/compas_model.elements.Block.from_jsonstring", "api/generated/compas_model.elements.Block.sha256", "api/generated/compas_model.elements.Block.to_json", "api/generated/compas_model.elements.Block.to_jsonstring", "api/generated/compas_model.elements.Block.transform", "api/generated/compas_model.elements.Block.transformed", "api/generated/compas_model.elements.Block.validate_data", "api/generated/compas_model.elements.Element", "api/generated/compas_model.elements.Element.ToString", "api/generated/compas_model.elements.Element.__init__", "api/generated/compas_model.elements.Element.compute_aabb", "api/generated/compas_model.elements.Element.compute_collision_mesh", "api/generated/compas_model.elements.Element.compute_obb", "api/generated/compas_model.elements.Element.copy", "api/generated/compas_model.elements.Element.from_json", "api/generated/compas_model.elements.Element.from_jsonstring", "api/generated/compas_model.elements.Element.sha256", "api/generated/compas_model.elements.Element.to_json", "api/generated/compas_model.elements.Element.to_jsonstring", "api/generated/compas_model.elements.Element.transform", "api/generated/compas_model.elements.Element.transformed", "api/generated/compas_model.elements.Element.validate_data", "api/generated/compas_model.elements.Interface", "api/generated/compas_model.elements.Interface.ToString", "api/generated/compas_model.elements.Interface.__init__", "api/generated/compas_model.elements.Interface.compute_aabb", "api/generated/compas_model.elements.Interface.compute_collision_mesh", "api/generated/compas_model.elements.Interface.compute_obb", "api/generated/compas_model.elements.Interface.copy", "api/generated/compas_model.elements.Interface.from_json", "api/generated/compas_model.elements.Interface.from_jsonstring", "api/generated/compas_model.elements.Interface.sha256", "api/generated/compas_model.elements.Interface.to_json", "api/generated/compas_model.elements.Interface.to_jsonstring", "api/generated/compas_model.elements.Interface.transform", "api/generated/compas_model.elements.Interface.transformed", "api/generated/compas_model.elements.Interface.validate_data", "api/generated/compas_model.elements.Plate", "api/generated/compas_model.elements.Plate.ToString", "api/generated/compas_model.elements.Plate.__init__", "api/generated/compas_model.elements.Plate.compute_aabb", "api/generated/compas_model.elements.Plate.compute_collision_mesh", "api/generated/compas_model.elements.Plate.compute_loft", "api/generated/compas_model.elements.Plate.compute_obb", "api/generated/compas_model.elements.Plate.copy", "api/generated/compas_model.elements.Plate.from_json", "api/generated/compas_model.elements.Plate.from_jsonstring", "api/generated/compas_model.elements.Plate.from_two_polygons", "api/generated/compas_model.elements.Plate.get_average_frame", "api/generated/compas_model.elements.Plate.mesh_from_loft", "api/generated/compas_model.elements.Plate.sha256", "api/generated/compas_model.elements.Plate.to_json", "api/generated/compas_model.elements.Plate.to_jsonstring", "api/generated/compas_model.elements.Plate.transform", "api/generated/compas_model.elements.Plate.transformed", "api/generated/compas_model.elements.Plate.validate_data", "api/generated/compas_model.model.ElementNode", "api/generated/compas_model.model.ElementNode.ToString", "api/generated/compas_model.model.ElementNode.__init__", "api/generated/compas_model.model.ElementNode.add", "api/generated/compas_model.model.ElementNode.copy", "api/generated/compas_model.model.ElementNode.from_json", "api/generated/compas_model.model.ElementNode.from_jsonstring", "api/generated/compas_model.model.ElementNode.remove", "api/generated/compas_model.model.ElementNode.sha256", "api/generated/compas_model.model.ElementNode.to_json", "api/generated/compas_model.model.ElementNode.to_jsonstring", "api/generated/compas_model.model.ElementNode.traverse", "api/generated/compas_model.model.ElementNode.validate_data", "api/generated/compas_model.model.ElementTree", "api/generated/compas_model.model.ElementTree.ToString", "api/generated/compas_model.model.ElementTree.__init__", "api/generated/compas_model.model.ElementTree.add", "api/generated/compas_model.model.ElementTree.add_element", "api/generated/compas_model.model.ElementTree.add_group", "api/generated/compas_model.model.ElementTree.copy", "api/generated/compas_model.model.ElementTree.from_json", "api/generated/compas_model.model.ElementTree.from_jsonstring", "api/generated/compas_model.model.ElementTree.get_node_by_name", "api/generated/compas_model.model.ElementTree.get_nodes_by_name", "api/generated/compas_model.model.ElementTree.print", "api/generated/compas_model.model.ElementTree.print_hierarchy", "api/generated/compas_model.model.ElementTree.remove", "api/generated/compas_model.model.ElementTree.rotate", "api/generated/compas_model.model.ElementTree.rotated", "api/generated/compas_model.model.ElementTree.scale", "api/generated/compas_model.model.ElementTree.scaled", "api/generated/compas_model.model.ElementTree.sha256", "api/generated/compas_model.model.ElementTree.to_json", "api/generated/compas_model.model.ElementTree.to_jsonstring", "api/generated/compas_model.model.ElementTree.transform", "api/generated/compas_model.model.ElementTree.transform_numpy", "api/generated/compas_model.model.ElementTree.transformed", "api/generated/compas_model.model.ElementTree.transformed_numpy", "api/generated/compas_model.model.ElementTree.translate", "api/generated/compas_model.model.ElementTree.translated", "api/generated/compas_model.model.ElementTree.traverse", "api/generated/compas_model.model.ElementTree.validate_data", "api/generated/compas_model.model.GroupNode", "api/generated/compas_model.model.GroupNode.ToString", "api/generated/compas_model.model.GroupNode.__init__", "api/generated/compas_model.model.GroupNode.add", "api/generated/compas_model.model.GroupNode.add_element", "api/generated/compas_model.model.GroupNode.add_group", "api/generated/compas_model.model.GroupNode.copy", "api/generated/compas_model.model.GroupNode.from_json", "api/generated/compas_model.model.GroupNode.from_jsonstring", "api/generated/compas_model.model.GroupNode.remove", "api/generated/compas_model.model.GroupNode.sha256", "api/generated/compas_model.model.GroupNode.to_json", "api/generated/compas_model.model.GroupNode.to_jsonstring", "api/generated/compas_model.model.GroupNode.traverse", "api/generated/compas_model.model.GroupNode.validate_data", "api/generated/compas_model.model.Model", "api/generated/compas_model.model.Model.ToString", "api/generated/compas_model.model.Model.__init__", "api/generated/compas_model.model.Model.add_element", "api/generated/compas_model.model.Model.add_elements", "api/generated/compas_model.model.Model.add_group", "api/generated/compas_model.model.Model.add_interaction", "api/generated/compas_model.model.Model.copy", "api/generated/compas_model.model.Model.from_json", "api/generated/compas_model.model.Model.from_jsonstring", "api/generated/compas_model.model.Model.get_by_name", "api/generated/compas_model.model.Model.get_by_names", "api/generated/compas_model.model.Model.get_by_type", "api/generated/compas_model.model.Model.get_connected_elements", "api/generated/compas_model.model.Model.print", "api/generated/compas_model.model.Model.print_elements", "api/generated/compas_model.model.Model.print_interactions", "api/generated/compas_model.model.Model.sha256", "api/generated/compas_model.model.Model.to_json", "api/generated/compas_model.model.Model.to_jsonstring", "api/generated/compas_model.model.Model.to_nodes_and_neighbors", "api/generated/compas_model.model.Model.validate_data", "devguide", "examples", "examples/elements_beam", "examples/elements_block", "examples/elements_interface", "examples/elements_plate", "examples/model_beams", "examples/model_form_finding", "examples/model_masonry", "examples/model_panels", "examples/model_robots", "index", "installation", "license", "tutorial"], "filenames": ["acknowledgements.rst", "api.rst", "api/compas_model.elements.rst", "api/compas_model.model.rst", "api/generated/compas_model.elements.Beam.rst", "api/generated/compas_model.elements.Beam.ToString.rst", "api/generated/compas_model.elements.Beam.__init__.rst", "api/generated/compas_model.elements.Beam.compute_aabb.rst", "api/generated/compas_model.elements.Beam.compute_collision_mesh.rst", "api/generated/compas_model.elements.Beam.compute_face_polygons.rst", "api/generated/compas_model.elements.Beam.compute_obb.rst", "api/generated/compas_model.elements.Beam.copy.rst", "api/generated/compas_model.elements.Beam.from_json.rst", "api/generated/compas_model.elements.Beam.from_jsonstring.rst", "api/generated/compas_model.elements.Beam.from_line.rst", "api/generated/compas_model.elements.Beam.sha256.rst", "api/generated/compas_model.elements.Beam.to_json.rst", "api/generated/compas_model.elements.Beam.to_jsonstring.rst", "api/generated/compas_model.elements.Beam.transform.rst", "api/generated/compas_model.elements.Beam.transformed.rst", "api/generated/compas_model.elements.Beam.validate_data.rst", "api/generated/compas_model.elements.Block.rst", "api/generated/compas_model.elements.Block.ToString.rst", "api/generated/compas_model.elements.Block.__init__.rst", "api/generated/compas_model.elements.Block.compute_aabb.rst", "api/generated/compas_model.elements.Block.compute_collision_mesh.rst", "api/generated/compas_model.elements.Block.compute_obb.rst", "api/generated/compas_model.elements.Block.copy.rst", "api/generated/compas_model.elements.Block.from_json.rst", "api/generated/compas_model.elements.Block.from_jsonstring.rst", "api/generated/compas_model.elements.Block.sha256.rst", "api/generated/compas_model.elements.Block.to_json.rst", "api/generated/compas_model.elements.Block.to_jsonstring.rst", "api/generated/compas_model.elements.Block.transform.rst", "api/generated/compas_model.elements.Block.transformed.rst", "api/generated/compas_model.elements.Block.validate_data.rst", "api/generated/compas_model.elements.Element.rst", "api/generated/compas_model.elements.Element.ToString.rst", "api/generated/compas_model.elements.Element.__init__.rst", "api/generated/compas_model.elements.Element.compute_aabb.rst", "api/generated/compas_model.elements.Element.compute_collision_mesh.rst", "api/generated/compas_model.elements.Element.compute_obb.rst", "api/generated/compas_model.elements.Element.copy.rst", "api/generated/compas_model.elements.Element.from_json.rst", "api/generated/compas_model.elements.Element.from_jsonstring.rst", "api/generated/compas_model.elements.Element.sha256.rst", "api/generated/compas_model.elements.Element.to_json.rst", "api/generated/compas_model.elements.Element.to_jsonstring.rst", "api/generated/compas_model.elements.Element.transform.rst", "api/generated/compas_model.elements.Element.transformed.rst", "api/generated/compas_model.elements.Element.validate_data.rst", "api/generated/compas_model.elements.Interface.rst", "api/generated/compas_model.elements.Interface.ToString.rst", "api/generated/compas_model.elements.Interface.__init__.rst", "api/generated/compas_model.elements.Interface.compute_aabb.rst", "api/generated/compas_model.elements.Interface.compute_collision_mesh.rst", "api/generated/compas_model.elements.Interface.compute_obb.rst", "api/generated/compas_model.elements.Interface.copy.rst", "api/generated/compas_model.elements.Interface.from_json.rst", "api/generated/compas_model.elements.Interface.from_jsonstring.rst", "api/generated/compas_model.elements.Interface.sha256.rst", "api/generated/compas_model.elements.Interface.to_json.rst", "api/generated/compas_model.elements.Interface.to_jsonstring.rst", "api/generated/compas_model.elements.Interface.transform.rst", "api/generated/compas_model.elements.Interface.transformed.rst", "api/generated/compas_model.elements.Interface.validate_data.rst", "api/generated/compas_model.elements.Plate.rst", "api/generated/compas_model.elements.Plate.ToString.rst", "api/generated/compas_model.elements.Plate.__init__.rst", "api/generated/compas_model.elements.Plate.compute_aabb.rst", "api/generated/compas_model.elements.Plate.compute_collision_mesh.rst", "api/generated/compas_model.elements.Plate.compute_loft.rst", "api/generated/compas_model.elements.Plate.compute_obb.rst", "api/generated/compas_model.elements.Plate.copy.rst", "api/generated/compas_model.elements.Plate.from_json.rst", "api/generated/compas_model.elements.Plate.from_jsonstring.rst", "api/generated/compas_model.elements.Plate.from_two_polygons.rst", "api/generated/compas_model.elements.Plate.get_average_frame.rst", "api/generated/compas_model.elements.Plate.mesh_from_loft.rst", "api/generated/compas_model.elements.Plate.sha256.rst", "api/generated/compas_model.elements.Plate.to_json.rst", "api/generated/compas_model.elements.Plate.to_jsonstring.rst", "api/generated/compas_model.elements.Plate.transform.rst", "api/generated/compas_model.elements.Plate.transformed.rst", "api/generated/compas_model.elements.Plate.validate_data.rst", "api/generated/compas_model.model.ElementNode.rst", "api/generated/compas_model.model.ElementNode.ToString.rst", "api/generated/compas_model.model.ElementNode.__init__.rst", "api/generated/compas_model.model.ElementNode.add.rst", "api/generated/compas_model.model.ElementNode.copy.rst", "api/generated/compas_model.model.ElementNode.from_json.rst", "api/generated/compas_model.model.ElementNode.from_jsonstring.rst", "api/generated/compas_model.model.ElementNode.remove.rst", "api/generated/compas_model.model.ElementNode.sha256.rst", "api/generated/compas_model.model.ElementNode.to_json.rst", "api/generated/compas_model.model.ElementNode.to_jsonstring.rst", "api/generated/compas_model.model.ElementNode.traverse.rst", "api/generated/compas_model.model.ElementNode.validate_data.rst", "api/generated/compas_model.model.ElementTree.rst", "api/generated/compas_model.model.ElementTree.ToString.rst", "api/generated/compas_model.model.ElementTree.__init__.rst", "api/generated/compas_model.model.ElementTree.add.rst", "api/generated/compas_model.model.ElementTree.add_element.rst", "api/generated/compas_model.model.ElementTree.add_group.rst", "api/generated/compas_model.model.ElementTree.copy.rst", "api/generated/compas_model.model.ElementTree.from_json.rst", "api/generated/compas_model.model.ElementTree.from_jsonstring.rst", "api/generated/compas_model.model.ElementTree.get_node_by_name.rst", "api/generated/compas_model.model.ElementTree.get_nodes_by_name.rst", "api/generated/compas_model.model.ElementTree.print.rst", "api/generated/compas_model.model.ElementTree.print_hierarchy.rst", "api/generated/compas_model.model.ElementTree.remove.rst", "api/generated/compas_model.model.ElementTree.rotate.rst", "api/generated/compas_model.model.ElementTree.rotated.rst", "api/generated/compas_model.model.ElementTree.scale.rst", "api/generated/compas_model.model.ElementTree.scaled.rst", "api/generated/compas_model.model.ElementTree.sha256.rst", "api/generated/compas_model.model.ElementTree.to_json.rst", "api/generated/compas_model.model.ElementTree.to_jsonstring.rst", "api/generated/compas_model.model.ElementTree.transform.rst", "api/generated/compas_model.model.ElementTree.transform_numpy.rst", "api/generated/compas_model.model.ElementTree.transformed.rst", "api/generated/compas_model.model.ElementTree.transformed_numpy.rst", "api/generated/compas_model.model.ElementTree.translate.rst", "api/generated/compas_model.model.ElementTree.translated.rst", "api/generated/compas_model.model.ElementTree.traverse.rst", "api/generated/compas_model.model.ElementTree.validate_data.rst", "api/generated/compas_model.model.GroupNode.rst", "api/generated/compas_model.model.GroupNode.ToString.rst", "api/generated/compas_model.model.GroupNode.__init__.rst", "api/generated/compas_model.model.GroupNode.add.rst", "api/generated/compas_model.model.GroupNode.add_element.rst", "api/generated/compas_model.model.GroupNode.add_group.rst", "api/generated/compas_model.model.GroupNode.copy.rst", "api/generated/compas_model.model.GroupNode.from_json.rst", "api/generated/compas_model.model.GroupNode.from_jsonstring.rst", "api/generated/compas_model.model.GroupNode.remove.rst", "api/generated/compas_model.model.GroupNode.sha256.rst", "api/generated/compas_model.model.GroupNode.to_json.rst", "api/generated/compas_model.model.GroupNode.to_jsonstring.rst", "api/generated/compas_model.model.GroupNode.traverse.rst", "api/generated/compas_model.model.GroupNode.validate_data.rst", "api/generated/compas_model.model.Model.rst", "api/generated/compas_model.model.Model.ToString.rst", "api/generated/compas_model.model.Model.__init__.rst", "api/generated/compas_model.model.Model.add_element.rst", "api/generated/compas_model.model.Model.add_elements.rst", "api/generated/compas_model.model.Model.add_group.rst", "api/generated/compas_model.model.Model.add_interaction.rst", "api/generated/compas_model.model.Model.copy.rst", "api/generated/compas_model.model.Model.from_json.rst", "api/generated/compas_model.model.Model.from_jsonstring.rst", "api/generated/compas_model.model.Model.get_by_name.rst", "api/generated/compas_model.model.Model.get_by_names.rst", "api/generated/compas_model.model.Model.get_by_type.rst", "api/generated/compas_model.model.Model.get_connected_elements.rst", "api/generated/compas_model.model.Model.print.rst", "api/generated/compas_model.model.Model.print_elements.rst", "api/generated/compas_model.model.Model.print_interactions.rst", "api/generated/compas_model.model.Model.sha256.rst", "api/generated/compas_model.model.Model.to_json.rst", "api/generated/compas_model.model.Model.to_jsonstring.rst", "api/generated/compas_model.model.Model.to_nodes_and_neighbors.rst", "api/generated/compas_model.model.Model.validate_data.rst", "devguide.rst", "examples.rst", "examples/elements_beam.rst", "examples/elements_block.rst", "examples/elements_interface.rst", "examples/elements_plate.rst", "examples/model_beams.rst", "examples/model_form_finding.rst", "examples/model_masonry.rst", "examples/model_panels.rst", "examples/model_robots.rst", "index.rst", "installation.rst", "license.rst", "tutorial.rst"], "titles": ["Acknowledgements", "API Reference", "compas_model.elements", "compas_model.model", "Beam", "Beam.ToString", "Beam.__init__", "Beam.compute_aabb", "Beam.compute_collision_mesh", "Beam.compute_face_polygons", "Beam.compute_obb", "Beam.copy", "Beam.from_json", "Beam.from_jsonstring", "Beam.from_line", "Beam.sha256", "Beam.to_json", "Beam.to_jsonstring", "Beam.transform", "Beam.transformed", "Beam.validate_data", "Block", "Block.ToString", "Block.__init__", "Block.compute_aabb", "Block.compute_collision_mesh", "Block.compute_obb", "Block.copy", "Block.from_json", "Block.from_jsonstring", "Block.sha256", "Block.to_json", "Block.to_jsonstring", "Block.transform", "Block.transformed", "Block.validate_data", "Element", "Element.ToString", "Element.__init__", "Element.compute_aabb", "Element.compute_collision_mesh", "Element.compute_obb", "Element.copy", "Element.from_json", "Element.from_jsonstring", "Element.sha256", "Element.to_json", "Element.to_jsonstring", "Element.transform", "Element.transformed", "Element.validate_data", "Interface", "Interface.ToString", "Interface.__init__", "Interface.compute_aabb", "Interface.compute_collision_mesh", "Interface.compute_obb", "Interface.copy", "Interface.from_json", "Interface.from_jsonstring", "Interface.sha256", "Interface.to_json", "Interface.to_jsonstring", "Interface.transform", "Interface.transformed", "Interface.validate_data", "Plate", "Plate.ToString", "Plate.__init__", "Plate.compute_aabb", "Plate.compute_collision_mesh", "Plate.compute_loft", "Plate.compute_obb", "Plate.copy", "Plate.from_json", "Plate.from_jsonstring", "Plate.from_two_polygons", "Plate.get_average_frame", "Plate.mesh_from_loft", "Plate.sha256", "Plate.to_json", "Plate.to_jsonstring", "Plate.transform", "Plate.transformed", "Plate.validate_data", "ElementNode", "ElementNode.ToString", "ElementNode.__init__", "ElementNode.add", "ElementNode.copy", "ElementNode.from_json", "ElementNode.from_jsonstring", "ElementNode.remove", "ElementNode.sha256", "ElementNode.to_json", "ElementNode.to_jsonstring", "ElementNode.traverse", "ElementNode.validate_data", "ElementTree", "ElementTree.ToString", "ElementTree.__init__", "ElementTree.add", "ElementTree.add_element", "ElementTree.add_group", "ElementTree.copy", "ElementTree.from_json", "ElementTree.from_jsonstring", "ElementTree.get_node_by_name", "ElementTree.get_nodes_by_name", "ElementTree.print", "ElementTree.print_hierarchy", "ElementTree.remove", "ElementTree.rotate", "ElementTree.rotated", "ElementTree.scale", "ElementTree.scaled", "ElementTree.sha256", "ElementTree.to_json", "ElementTree.to_jsonstring", "ElementTree.transform", "ElementTree.transform_numpy", "ElementTree.transformed", "ElementTree.transformed_numpy", "ElementTree.translate", "ElementTree.translated", "ElementTree.traverse", "ElementTree.validate_data", "GroupNode", "GroupNode.ToString", "GroupNode.__init__", "GroupNode.add", "GroupNode.add_element", "GroupNode.add_group", "GroupNode.copy", "GroupNode.from_json", "GroupNode.from_jsonstring", "GroupNode.remove", "GroupNode.sha256", "GroupNode.to_json", "GroupNode.to_jsonstring", "GroupNode.traverse", "GroupNode.validate_data", "Model", "Model.ToString", "Model.__init__", "Model.add_element", "Model.add_elements", "Model.add_group", "Model.add_interaction", "Model.copy", "Model.from_json", "Model.from_jsonstring", "Model.get_by_name", "Model.get_by_names", "Model.get_by_type", "Model.get_connected_elements", "Model.print", "Model.print_elements", "Model.print_interactions", "Model.sha256", "Model.to_json", "Model.to_jsonstring", "Model.to_nodes_and_neighbors", "Model.validate_data", "Development Guide", "Examples", "Elements: Beam", "Elements: Block", "Elements: Interface", "Elements: Plate", "Model Beams", "Model Form Finding", "Model Masonry", "Model Plates", "Model Robots", "COMPAS Model", "Installation", "License", "Tutorial"], "terms": {"author": [0, 177], "thi": [0, 4, 5, 11, 12, 13, 20, 21, 22, 27, 28, 29, 35, 36, 37, 42, 43, 44, 50, 51, 52, 57, 58, 59, 65, 66, 67, 73, 74, 75, 84, 85, 86, 88, 89, 90, 91, 92, 96, 97, 99, 101, 102, 103, 104, 105, 106, 113, 115, 121, 122, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 140, 141, 143, 150, 151, 156, 163, 166, 177, 178], "packag": [0, 175], "petra": [0, 177], "vestarta": [0, 177], "tom": 0, "van": 0, "mele": 0, "block": [0, 36, 66, 165, 168, 175, 178], "research": [0, 164, 176], "group": [0, 98, 103, 127, 132, 142, 147, 178], "eth": 0, "zurich": 0, "switzerland": 0, "compas_model": [1, 4, 19, 21, 34, 36, 49, 51, 64, 66, 76, 83, 85, 98, 102, 103, 127, 131, 132, 142, 145, 146, 147, 148, 149, 152, 156, 157, 164, 166, 167, 168, 169, 173, 175, 176, 177, 178], "model": [1, 4, 21, 36, 51, 66, 85, 98, 100, 102, 103, 127, 131, 132, 165, 166, 167, 168, 169], "element": [1, 4, 7, 8, 9, 10, 18, 19, 21, 24, 25, 26, 33, 34, 51, 54, 55, 56, 63, 64, 66, 69, 70, 71, 72, 76, 82, 83, 85, 87, 98, 102, 131, 142, 144, 145, 146, 148, 149, 152, 153, 154, 155, 156, 157, 165, 173, 175], "class": [4, 5, 18, 19, 21, 22, 33, 34, 36, 37, 48, 49, 51, 52, 63, 64, 66, 67, 82, 83, 85, 86, 98, 99, 102, 103, 127, 128, 131, 132, 142, 143, 145, 178], "frame": [4, 6, 18, 21, 33, 36, 38, 48, 51, 63, 66, 78, 82, 166, 167, 168, 169, 178], "length": [4, 6, 14], "width": [4, 6, 14], "height": [4, 6, 14], "kwarg": [4, 6, 14, 21, 23, 36, 38, 51, 53, 66, 68, 76], "base": [4, 21, 36, 51, 66, 85, 98, 112, 113, 127, 131, 142, 169, 175], "A": [4, 14, 19, 21, 34, 36, 49, 51, 64, 66, 83, 85, 98, 102, 103, 127, 131, 132, 142, 145, 146, 147, 149, 153, 154, 155, 166, 167, 169, 177], "represent": [4, 5, 16, 17, 22, 31, 32, 37, 46, 47, 51, 52, 61, 62, 67, 80, 81, 86, 94, 95, 99, 117, 118, 128, 138, 139, 143, 160, 161, 166, 167, 178], "line": [4, 14, 36, 51, 166], "box": [4, 7, 10, 21, 24, 26, 36, 39, 41, 51, 54, 56, 66, 69, 72, 168, 178], "paramet": [4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 159, 160, 161, 163], "compa": [4, 7, 8, 10, 11, 12, 13, 14, 15, 18, 19, 21, 24, 25, 26, 27, 28, 29, 30, 33, 34, 36, 39, 40, 41, 42, 43, 44, 45, 48, 49, 51, 54, 55, 56, 57, 58, 59, 60, 63, 64, 66, 69, 70, 72, 73, 74, 75, 76, 78, 79, 82, 83, 88, 89, 90, 91, 92, 93, 96, 101, 104, 105, 106, 107, 108, 111, 112, 113, 116, 123, 124, 125, 130, 133, 134, 135, 136, 137, 140, 142, 148, 149, 150, 151, 156, 158, 159, 162, 166, 167, 168, 169, 178], "geometri": [4, 7, 8, 10, 14, 18, 19, 21, 24, 25, 26, 33, 34, 36, 38, 39, 40, 41, 48, 49, 51, 54, 55, 56, 63, 64, 66, 69, 70, 72, 76, 78, 82, 83, 103, 112, 113, 115, 123, 124, 127, 129, 132, 147, 148, 166, 167, 168, 169, 173, 178], "The": [4, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 94, 95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 148, 150, 151, 160, 161, 163, 169, 175, 177, 178], "float": [4, 7, 10, 14, 24, 26, 39, 41, 54, 56, 66, 69, 72, 112, 113, 114, 115], "cross": [4, 14], "section": [4, 14, 178], "dict": [4, 14, 21, 36, 51, 66, 76, 98, 142, 149], "option": [4, 11, 14, 15, 16, 17, 21, 27, 30, 31, 32, 36, 42, 45, 46, 47, 51, 57, 60, 61, 62, 66, 73, 76, 79, 80, 81, 85, 89, 93, 94, 95, 96, 98, 101, 102, 103, 104, 112, 113, 114, 115, 116, 117, 118, 125, 127, 131, 132, 133, 137, 138, 139, 140, 142, 145, 146, 147, 148, 154, 155, 159, 160, 161], "addit": [4, 14, 21, 36, 51, 66, 76, 178], "keyword": [4, 14, 21, 36, 51, 66, 76], "argument": [4, 14, 21, 36, 51, 66, 76], "attribut": [4, 21, 36, 51, 66, 85, 98, 127, 142, 178], "guid": [4, 21, 36, 51, 66, 127, 166, 167, 178], "str": [4, 12, 13, 15, 16, 17, 21, 28, 29, 30, 31, 32, 36, 43, 44, 45, 46, 47, 51, 58, 59, 60, 61, 62, 66, 74, 75, 79, 80, 81, 85, 90, 91, 93, 94, 95, 98, 102, 103, 105, 106, 107, 108, 116, 117, 118, 127, 131, 132, 134, 135, 137, 138, 139, 142, 145, 147, 148, 150, 151, 152, 154, 155, 159, 160, 161, 173], "read": [4, 21, 36, 51, 66, 85, 127], "onli": [4, 21, 36, 51, 66, 85, 96, 98, 125, 127, 140], "global": [4, 21, 36, 51, 66], "uniqu": [4, 21, 36, 51, 66], "identifi": [4, 21, 36, 51, 66, 102, 103, 132, 142, 145, 146, 147, 148], "object": [4, 5, 11, 12, 13, 16, 17, 20, 21, 22, 27, 28, 29, 31, 32, 35, 36, 37, 42, 43, 44, 46, 47, 50, 51, 52, 57, 58, 59, 61, 62, 65, 66, 67, 73, 74, 75, 80, 81, 84, 85, 86, 88, 89, 90, 91, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 117, 118, 126, 127, 128, 130, 131, 132, 133, 134, 135, 138, 139, 141, 143, 149, 150, 151, 160, 161, 163], "i": [4, 12, 13, 20, 21, 28, 29, 35, 36, 43, 44, 50, 51, 58, 59, 65, 66, 74, 75, 76, 84, 85, 88, 90, 91, 96, 97, 101, 105, 106, 125, 126, 127, 130, 131, 134, 135, 140, 141, 145, 150, 151, 163, 166, 167, 168, 169, 175, 177, 178], "gener": [4, 21, 36, 51, 66, 175], "uuid": [4, 21, 36, 51, 66, 85, 98, 127, 142, 146, 148, 149], "uuid4": [4, 21, 36, 51, 66, 85, 98, 127, 142, 146, 148, 149], "name": [4, 21, 36, 38, 51, 66, 85, 87, 98, 100, 102, 103, 107, 108, 127, 129, 131, 132, 142, 144, 145, 147, 148, 152, 153, 154, 155, 175, 178], "necessarili": [4, 21, 36, 51, 66], "can": [4, 20, 21, 35, 36, 50, 51, 65, 66, 84, 97, 126, 141, 155, 163, 173, 178], "set": [4, 21, 36, 51, 66, 164, 178], "user": [4, 21, 36, 51, 66, 85, 127], "default": [4, 5, 11, 14, 16, 17, 21, 22, 27, 31, 32, 36, 37, 42, 46, 47, 51, 52, 57, 61, 62, 66, 67, 73, 80, 81, 85, 86, 89, 94, 95, 99, 101, 104, 112, 113, 114, 115, 117, 118, 127, 128, 133, 138, 139, 143, 154, 155, 160, 161], "valu": [4, 21, 36, 51, 66], "": [4, 14, 18, 20, 21, 33, 35, 36, 48, 50, 51, 63, 65, 66, 82, 84, 97, 126, 141, 156, 163, 178], "self": [4, 5, 21, 22, 36, 37, 51, 52, 66, 67, 86, 99, 128, 143], "__class__": [4, 21, 36, 51, 66], "__name__": [4, 21, 36, 51, 66], "local": [4, 21, 36, 51, 66, 164], "coordin": [4, 21, 36, 51, 66], "worldxi": [4, 21, 36, 51, 66, 169, 178], "repres": [4, 21, 36, 51, 66, 142, 145, 147, 166, 168, 169, 178], "solid": 4, "shape": [4, 21, 36, 51, 66, 103, 127, 132, 147, 148], "geometry_simplifi": [4, 21, 23, 36, 38, 51, 66], "central": [4, 21, 36, 66, 166, 167], "axi": [4, 7, 14, 21, 24, 36, 39, 51, 54, 66, 72, 112, 113, 166, 178], "aabb": [4, 7, 21, 24, 36, 39, 51, 54, 66, 72], "align": [4, 7, 21, 24, 36, 39, 51, 54, 66, 72], "bound": [4, 7, 10, 21, 24, 26, 36, 39, 41, 51, 54, 56, 66, 69, 72], "obb": [4, 10, 21, 26, 36, 41, 51, 56, 66, 69], "orient": [4, 10, 14, 21, 26, 36, 41, 51, 56, 66, 69, 169], "collision_mesh": [4, 21, 36, 51, 66], "datastructur": [4, 8, 15, 21, 25, 30, 36, 40, 45, 51, 55, 60, 66, 70, 79, 88, 92, 93, 96, 101, 107, 108, 111, 112, 114, 116, 121, 122, 123, 124, 125, 130, 136, 137, 140, 142, 148, 149, 156, 158, 159, 162, 167, 168, 178], "mesh": [4, 8, 15, 21, 25, 30, 36, 40, 45, 51, 55, 60, 66, 70, 71, 76, 78, 79, 93, 116, 137, 159, 167, 168, 178], "collis": [4, 8, 21, 25, 36, 40, 51, 55, 66, 70], "dimens": [4, 21, 36, 51, 66, 166, 167], "list": [4, 9, 21, 36, 51, 66, 78, 108, 142, 146, 153, 154, 155, 162, 178], "featur": [4, 21, 36, 51, 66], "These": [4, 21, 36, 51, 66, 178], "ar": [4, 5, 21, 22, 36, 37, 51, 52, 66, 67, 86, 99, 128, 142, 143, 146, 169, 178], "custom": [4, 21, 36, 51, 66], "geometr": [4, 21, 36, 51, 66], "ad": [4, 21, 36, 51, 66, 101, 131, 142, 145, 146, 148, 164, 178], "through": [4, 21, 36, 51, 66], "oper": [4, 21, 36, 51, 66], "made": [4, 21, 36, 51, 66], "For": [4, 21, 36, 51, 66, 178], "exampl": [4, 15, 21, 30, 36, 45, 51, 60, 66, 79, 93, 116, 137, 159, 164, 168, 175, 178], "cut": [4, 21, 36, 51, 66], "boolean": [4, 21, 36, 51, 66], "differ": [4, 21, 36, 51, 66], "text": [4, 21, 36, 51, 66, 170, 171, 174], "insert": [4, 21, 36, 51, 66], "vector": [4, 14, 21, 36, 51, 66, 112, 113, 123, 124], "0": [4, 7, 10, 15, 21, 24, 26, 30, 36, 39, 41, 45, 51, 54, 56, 60, 66, 69, 72, 79, 93, 116, 137, 159, 166, 167, 168, 169, 173, 175, 178], "1": [4, 15, 21, 30, 36, 45, 51, 60, 66, 79, 93, 116, 137, 148, 159, 166, 167, 168, 169, 173, 175, 178], "downward": [4, 21, 36, 51, 66], "often": [4, 21, 36, 51, 66, 166], "us": [4, 5, 15, 20, 21, 22, 30, 35, 36, 37, 45, 50, 51, 52, 60, 65, 66, 67, 79, 84, 86, 93, 96, 97, 99, 116, 119, 120, 121, 122, 123, 124, 125, 126, 128, 137, 140, 141, 143, 159, 163, 166, 175, 177, 178], "simul": [4, 21, 36, 51, 66], "an": [4, 11, 12, 13, 16, 17, 19, 20, 21, 27, 28, 29, 31, 32, 34, 35, 36, 42, 43, 44, 46, 47, 49, 50, 51, 57, 58, 59, 61, 62, 64, 65, 66, 73, 74, 75, 80, 81, 83, 84, 89, 90, 91, 94, 95, 97, 102, 104, 105, 106, 117, 118, 126, 131, 133, 134, 135, 138, 139, 141, 145, 148, 150, 151, 152, 160, 161, 163, 168, 173, 177, 178], "assembli": [4, 21, 36, 51, 66, 175], "sequenc": [4, 21, 36, 51, 66], "node": [4, 21, 36, 51, 66, 85, 88, 92, 96, 98, 101, 102, 103, 107, 108, 109, 111, 125, 127, 130, 131, 132, 136, 140, 142, 156, 158, 162, 166, 167, 168, 169, 178], "elementnod": [4, 21, 36, 51, 66, 98, 102, 131, 142, 145, 148, 166, 167, 168, 169, 175, 178], "tree": [4, 21, 36, 51, 66, 96, 98, 101, 102, 103, 110, 111, 125, 127, 131, 140, 142, 149, 156, 175, 178], "contain": [4, 12, 13, 21, 28, 29, 36, 43, 44, 51, 58, 59, 66, 74, 75, 78, 90, 91, 105, 106, 134, 135, 142, 148, 150, 151, 166, 175, 178], "face_polygon": [4, 21, 66], "flat": [4, 21, 66, 142, 178], "area": [4, 21, 66], "face": [4, 9, 15, 21, 30, 45, 60, 66, 79, 93, 116, 137, 159, 178], "polygon": [4, 9, 21, 36, 51, 53, 66, 68, 76, 77, 78, 167, 168, 169, 173, 178], "interfac": [4, 21, 36, 66, 154, 155, 165, 175, 178], "detect": [4, 21, 66], "method": [4, 5, 21, 22, 36, 37, 51, 52, 66, 67, 85, 86, 98, 99, 127, 128, 142, 143, 146, 156, 178], "inherit": [4, 21, 36, 51, 66, 85, 98, 102, 103, 127, 131, 132, 142, 145, 178], "convert": [5, 16, 17, 22, 31, 32, 37, 46, 47, 52, 61, 62, 67, 80, 81, 86, 94, 95, 99, 117, 118, 128, 138, 139, 143, 160, 161], "instanc": [5, 12, 13, 19, 22, 28, 29, 34, 37, 43, 44, 49, 52, 58, 59, 64, 67, 74, 75, 83, 86, 90, 91, 99, 105, 106, 128, 134, 135, 143, 150, 151], "string": [5, 13, 17, 22, 29, 32, 37, 44, 47, 52, 59, 62, 67, 75, 81, 86, 91, 95, 99, 106, 118, 128, 135, 139, 143, 151, 161], "exist": [5, 22, 37, 52, 67, 86, 99, 128, 131, 143], "net": [5, 22, 37, 52, 67, 86, 99, 128, 143], "compat": [5, 22, 37, 52, 67, 86, 99, 128, 143, 175], "when": [5, 22, 37, 52, 67, 85, 86, 99, 101, 103, 127, 128, 132, 143, 147, 148, 178], "ironpython": [5, 22, 37, 52, 67, 86, 99, 128, 143], "implicit": [5, 22, 37, 52, 67, 86, 99, 128, 143], "convers": [5, 22, 37, 52, 67, 86, 99, 128, 143], "usual": [5, 22, 37, 52, 67, 86, 99, 128, 143], "take": [5, 22, 37, 52, 67, 86, 99, 128, 143], "place": [5, 22, 37, 52, 67, 86, 99, 128, 143], "cpython": [5, 22, 37, 52, 67, 86, 99, 128, 143], "kick": [5, 22, 37, 52, 67, 86, 99, 128, 143], "its": [5, 14, 16, 17, 22, 31, 32, 37, 46, 47, 52, 61, 62, 67, 80, 81, 86, 94, 95, 99, 107, 117, 118, 128, 138, 139, 143, 160, 161], "print": [5, 16, 17, 22, 31, 32, 37, 46, 47, 52, 61, 62, 67, 80, 81, 86, 94, 95, 99, 110, 117, 118, 128, 138, 139, 143, 157, 158, 160, 161, 166, 167, 168, 169, 178], "gettyp": [5, 22, 37, 52, 67, 86, 99, 128, 143], "fullnam": [5, 22, 37, 52, 67, 86, 99, 128, 143], "similar": [5, 22, 37, 52, 67, 86, 99, 128, 143], "overrid": [5, 22, 37, 52, 67, 86, 99, 128, 143], "fix": [5, 22, 37, 52, 67, 86, 99, 128, 143], "make": [5, 11, 22, 27, 37, 42, 52, 57, 67, 73, 86, 89, 99, 104, 128, 133, 143, 164], "rhino": [5, 22, 37, 52, 67, 86, 99, 128, 143], "grasshopp": [5, 22, 37, 52, 67, 86, 99, 128, 143], "displai": [5, 22, 37, 52, 67, 86, 99, 128, 143], "proper": [5, 22, 37, 52, 67, 86, 99, 128, 143], "connect": [5, 22, 37, 52, 67, 86, 99, 128, 142, 143, 155, 177], "panel": [5, 22, 37, 52, 67, 86, 99, 128, 143], "other": [5, 22, 37, 52, 67, 86, 99, 103, 127, 128, 132, 143, 147, 148, 177], "type": [5, 11, 12, 13, 20, 22, 27, 28, 29, 35, 37, 42, 43, 44, 50, 52, 57, 58, 59, 65, 67, 73, 74, 75, 84, 86, 89, 90, 91, 97, 99, 104, 105, 106, 126, 127, 128, 133, 134, 135, 141, 143, 148, 150, 151, 154, 155, 163], "output": [5, 22, 37, 52, 67, 86, 99, 128, 143, 178], "inflat": [7, 10, 24, 26, 39, 41, 54, 56, 69, 72], "comput": [7, 8, 9, 10, 15, 24, 25, 26, 30, 39, 40, 41, 45, 54, 55, 56, 60, 69, 70, 71, 72, 79, 93, 116, 137, 142, 159], "offset": [7, 10, 24, 26, 39, 41, 54, 56, 69, 72], "avoid": [7, 10, 24, 26, 39, 41, 54, 56, 69, 72], "point": [7, 10, 21, 24, 26, 39, 41, 54, 56, 66, 69, 72, 78, 112, 113, 166, 167, 169], "error": [7, 10, 24, 26, 39, 41, 54, 56, 69, 72], "return": [7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 88, 89, 90, 91, 92, 93, 95, 97, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 161, 163, 167], "cl": [11, 27, 42, 57, 73, 89, 104, 133], "none": [11, 14, 18, 21, 23, 27, 33, 36, 38, 42, 48, 57, 63, 73, 82, 85, 87, 88, 89, 92, 98, 100, 101, 102, 103, 104, 111, 112, 113, 114, 115, 119, 120, 123, 127, 129, 130, 131, 132, 133, 136, 145, 147, 148, 178], "independ": [11, 27, 42, 57, 73, 89, 104, 133], "data": [11, 12, 13, 15, 16, 17, 20, 27, 28, 29, 30, 31, 32, 35, 36, 42, 43, 44, 45, 46, 47, 50, 57, 58, 59, 60, 61, 62, 65, 73, 74, 75, 79, 80, 81, 84, 89, 90, 91, 93, 94, 95, 97, 98, 104, 105, 106, 116, 117, 118, 119, 120, 121, 122, 126, 133, 134, 135, 137, 138, 139, 141, 142, 150, 151, 159, 160, 161, 163, 166, 167, 169, 175, 178], "current": [11, 27, 42, 57, 73, 89, 104, 131, 132, 133], "classmethod": [12, 13, 14, 20, 28, 29, 35, 43, 44, 50, 58, 59, 65, 74, 75, 76, 84, 90, 91, 97, 105, 106, 126, 134, 135, 141, 150, 151, 163], "filepath": [12, 16, 28, 31, 43, 46, 58, 61, 74, 80, 90, 94, 105, 117, 134, 138, 150, 160], "construct": [12, 13, 20, 28, 29, 35, 43, 44, 50, 58, 59, 65, 74, 75, 84, 90, 91, 97, 105, 106, 126, 134, 135, 141, 150, 151, 163, 173], "from": [12, 13, 14, 15, 28, 29, 30, 43, 44, 45, 51, 58, 59, 60, 66, 74, 75, 76, 78, 79, 85, 90, 91, 92, 93, 96, 102, 103, 105, 106, 111, 116, 125, 131, 132, 134, 135, 136, 137, 140, 145, 150, 151, 159, 166, 167, 168, 169, 173, 177, 178], "json": [12, 13, 16, 17, 28, 29, 31, 32, 43, 44, 46, 47, 58, 59, 61, 62, 74, 75, 80, 81, 90, 91, 94, 95, 105, 106, 117, 118, 134, 135, 138, 139, 150, 151, 160, 161, 169], "file": [12, 16, 28, 31, 43, 46, 58, 61, 74, 80, 90, 94, 105, 117, 134, 138, 150, 160, 164, 168, 173, 177], "path": [12, 16, 28, 31, 43, 46, 58, 61, 74, 80, 90, 94, 105, 117, 134, 138, 150, 160], "ha": [12, 13, 28, 29, 43, 44, 58, 59, 74, 75, 90, 91, 101, 105, 106, 134, 135, 150, 151], "correct": [12, 13, 28, 29, 43, 44, 58, 59, 74, 75, 90, 91, 105, 106, 134, 135, 150, 151], "schema": [12, 13, 20, 28, 29, 35, 43, 44, 50, 58, 59, 65, 74, 75, 84, 90, 91, 97, 105, 106, 126, 134, 135, 141, 150, 151, 163], "rais": [12, 13, 28, 29, 43, 44, 58, 59, 74, 75, 88, 90, 91, 96, 101, 105, 106, 125, 130, 134, 135, 140, 150, 151], "typeerror": [12, 13, 28, 29, 43, 44, 58, 59, 74, 75, 88, 90, 91, 101, 105, 106, 130, 134, 135, 150, 151], "If": [12, 13, 15, 16, 17, 28, 29, 30, 31, 32, 43, 44, 45, 46, 47, 58, 59, 60, 61, 62, 66, 74, 75, 76, 79, 80, 81, 85, 88, 90, 91, 93, 94, 95, 96, 101, 105, 106, 116, 117, 118, 125, 130, 131, 134, 135, 137, 138, 139, 140, 142, 145, 146, 150, 151, 159, 160, 161], "center_axi": 14, "z_vector": 14, "defin": [14, 85, 127, 173, 178], "creat": [14, 19, 34, 49, 64, 76, 78, 83, 85, 127, 166, 167, 168, 169, 173], "indic": 14, "direct": [14, 114, 115, 178], "z": [14, 15, 30, 45, 60, 79, 93, 112, 113, 114, 115, 116, 137, 159], "worldz": 14, "worldx": 14, "depend": 14, "compas_timb": 14, "part": [14, 101, 178], "as_str": [15, 30, 45, 60, 79, 93, 116, 137, 159], "fals": [15, 16, 17, 30, 31, 32, 45, 46, 47, 60, 61, 62, 79, 80, 81, 93, 94, 95, 116, 117, 118, 131, 137, 138, 139, 142, 144, 145, 146, 159, 160, 161, 169], "hash": [15, 30, 45, 60, 79, 93, 116, 137, 159], "comparison": [15, 30, 45, 60, 79, 93, 116, 137, 159], "dure": [15, 30, 45, 60, 79, 93, 116, 137, 159], "version": [15, 30, 45, 60, 79, 93, 116, 137, 159], "control": [15, 30, 45, 60, 79, 93, 116, 137, 159], "algorithm": [15, 30, 45, 60, 79, 93, 116, 137, 159, 173, 175, 178], "bool": [15, 16, 17, 30, 31, 32, 45, 46, 47, 60, 61, 62, 66, 76, 79, 80, 81, 93, 94, 95, 116, 117, 118, 131, 137, 138, 139, 142, 145, 146, 159, 160, 161], "true": [15, 16, 17, 30, 31, 32, 45, 46, 47, 60, 61, 62, 66, 68, 76, 79, 80, 81, 93, 94, 95, 116, 117, 118, 131, 137, 138, 139, 142, 145, 146, 159, 160, 161, 169], "digest": [15, 30, 45, 60, 79, 93, 116, 137, 159], "hexadecim": [15, 30, 45, 60, 79, 93, 116, 137, 159], "format": [15, 30, 45, 60, 79, 93, 109, 116, 137, 159], "rather": [15, 30, 45, 60, 79, 93, 116, 137, 159], "than": [15, 30, 45, 60, 79, 93, 116, 137, 159, 166], "byte": [15, 30, 45, 60, 79, 93, 116, 137, 159], "import": [15, 30, 45, 60, 79, 93, 116, 137, 159, 166, 167, 168, 169, 173, 178], "from_obj": [15, 30, 45, 60, 79, 93, 116, 137, 159], "get": [15, 30, 45, 60, 79, 93, 107, 108, 116, 137, 152, 153, 154, 155, 159, 162], "obj": [15, 30, 45, 60, 79, 93, 116, 137, 159, 173], "v1": [15, 30, 45, 60, 79, 93, 116, 137, 159], "v2": [15, 30, 45, 60, 79, 93, 116, 137, 159], "vertex_attribut": [15, 30, 45, 60, 79, 93, 116, 137, 159], "vertex_sampl": [15, 30, 45, 60, 79, 93, 116, 137, 159], "v3": [15, 30, 45, 60, 79, 93, 116, 137, 159], "pretti": [16, 17, 31, 32, 46, 47, 61, 62, 80, 81, 94, 95, 117, 118, 138, 139, 160, 161, 169], "nativ": [16, 17, 31, 32, 46, 47, 61, 62, 80, 81, 94, 95, 117, 118, 138, 139, 160, 161], "save": [16, 17, 31, 32, 46, 47, 61, 62, 80, 81, 94, 95, 117, 118, 138, 139, 160, 161], "all": [18, 33, 48, 63, 82, 108, 142, 148, 157, 158, 177], "attrbut": [18, 33, 48, 63, 82], "appli": [18, 19, 33, 34, 48, 49, 63, 64, 82, 83], "copi": [19, 34, 49, 64, 83, 113, 115, 121, 122, 124, 131, 142, 145, 146, 166, 167, 168, 169, 177], "new": [19, 34, 49, 64, 83, 164], "specifi": [19, 34, 49, 64, 83, 178], "valid": [20, 35, 50, 65, 84, 97, 126, 141, 163], "against": [20, 35, 50, 65, 84, 97, 126, 141, 163], "raw": [20, 35, 50, 65, 84, 97, 126, 141, 163], "__from_data__": [20, 35, 50, 65, 84, 97, 126, 141, 163], "ani": [20, 21, 35, 36, 50, 65, 71, 84, 85, 97, 102, 103, 126, 127, 131, 132, 141, 145, 147, 148, 163, 177], "closed_mesh": [21, 23], "implement": [21, 66, 178], "inspir": [21, 66], "compas_assembli": [21, 66, 175], "blockresearchgroup": [21, 66], "By": 21, "centroid": 21, "close": [21, 36, 66, 167], "simplifi": [21, 36], "e": [36, 164, 176], "g": 36, "beam": [36, 51, 165, 168, 169, 175, 178], "plate": [36, 165, 167, 168, 175, 178], "actual": 36, "warn": 36, "do": [36, 177, 178], "directli": 36, "instead": [36, 178], "subclass": 36, "etc": 36, "abstract": [39, 40, 41, 48, 142, 178], "thick": [66, 68, 169, 178], "compute_loft": [66, 68, 76, 169], "outlin": [66, 76, 78], "loft": [66, 71, 76], "two": [66, 76, 78, 155, 167, 168, 169], "otherwis": [66, 85, 127, 177], "polygon0": [76, 78, 169, 173], "polygon1": [76, 78, 173], "first": [76, 78, 96, 125, 140, 148, 169], "second": [76, 148], "static": [77, 78], "tupl": [78, 148], "polylin": 78, "parent": [85, 87, 98, 101, 102, 103, 127, 129, 131, 132, 156, 178], "treenod": [85, 88, 92, 96, 101, 107, 108, 111, 125, 127, 130, 136, 140, 142], "leaf": [85, 127, 145], "store": [85, 98, 127, 142, 175, 178], "given": 85, "groupnod": [85, 102, 103, 142, 147, 175, 178], "input": [85, 127, 173], "requir": [85, 127], "separ": [85, 127], "my_model": 85, "add_el": [85, 166, 167, 168, 169, 173, 178], "after": [85, 127, 164], "creation": [85, 127], "becom": [85, 127], "branch": [85, 127], "sub": [85, 109, 127], "child": [88, 92, 130, 136, 156], "strategi": [96, 125, 140], "depthfirst": [96, 125, 140], "order": [96, 125, 140], "preorder": [96, 125, 140], "breadthfirst": [96, 125, 140], "postord": [96, 125, 140], "depth": [96, 125, 140], "yield": [96, 125, 140], "next": [96, 125, 140, 175], "valueerror": [96, 101, 125, 140], "root": [98, 100, 101, 125, 178], "structur": [98, 119, 120, 121, 122, 142, 166, 169, 175, 178], "updat": [98, 178], "dictionari": [98, 131, 142, 178], "graph": [98, 131, 142, 148, 149, 156, 158, 162, 175, 178], "allow": 98, "access": 98, "interact": [98, 142, 148, 173, 175, 178], "number_of_el": [98, 142], "int": [98, 142, 148], "number": [98, 156], "which": [101, 166, 175], "case": [101, 175, 178], "suppli": 101, "alreadi": [101, 148, 173], "anoth": 101, "try": 101, "add": [102, 103, 131, 132, 145, 147, 148, 173], "properti": [103, 127, 132, 145, 147, 148, 149, 178], "you": [103, 127, 132, 147, 148, 173, 178], "want": [103, 127, 132, 147, 148], "give": [103, 127, 132, 147, 148], "besid": [103, 127, 132, 147, 148], "readabl": 109, "spatial": [110, 156], "hierarchi": [110, 142, 156, 173], "angl": [112, 113], "radian": [112, 113], "origin": [112, 113], "translat": [112, 113, 114, 115, 167, 169], "scale": [112, 113, 123, 124], "transform": [112, 113, 114, 115, 120, 122, 123, 124, 166, 167, 169], "x": [114, 115], "y": [114, 115], "factor": [114, 115], "rotat": [114, 115, 123, 124], "add_group": [127, 178], "assign": 127, "copy_el": [131, 142, 144, 145, 146], "tripl": 131, "behavior": 131, "element_nod": 131, "befor": [131, 142, 145, 146], "note": 142, "collect": 142, "between": [142, 175, 178], "linkag": 142, "total": [142, 156], "count": 142, "number_of_nod": 142, "number_of_edg": 142, "edg": [142, 148, 156, 158, 178], "multipl": 146, "call": 146, "element0": 148, "element1": 148, "weight": 148, "pair": [148, 169], "previous": 148, "involv": 148, "duplic": 149, "element_typ": [154, 155], "One": 155, "joint": 155, "have": [155, 173], "more": [155, 178], "one": [155, 164], "strucutr": 156, "elementtre": [156, 175], "also": [156, 166, 178], "inform": 156, "about": 156, "includ": [156, 177, 178], "relationship": 156, "neighbor": 162, "To": 164, "up": 164, "start": 164, "clone": [164, 176], "repo": 164, "git": [164, 176], "http": [164, 176], "github": [164, 176], "com": [164, 176], "brg": [164, 176], "manual": [164, 178], "extens": 164, "modul": [164, 175], "chang": [164, 178], "simpli": 164, "run": 164, "setup": 164, "py": 164, "trough": 164, "sourc": 164, "instal": [164, 175], "pip": [164, 176], "form": [165, 175], "find": [165, 175], "masonri": [165, 175], "robot": [165, 175], "rectangular": 166, "It": 166, "target": 166, "smaller": 166, "fabric": 166, "longer": 166, "viewer": [166, 167, 168, 169, 173], "viewermodel": [166, 167, 168, 169, 173], "extend": 166, "b0": 166, "from_lin": 166, "3": 166, "25": 166, "5": [166, 167, 168, 169, 178], "test": [166, 167, 168], "b0_copi": 166, "from_frame_to_fram": [166, 167, 169], "belong": [166, 167, 168, 169], "follow": [166, 167, 168, 169, 177], "visual": [166, 167, 175, 178], "show": [166, 167, 168, 169], "scale_factor": [166, 167, 168, 169], "def": 167, "mesh_from_polygon": 167, "2": [167, 168, 169, 175, 178], "4": [167, 168, 178], "from_polygon": 167, "compute_aabb": 167, "compute_obb": 167, "block_copi": 167, "from_vector": [167, 169], "join": 168, "from_polyhedron": [168, 178], "box0": 168, "from_vertices_and_fac": 168, "to_vertices_and_fac": 168, "box1": 168, "block0": 168, "block1": 168, "interface_copi": 168, "Or": [168, 178], "add_interact": [168, 173, 178], "vizual": [168, 169], "outward": 169, "consid": 169, "from_sides_and_radius_xi": 169, "6": [169, 178], "10": [169, 178], "15": 169, "uncom": 169, "verifi": 169, "initi": 169, "correctli": 169, "regardless": 169, "wind": 169, "revers": 169, "from_two_polygon": [169, 173], "xform": 169, "serial": 169, "to_json": 169, "from_json": 169, "my_plat": [169, 173, 178], "assum": 173, "ply": 173, "load": 173, "top_polygon": 173, "bottom_polygon": 173, "create_folded_mesh": 173, "Then": 173, "top": 173, "bottom": 173, "elements_plate_application_fold": 173, "fold": 173, "idx": 173, "enumer": 173, "append": 173, "my_interact": 173, "encompass": 175, "individu": [175, 178], "discret": 175, "b": 175, "track": [175, 178], "them": 175, "commonli": [175, 178], "joineri": 175, "abstractli": 175, "adjac": [175, 178], "c": [175, 177], "hierarch": 175, "manner": 175, "itself": [175, 178], "serv": [175, 178], "fundament": 175, "variou": [175, 178], "applic": 175, "primarili": 175, "util": [175, 178], "abov": [175, 177], "17": 175, "9": 175, "introduct": 175, "tutori": 175, "api": 175, "refer": 175, "licens": 175, "acknowledg": 175, "index": 175, "search": 175, "page": 175, "cd": 176, "under": 177, "mit": 177, "copyright": 177, "05": 177, "decemb": 177, "2023": 177, "permiss": 177, "herebi": 177, "grant": 177, "free": 177, "charg": 177, "person": 177, "obtain": 177, "softwar": 177, "associ": 177, "document": 177, "deal": 177, "without": 177, "restrict": 177, "limit": 177, "right": 177, "modifi": 177, "merg": 177, "publish": 177, "distribut": 177, "sublicens": 177, "sell": 177, "permit": 177, "whom": 177, "furnish": 177, "so": 177, "subject": 177, "condit": 177, "notic": 177, "shall": 177, "substanti": 177, "portion": 177, "THE": 177, "provid": [177, 178], "AS": 177, "warranti": 177, "OF": 177, "kind": 177, "express": 177, "OR": 177, "impli": 177, "BUT": 177, "NOT": 177, "TO": 177, "merchant": 177, "fit": 177, "FOR": 177, "particular": 177, "purpos": 177, "AND": 177, "noninfring": 177, "IN": 177, "NO": 177, "event": 177, "holder": 177, "BE": 177, "liabl": 177, "claim": 177, "damag": 177, "liabil": 177, "whether": 177, "action": 177, "contract": 177, "tort": 177, "aris": 177, "out": 177, "WITH": 177, "here": 178, "we": 178, "simpl": 178, "In": 178, "cc7e1583": 178, "c083": 178, "4b29": 178, "92ad": 178, "d191a58664dc": 178, "similarli": 178, "around": 178, "common": 178, "touch": 178, "expand": 178, "howev": 178, "my_block": 178, "my_beam": 178, "my_joint": 178, "There": 178, "sever": 178, "wai": 178, "keep": 178, "manag": 178, "remov": 178, "automat": 178, "each": 178, "children": 178, "5be9ca8d": 178, "7cdf": 178, "4cc9": 178, "9db9": 178, "c25029bc07a0": 178, "retriev": 178, "along": 178, "themselv": 178, "get_by_nam": 178, "node_el": 178, "now": 178, "know": 178, "how": 178, "establish": 178, "third": 178, "parti": 178, "f89f9ee2": 178, "08b4": 178, "4f5c": 178, "8306": 178, "fb17a0a530a2": 178, "6db4b383": 178, "dc05": 178, "4b55": 178, "a688": 178, "d5c9adcabbd0": 178, "need": 178, "combin": 178, "previou": 178, "complex": 178, "group_block": 178, "my_block_0": 178, "my_block_1": 178, "group_beam": 178, "my_beam_0": 178, "my_beam_1": 178, "20": 178, "467297e0": 178, "8a26": 178, "4c01": 178, "a5a5": 178, "cd5b76c76034": 178, "2f589e36": 178, "3f5f": 178, "4546": 178, "b03c": 178, "a3e84aef9272": 178, "37ccb07f": 178, "84d2": 178, "455f": 178, "b1a9": 178, "c55e61168819": 178, "426e6a67": 178, "14c5": 178, "4754": 178, "9374": 178, "a611e4ba4e73": 178}, "objects": {"compas_model.elements": [[4, 0, 1, "", "Beam"], [21, 0, 1, "", "Block"], [36, 0, 1, "", "Element"], [51, 0, 1, "", "Interface"], [66, 0, 1, "", "Plate"]], "compas_model.elements.Beam": [[5, 1, 1, "", "ToString"], [6, 1, 1, "", "__init__"], [7, 1, 1, "", "compute_aabb"], [8, 1, 1, "", "compute_collision_mesh"], [9, 1, 1, "", "compute_face_polygons"], [10, 1, 1, "", "compute_obb"], [11, 1, 1, "", "copy"], [12, 1, 1, "", "from_json"], [13, 1, 1, "", "from_jsonstring"], [14, 1, 1, "", "from_line"], [15, 1, 1, "", "sha256"], [16, 1, 1, "", "to_json"], [17, 1, 1, "", "to_jsonstring"], [18, 1, 1, "", "transform"], [19, 1, 1, "", "transformed"], [20, 1, 1, "", "validate_data"]], "compas_model.elements.Block": [[22, 1, 1, "", "ToString"], [23, 1, 1, "", "__init__"], [24, 1, 1, "", "compute_aabb"], [25, 1, 1, "", "compute_collision_mesh"], [26, 1, 1, "", "compute_obb"], [27, 1, 1, "", "copy"], [28, 1, 1, "", "from_json"], [29, 1, 1, "", "from_jsonstring"], [30, 1, 1, "", "sha256"], [31, 1, 1, "", "to_json"], [32, 1, 1, "", "to_jsonstring"], [33, 1, 1, "", "transform"], [34, 1, 1, "", "transformed"], [35, 1, 1, "", "validate_data"]], "compas_model.elements.Element": [[37, 1, 1, "", "ToString"], [38, 1, 1, "", "__init__"], [39, 1, 1, "", "compute_aabb"], [40, 1, 1, "", "compute_collision_mesh"], [41, 1, 1, "", "compute_obb"], [42, 1, 1, "", "copy"], [43, 1, 1, "", "from_json"], [44, 1, 1, "", "from_jsonstring"], [45, 1, 1, "", "sha256"], [46, 1, 1, "", "to_json"], [47, 1, 1, "", "to_jsonstring"], [48, 1, 1, "", "transform"], [49, 1, 1, "", "transformed"], [50, 1, 1, "", "validate_data"]], "compas_model.elements.Interface": [[52, 1, 1, "", "ToString"], [53, 1, 1, "", "__init__"], [54, 1, 1, "", "compute_aabb"], [55, 1, 1, "", "compute_collision_mesh"], [56, 1, 1, "", "compute_obb"], [57, 1, 1, "", "copy"], [58, 1, 1, "", "from_json"], [59, 1, 1, "", "from_jsonstring"], [60, 1, 1, "", "sha256"], [61, 1, 1, "", "to_json"], [62, 1, 1, "", "to_jsonstring"], [63, 1, 1, "", "transform"], [64, 1, 1, "", "transformed"], [65, 1, 1, "", "validate_data"]], "compas_model.elements.Plate": [[67, 1, 1, "", "ToString"], [68, 1, 1, "", "__init__"], [69, 1, 1, "", "compute_aabb"], [70, 1, 1, "", "compute_collision_mesh"], [71, 1, 1, "", "compute_loft"], [72, 1, 1, "", "compute_obb"], [73, 1, 1, "", "copy"], [74, 1, 1, "", "from_json"], [75, 1, 1, "", "from_jsonstring"], [76, 1, 1, "", "from_two_polygons"], [77, 1, 1, "", "get_average_frame"], [78, 1, 1, "", "mesh_from_loft"], [79, 1, 1, "", "sha256"], [80, 1, 1, "", "to_json"], [81, 1, 1, "", "to_jsonstring"], [82, 1, 1, "", "transform"], [83, 1, 1, "", "transformed"], [84, 1, 1, "", "validate_data"]], "compas_model.model": [[85, 0, 1, "", "ElementNode"], [98, 0, 1, "", "ElementTree"], [127, 0, 1, "", "GroupNode"], [142, 0, 1, "", "Model"]], "compas_model.model.ElementNode": [[86, 1, 1, "", "ToString"], [87, 1, 1, "", "__init__"], [88, 1, 1, "", "add"], [89, 1, 1, "", "copy"], [90, 1, 1, "", "from_json"], [91, 1, 1, "", "from_jsonstring"], [92, 1, 1, "", "remove"], [93, 1, 1, "", "sha256"], [94, 1, 1, "", "to_json"], [95, 1, 1, "", "to_jsonstring"], [96, 1, 1, "", "traverse"], [97, 1, 1, "", "validate_data"]], "compas_model.model.ElementTree": [[99, 1, 1, "", "ToString"], [100, 1, 1, "", "__init__"], [101, 1, 1, "", "add"], [102, 1, 1, "", "add_element"], [103, 1, 1, "", "add_group"], [104, 1, 1, "", "copy"], [105, 1, 1, "", "from_json"], [106, 1, 1, "", "from_jsonstring"], [107, 1, 1, "", "get_node_by_name"], [108, 1, 1, "", "get_nodes_by_name"], [109, 1, 1, "", "print"], [110, 1, 1, "", "print_hierarchy"], [111, 1, 1, "", "remove"], [112, 1, 1, "", "rotate"], [113, 1, 1, "", "rotated"], [114, 1, 1, "", "scale"], [115, 1, 1, "", "scaled"], [116, 1, 1, "", "sha256"], [117, 1, 1, "", "to_json"], [118, 1, 1, "", "to_jsonstring"], [119, 1, 1, "", "transform"], [120, 1, 1, "", "transform_numpy"], [121, 1, 1, "", "transformed"], [122, 1, 1, "", "transformed_numpy"], [123, 1, 1, "", "translate"], [124, 1, 1, "", "translated"], [125, 1, 1, "", "traverse"], [126, 1, 1, "", "validate_data"]], "compas_model.model.GroupNode": [[128, 1, 1, "", "ToString"], [129, 1, 1, "", "__init__"], [130, 1, 1, "", "add"], [131, 1, 1, "", "add_element"], [132, 1, 1, "", "add_group"], [133, 1, 1, "", "copy"], [134, 1, 1, "", "from_json"], [135, 1, 1, "", "from_jsonstring"], [136, 1, 1, "", "remove"], [137, 1, 1, "", "sha256"], [138, 1, 1, "", "to_json"], [139, 1, 1, "", "to_jsonstring"], [140, 1, 1, "", "traverse"], [141, 1, 1, "", "validate_data"]], "compas_model.model.Model": [[143, 1, 1, "", "ToString"], [144, 1, 1, "", "__init__"], [145, 1, 1, "", "add_element"], [146, 1, 1, "", "add_elements"], [147, 1, 1, "", "add_group"], [148, 1, 1, "", "add_interaction"], [149, 1, 1, "", "copy"], [150, 1, 1, "", "from_json"], [151, 1, 1, "", "from_jsonstring"], [152, 1, 1, "", "get_by_name"], [153, 1, 1, "", "get_by_names"], [154, 1, 1, "", "get_by_type"], [155, 1, 1, "", "get_connected_elements"], [156, 1, 1, "", "print"], [157, 1, 1, "", "print_elements"], [158, 1, 1, "", "print_interactions"], [159, 1, 1, "", "sha256"], [160, 1, 1, "", "to_json"], [161, 1, 1, "", "to_jsonstring"], [162, 1, 1, "", "to_nodes_and_neighbors"], [163, 1, 1, "", "validate_data"]]}, "objtypes": {"0": "py:class", "1": "py:method"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"]}, "titleterms": {"acknowledg": 0, "api": 1, "refer": 1, "compas_model": [2, 3], "element": [2, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 166, 167, 168, 169, 178], "class": [2, 3], "model": [3, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 170, 171, 172, 173, 174, 175, 178], "beam": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 166, 170], "tostr": [5, 22, 37, 52, 67, 86, 99, 128, 143], "__init__": [6, 23, 38, 53, 68, 87, 100, 129, 144], "compute_aabb": [7, 24, 39, 54, 69], "compute_collision_mesh": [8, 25, 40, 55, 70], "compute_face_polygon": 9, "compute_obb": [10, 26, 41, 56, 72], "copi": [11, 27, 42, 57, 73, 89, 104, 133, 149], "from_json": [12, 28, 43, 58, 74, 90, 105, 134, 150], "from_jsonstr": [13, 29, 44, 59, 75, 91, 106, 135, 151], "from_lin": 14, "sha256": [15, 30, 45, 60, 79, 93, 116, 137, 159], "to_json": [16, 31, 46, 61, 80, 94, 117, 138, 160], "to_jsonstr": [17, 32, 47, 62, 81, 95, 118, 139, 161], "transform": [18, 19, 33, 34, 48, 49, 63, 64, 82, 83, 119, 121], "validate_data": [20, 35, 50, 65, 84, 97, 126, 141, 163], "block": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 167], "interfac": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 168], "plate": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 169, 173], "compute_loft": 71, "from_two_polygon": 76, "get_average_fram": 77, "mesh_from_loft": 78, "elementnod": [85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "add": [88, 101, 130, 178], "remov": [92, 111, 136], "travers": [96, 125, 140], "elementtre": [98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "add_el": [102, 131, 145, 146], "add_group": [103, 132, 147], "get_node_by_nam": 107, "get_nodes_by_nam": 108, "print": [109, 156], "print_hierarchi": 110, "rotat": [112, 113], "scale": [114, 115], "transform_numpi": 120, "transformed_numpi": 122, "translat": [123, 124], "groupnod": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "add_interact": 148, "get_by_nam": [152, 153], "get_by_typ": 154, "get_connected_el": 155, "print_el": 157, "print_interact": 158, "to_nodes_and_neighbor": 162, "develop": [164, 176], "guid": 164, "environ": 164, "build": 164, "exampl": 165, "form": 171, "find": 171, "masonri": 172, "robot": 174, "compa": 175, "tabl": 175, "content": 175, "indic": 175, "instal": 176, "stabl": 176, "licens": 177, "tutori": 178, "other": 178, "type": 178, "creat": 178, "connect": 178, "hierarchi": 178}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Acknowledgements": [[0, "acknowledgements"]], "API Reference": [[1, "api-reference"]], "compas_model.elements": [[2, "compas-model-elements"]], "Classes": [[2, "classes"], [3, "classes"]], "compas_model.model": [[3, "compas-model-model"]], "Beam": [[4, "beam"]], "Beam.ToString": [[5, "beam-tostring"]], "Beam.__init__": [[6, "beam-init"]], "Beam.compute_aabb": [[7, "beam-compute-aabb"]], "Beam.compute_collision_mesh": [[8, "beam-compute-collision-mesh"]], "Beam.compute_face_polygons": [[9, "beam-compute-face-polygons"]], "Beam.compute_obb": [[10, "beam-compute-obb"]], "Beam.copy": [[11, "beam-copy"]], "Beam.from_json": [[12, "beam-from-json"]], "Beam.from_jsonstring": [[13, "beam-from-jsonstring"]], "Beam.from_line": [[14, "beam-from-line"]], "Beam.sha256": [[15, "beam-sha256"]], "Beam.to_json": [[16, "beam-to-json"]], "Beam.to_jsonstring": [[17, "beam-to-jsonstring"]], "Beam.transform": [[18, "beam-transform"]], "Beam.transformed": [[19, "beam-transformed"]], "Beam.validate_data": [[20, "beam-validate-data"]], "Block": [[21, "block"]], "Block.ToString": [[22, "block-tostring"]], "Block.__init__": [[23, "block-init"]], "Block.compute_aabb": [[24, "block-compute-aabb"]], "Block.compute_collision_mesh": [[25, "block-compute-collision-mesh"]], "Block.compute_obb": [[26, "block-compute-obb"]], "Block.copy": [[27, "block-copy"]], "Block.from_json": [[28, "block-from-json"]], "Block.from_jsonstring": [[29, "block-from-jsonstring"]], "Block.sha256": [[30, "block-sha256"]], "Block.to_json": [[31, "block-to-json"]], "Block.to_jsonstring": [[32, "block-to-jsonstring"]], "Block.transform": [[33, "block-transform"]], "Block.transformed": [[34, "block-transformed"]], "Block.validate_data": [[35, "block-validate-data"]], "Element": [[36, "element"], [178, "element"]], "Element.ToString": [[37, "element-tostring"]], "Element.__init__": [[38, "element-init"]], "Element.compute_aabb": [[39, "element-compute-aabb"]], "Element.compute_collision_mesh": [[40, "element-compute-collision-mesh"]], "Element.compute_obb": [[41, "element-compute-obb"]], "Element.copy": [[42, "element-copy"]], "Element.from_json": [[43, "element-from-json"]], "Element.from_jsonstring": [[44, "element-from-jsonstring"]], "Element.sha256": [[45, "element-sha256"]], "Element.to_json": [[46, "element-to-json"]], "Element.to_jsonstring": [[47, "element-to-jsonstring"]], "Element.transform": [[48, "element-transform"]], "Element.transformed": [[49, "element-transformed"]], "Element.validate_data": [[50, "element-validate-data"]], "Interface": [[51, "interface"]], "Interface.ToString": [[52, "interface-tostring"]], "Interface.__init__": [[53, "interface-init"]], "Interface.compute_aabb": [[54, "interface-compute-aabb"]], "Interface.compute_collision_mesh": [[55, "interface-compute-collision-mesh"]], "Interface.compute_obb": [[56, "interface-compute-obb"]], "Interface.copy": [[57, "interface-copy"]], "Interface.from_json": [[58, "interface-from-json"]], "Interface.from_jsonstring": [[59, "interface-from-jsonstring"]], "Interface.sha256": [[60, "interface-sha256"]], "Interface.to_json": [[61, "interface-to-json"]], "Interface.to_jsonstring": [[62, "interface-to-jsonstring"]], "Interface.transform": [[63, "interface-transform"]], "Interface.transformed": [[64, "interface-transformed"]], "Interface.validate_data": [[65, "interface-validate-data"]], "Plate": [[66, "plate"]], "Plate.ToString": [[67, "plate-tostring"]], "Plate.__init__": [[68, "plate-init"]], "Plate.compute_aabb": [[69, "plate-compute-aabb"]], "Plate.compute_collision_mesh": [[70, "plate-compute-collision-mesh"]], "Plate.compute_loft": [[71, "plate-compute-loft"]], "Plate.compute_obb": [[72, "plate-compute-obb"]], "Plate.copy": [[73, "plate-copy"]], "Plate.from_json": [[74, "plate-from-json"]], "Plate.from_jsonstring": [[75, "plate-from-jsonstring"]], "Plate.from_two_polygons": [[76, "plate-from-two-polygons"]], "Plate.get_average_frame": [[77, "plate-get-average-frame"]], "Plate.mesh_from_loft": [[78, "plate-mesh-from-loft"]], "Plate.sha256": [[79, "plate-sha256"]], "Plate.to_json": [[80, "plate-to-json"]], "Plate.to_jsonstring": [[81, "plate-to-jsonstring"]], "Plate.transform": [[82, "plate-transform"]], "Plate.transformed": [[83, "plate-transformed"]], "Plate.validate_data": [[84, "plate-validate-data"]], "ElementNode": [[85, "elementnode"]], "ElementNode.ToString": [[86, "elementnode-tostring"]], "ElementNode.__init__": [[87, "elementnode-init"]], "ElementNode.add": [[88, "elementnode-add"]], "ElementNode.copy": [[89, "elementnode-copy"]], "ElementNode.from_json": [[90, "elementnode-from-json"]], "ElementNode.from_jsonstring": [[91, "elementnode-from-jsonstring"]], "ElementNode.remove": [[92, "elementnode-remove"]], "ElementNode.sha256": [[93, "elementnode-sha256"]], "ElementNode.to_json": [[94, "elementnode-to-json"]], "ElementNode.to_jsonstring": [[95, "elementnode-to-jsonstring"]], "ElementNode.traverse": [[96, "elementnode-traverse"]], "ElementNode.validate_data": [[97, "elementnode-validate-data"]], "ElementTree": [[98, "elementtree"]], "ElementTree.ToString": [[99, "elementtree-tostring"]], "ElementTree.__init__": [[100, "elementtree-init"]], "ElementTree.add": [[101, "elementtree-add"]], "ElementTree.add_element": [[102, "elementtree-add-element"]], "ElementTree.add_group": [[103, "elementtree-add-group"]], "ElementTree.copy": [[104, "elementtree-copy"]], "ElementTree.from_json": [[105, "elementtree-from-json"]], "ElementTree.from_jsonstring": [[106, "elementtree-from-jsonstring"]], "ElementTree.get_node_by_name": [[107, "elementtree-get-node-by-name"]], "ElementTree.get_nodes_by_name": [[108, "elementtree-get-nodes-by-name"]], "ElementTree.print": [[109, "elementtree-print"]], "ElementTree.print_hierarchy": [[110, "elementtree-print-hierarchy"]], "ElementTree.remove": [[111, "elementtree-remove"]], "ElementTree.rotate": [[112, "elementtree-rotate"]], "ElementTree.rotated": [[113, "elementtree-rotated"]], "ElementTree.scale": [[114, "elementtree-scale"]], "ElementTree.scaled": [[115, "elementtree-scaled"]], "ElementTree.sha256": [[116, "elementtree-sha256"]], "ElementTree.to_json": [[117, "elementtree-to-json"]], "ElementTree.to_jsonstring": [[118, "elementtree-to-jsonstring"]], "ElementTree.transform": [[119, "elementtree-transform"]], "ElementTree.transform_numpy": [[120, "elementtree-transform-numpy"]], "ElementTree.transformed": [[121, "elementtree-transformed"]], "ElementTree.transformed_numpy": [[122, "elementtree-transformed-numpy"]], "ElementTree.translate": [[123, "elementtree-translate"]], "ElementTree.translated": [[124, "elementtree-translated"]], "ElementTree.traverse": [[125, "elementtree-traverse"]], "ElementTree.validate_data": [[126, "elementtree-validate-data"]], "GroupNode": [[127, "groupnode"]], "GroupNode.ToString": [[128, "groupnode-tostring"]], "GroupNode.__init__": [[129, "groupnode-init"]], "GroupNode.add": [[130, "groupnode-add"]], "GroupNode.add_element": [[131, "groupnode-add-element"]], "GroupNode.add_group": [[132, "groupnode-add-group"]], "GroupNode.copy": [[133, "groupnode-copy"]], "GroupNode.from_json": [[134, "groupnode-from-json"]], "GroupNode.from_jsonstring": [[135, "groupnode-from-jsonstring"]], "GroupNode.remove": [[136, "groupnode-remove"]], "GroupNode.sha256": [[137, "groupnode-sha256"]], "GroupNode.to_json": [[138, "groupnode-to-json"]], "GroupNode.to_jsonstring": [[139, "groupnode-to-jsonstring"]], "GroupNode.traverse": [[140, "groupnode-traverse"]], "GroupNode.validate_data": [[141, "groupnode-validate-data"]], "Model": [[142, "model"]], "Model.ToString": [[143, "model-tostring"]], "Model.__init__": [[144, "model-init"]], "Model.add_element": [[145, "model-add-element"]], "Model.add_elements": [[146, "model-add-elements"]], "Model.add_group": [[147, "model-add-group"]], "Model.add_interaction": [[148, "model-add-interaction"]], "Model.copy": [[149, "model-copy"]], "Model.from_json": [[150, "model-from-json"]], "Model.from_jsonstring": [[151, "model-from-jsonstring"]], "Model.get_by_name": [[152, "model-get-by-name"]], "Model.get_by_names": [[153, "model-get-by-names"]], "Model.get_by_type": [[154, "model-get-by-type"]], "Model.get_connected_elements": [[155, "model-get-connected-elements"]], "Model.print": [[156, "model-print"]], "Model.print_elements": [[157, "model-print-elements"]], "Model.print_interactions": [[158, "model-print-interactions"]], "Model.sha256": [[159, "model-sha256"]], "Model.to_json": [[160, "model-to-json"]], "Model.to_jsonstring": [[161, "model-to-jsonstring"]], "Model.to_nodes_and_neighbors": [[162, "model-to-nodes-and-neighbors"]], "Model.validate_data": [[163, "model-validate-data"]], "Development Guide": [[164, "development-guide"]], "Environment": [[164, "environment"]], "Build": [[164, "build"]], "Examples": [[165, "examples"]], "Elements: Beam": [[166, "elements-beam"]], "Elements: Block": [[167, "elements-block"]], "Elements: Interface": [[168, "elements-interface"]], "Elements: Plate": [[169, "elements-plate"]], "Model Beams": [[170, "model-beams"]], "Model Form Finding": [[171, "model-form-finding"]], "Model Masonry": [[172, "model-masonry"]], "Model Plates": [[173, "model-plates"]], "Model Robots": [[174, "model-robots"]], "COMPAS Model": [[175, "compas-model"]], "Table of Contents": [[175, "table-of-contents"]], "Indices and tables": [[175, "indices-and-tables"]], "Installation": [[176, "installation"]], "Stable": [[176, "stable"]], "Development": [[176, "development"]], "License": [[177, "license"]], "Tutorial": [[178, "tutorial"]], "Other Types of Elements": [[178, "other-types-of-elements"]], "Create Model": [[178, "create-model"]], "Add Connectivity": [[178, "add-connectivity"]], "Add Hierarchy": [[178, "add-hierarchy"]]}, "indexentries": {"beam (class in compas_model.elements)": [[4, "compas_model.elements.Beam"]], "tostring() (compas_model.elements.beam method)": [[5, "compas_model.elements.Beam.ToString"]], "__init__() (compas_model.elements.beam method)": [[6, "compas_model.elements.Beam.__init__"]], "compute_aabb() (compas_model.elements.beam method)": [[7, "compas_model.elements.Beam.compute_aabb"]], "compute_collision_mesh() (compas_model.elements.beam method)": [[8, "compas_model.elements.Beam.compute_collision_mesh"]], "compute_face_polygons() (compas_model.elements.beam method)": [[9, "compas_model.elements.Beam.compute_face_polygons"]], "compute_obb() (compas_model.elements.beam method)": [[10, "compas_model.elements.Beam.compute_obb"]], "copy() (compas_model.elements.beam method)": [[11, "compas_model.elements.Beam.copy"]], "from_json() (compas_model.elements.beam class method)": [[12, "compas_model.elements.Beam.from_json"]], "from_jsonstring() (compas_model.elements.beam class method)": [[13, "compas_model.elements.Beam.from_jsonstring"]], "from_line() (compas_model.elements.beam class method)": [[14, "compas_model.elements.Beam.from_line"]], "sha256() (compas_model.elements.beam method)": [[15, "compas_model.elements.Beam.sha256"]], "to_json() (compas_model.elements.beam method)": [[16, "compas_model.elements.Beam.to_json"]], "to_jsonstring() (compas_model.elements.beam method)": [[17, "compas_model.elements.Beam.to_jsonstring"]], "transform() (compas_model.elements.beam method)": [[18, "compas_model.elements.Beam.transform"]], "transformed() (compas_model.elements.beam method)": [[19, "compas_model.elements.Beam.transformed"]], "validate_data() (compas_model.elements.beam class method)": [[20, "compas_model.elements.Beam.validate_data"]], "block (class in compas_model.elements)": [[21, "compas_model.elements.Block"]], "tostring() (compas_model.elements.block method)": [[22, "compas_model.elements.Block.ToString"]], "__init__() (compas_model.elements.block method)": [[23, "compas_model.elements.Block.__init__"]], "compute_aabb() (compas_model.elements.block method)": [[24, "compas_model.elements.Block.compute_aabb"]], "compute_collision_mesh() (compas_model.elements.block method)": [[25, "compas_model.elements.Block.compute_collision_mesh"]], "compute_obb() (compas_model.elements.block method)": [[26, "compas_model.elements.Block.compute_obb"]], "copy() (compas_model.elements.block method)": [[27, "compas_model.elements.Block.copy"]], "from_json() (compas_model.elements.block class method)": [[28, "compas_model.elements.Block.from_json"]], "from_jsonstring() (compas_model.elements.block class method)": [[29, "compas_model.elements.Block.from_jsonstring"]], "sha256() (compas_model.elements.block method)": [[30, "compas_model.elements.Block.sha256"]], "to_json() (compas_model.elements.block method)": [[31, "compas_model.elements.Block.to_json"]], "to_jsonstring() (compas_model.elements.block method)": [[32, "compas_model.elements.Block.to_jsonstring"]], "transform() (compas_model.elements.block method)": [[33, "compas_model.elements.Block.transform"]], "transformed() (compas_model.elements.block method)": [[34, "compas_model.elements.Block.transformed"]], "validate_data() (compas_model.elements.block class method)": [[35, "compas_model.elements.Block.validate_data"]], "element (class in compas_model.elements)": [[36, "compas_model.elements.Element"]], "tostring() (compas_model.elements.element method)": [[37, "compas_model.elements.Element.ToString"]], "__init__() (compas_model.elements.element method)": [[38, "compas_model.elements.Element.__init__"]], "compute_aabb() (compas_model.elements.element method)": [[39, "compas_model.elements.Element.compute_aabb"]], "compute_collision_mesh() (compas_model.elements.element method)": [[40, "compas_model.elements.Element.compute_collision_mesh"]], "compute_obb() (compas_model.elements.element method)": [[41, "compas_model.elements.Element.compute_obb"]], "copy() (compas_model.elements.element method)": [[42, "compas_model.elements.Element.copy"]], "from_json() (compas_model.elements.element class method)": [[43, "compas_model.elements.Element.from_json"]], "from_jsonstring() (compas_model.elements.element class method)": [[44, "compas_model.elements.Element.from_jsonstring"]], "sha256() (compas_model.elements.element method)": [[45, "compas_model.elements.Element.sha256"]], "to_json() (compas_model.elements.element method)": [[46, "compas_model.elements.Element.to_json"]], "to_jsonstring() (compas_model.elements.element method)": [[47, "compas_model.elements.Element.to_jsonstring"]], "transform() (compas_model.elements.element method)": [[48, "compas_model.elements.Element.transform"]], "transformed() (compas_model.elements.element method)": [[49, "compas_model.elements.Element.transformed"]], "validate_data() (compas_model.elements.element class method)": [[50, "compas_model.elements.Element.validate_data"]], "interface (class in compas_model.elements)": [[51, "compas_model.elements.Interface"]], "tostring() (compas_model.elements.interface method)": [[52, "compas_model.elements.Interface.ToString"]], "__init__() (compas_model.elements.interface method)": [[53, "compas_model.elements.Interface.__init__"]], "compute_aabb() (compas_model.elements.interface method)": [[54, "compas_model.elements.Interface.compute_aabb"]], "compute_collision_mesh() (compas_model.elements.interface method)": [[55, "compas_model.elements.Interface.compute_collision_mesh"]], "compute_obb() (compas_model.elements.interface method)": [[56, "compas_model.elements.Interface.compute_obb"]], "copy() (compas_model.elements.interface method)": [[57, "compas_model.elements.Interface.copy"]], "from_json() (compas_model.elements.interface class method)": [[58, "compas_model.elements.Interface.from_json"]], "from_jsonstring() (compas_model.elements.interface class method)": [[59, "compas_model.elements.Interface.from_jsonstring"]], "sha256() (compas_model.elements.interface method)": [[60, "compas_model.elements.Interface.sha256"]], "to_json() (compas_model.elements.interface method)": [[61, "compas_model.elements.Interface.to_json"]], "to_jsonstring() (compas_model.elements.interface method)": [[62, "compas_model.elements.Interface.to_jsonstring"]], "transform() (compas_model.elements.interface method)": [[63, "compas_model.elements.Interface.transform"]], "transformed() (compas_model.elements.interface method)": [[64, "compas_model.elements.Interface.transformed"]], "validate_data() (compas_model.elements.interface class method)": [[65, "compas_model.elements.Interface.validate_data"]], "plate (class in compas_model.elements)": [[66, "compas_model.elements.Plate"]], "tostring() (compas_model.elements.plate method)": [[67, "compas_model.elements.Plate.ToString"]], "__init__() (compas_model.elements.plate method)": [[68, "compas_model.elements.Plate.__init__"]], "compute_aabb() (compas_model.elements.plate method)": [[69, "compas_model.elements.Plate.compute_aabb"]], "compute_collision_mesh() (compas_model.elements.plate method)": [[70, "compas_model.elements.Plate.compute_collision_mesh"]], "compute_loft() (compas_model.elements.plate method)": [[71, "compas_model.elements.Plate.compute_loft"]], "compute_obb() (compas_model.elements.plate method)": [[72, "compas_model.elements.Plate.compute_obb"]], "copy() (compas_model.elements.plate method)": [[73, "compas_model.elements.Plate.copy"]], "from_json() (compas_model.elements.plate class method)": [[74, "compas_model.elements.Plate.from_json"]], "from_jsonstring() (compas_model.elements.plate class method)": [[75, "compas_model.elements.Plate.from_jsonstring"]], "from_two_polygons() (compas_model.elements.plate class method)": [[76, "compas_model.elements.Plate.from_two_polygons"]], "get_average_frame() (compas_model.elements.plate static method)": [[77, "compas_model.elements.Plate.get_average_frame"]], "mesh_from_loft() (compas_model.elements.plate static method)": [[78, "compas_model.elements.Plate.mesh_from_loft"]], "sha256() (compas_model.elements.plate method)": [[79, "compas_model.elements.Plate.sha256"]], "to_json() (compas_model.elements.plate method)": [[80, "compas_model.elements.Plate.to_json"]], "to_jsonstring() (compas_model.elements.plate method)": [[81, "compas_model.elements.Plate.to_jsonstring"]], "transform() (compas_model.elements.plate method)": [[82, "compas_model.elements.Plate.transform"]], "transformed() (compas_model.elements.plate method)": [[83, "compas_model.elements.Plate.transformed"]], "validate_data() (compas_model.elements.plate class method)": [[84, "compas_model.elements.Plate.validate_data"]], "elementnode (class in compas_model.model)": [[85, "compas_model.model.ElementNode"]], "tostring() (compas_model.model.elementnode method)": [[86, "compas_model.model.ElementNode.ToString"]], "__init__() (compas_model.model.elementnode method)": [[87, "compas_model.model.ElementNode.__init__"]], "add() (compas_model.model.elementnode method)": [[88, "compas_model.model.ElementNode.add"]], "copy() (compas_model.model.elementnode method)": [[89, "compas_model.model.ElementNode.copy"]], "from_json() (compas_model.model.elementnode class method)": [[90, "compas_model.model.ElementNode.from_json"]], "from_jsonstring() (compas_model.model.elementnode class method)": [[91, "compas_model.model.ElementNode.from_jsonstring"]], "remove() (compas_model.model.elementnode method)": [[92, "compas_model.model.ElementNode.remove"]], "sha256() (compas_model.model.elementnode method)": [[93, "compas_model.model.ElementNode.sha256"]], "to_json() (compas_model.model.elementnode method)": [[94, "compas_model.model.ElementNode.to_json"]], "to_jsonstring() (compas_model.model.elementnode method)": [[95, "compas_model.model.ElementNode.to_jsonstring"]], "traverse() (compas_model.model.elementnode method)": [[96, "compas_model.model.ElementNode.traverse"]], "validate_data() (compas_model.model.elementnode class method)": [[97, "compas_model.model.ElementNode.validate_data"]], "elementtree (class in compas_model.model)": [[98, "compas_model.model.ElementTree"]], "tostring() (compas_model.model.elementtree method)": [[99, "compas_model.model.ElementTree.ToString"]], "__init__() (compas_model.model.elementtree method)": [[100, "compas_model.model.ElementTree.__init__"]], "add() (compas_model.model.elementtree method)": [[101, "compas_model.model.ElementTree.add"]], "add_element() (compas_model.model.elementtree method)": [[102, "compas_model.model.ElementTree.add_element"]], "add_group() (compas_model.model.elementtree method)": [[103, "compas_model.model.ElementTree.add_group"]], "copy() (compas_model.model.elementtree method)": [[104, "compas_model.model.ElementTree.copy"]], "from_json() (compas_model.model.elementtree class method)": [[105, "compas_model.model.ElementTree.from_json"]], "from_jsonstring() (compas_model.model.elementtree class method)": [[106, "compas_model.model.ElementTree.from_jsonstring"]], "get_node_by_name() (compas_model.model.elementtree method)": [[107, "compas_model.model.ElementTree.get_node_by_name"]], "get_nodes_by_name() (compas_model.model.elementtree method)": [[108, "compas_model.model.ElementTree.get_nodes_by_name"]], "print() (compas_model.model.elementtree method)": [[109, "compas_model.model.ElementTree.print"]], "print_hierarchy() (compas_model.model.elementtree method)": [[110, "compas_model.model.ElementTree.print_hierarchy"]], "remove() (compas_model.model.elementtree method)": [[111, "compas_model.model.ElementTree.remove"]], "rotate() (compas_model.model.elementtree method)": [[112, "compas_model.model.ElementTree.rotate"]], "rotated() (compas_model.model.elementtree method)": [[113, "compas_model.model.ElementTree.rotated"]], "scale() (compas_model.model.elementtree method)": [[114, "compas_model.model.ElementTree.scale"]], "scaled() (compas_model.model.elementtree method)": [[115, "compas_model.model.ElementTree.scaled"]], "sha256() (compas_model.model.elementtree method)": [[116, "compas_model.model.ElementTree.sha256"]], "to_json() (compas_model.model.elementtree method)": [[117, "compas_model.model.ElementTree.to_json"]], "to_jsonstring() (compas_model.model.elementtree method)": [[118, "compas_model.model.ElementTree.to_jsonstring"]], "transform() (compas_model.model.elementtree method)": [[119, "compas_model.model.ElementTree.transform"]], "transform_numpy() (compas_model.model.elementtree method)": [[120, "compas_model.model.ElementTree.transform_numpy"]], "transformed() (compas_model.model.elementtree method)": [[121, "compas_model.model.ElementTree.transformed"]], "transformed_numpy() (compas_model.model.elementtree method)": [[122, "compas_model.model.ElementTree.transformed_numpy"]], "translate() (compas_model.model.elementtree method)": [[123, "compas_model.model.ElementTree.translate"]], "translated() (compas_model.model.elementtree method)": [[124, "compas_model.model.ElementTree.translated"]], "traverse() (compas_model.model.elementtree method)": [[125, "compas_model.model.ElementTree.traverse"]], "validate_data() (compas_model.model.elementtree class method)": [[126, "compas_model.model.ElementTree.validate_data"]], "groupnode (class in compas_model.model)": [[127, "compas_model.model.GroupNode"]], "tostring() (compas_model.model.groupnode method)": [[128, "compas_model.model.GroupNode.ToString"]], "__init__() (compas_model.model.groupnode method)": [[129, "compas_model.model.GroupNode.__init__"]], "add() (compas_model.model.groupnode method)": [[130, "compas_model.model.GroupNode.add"]], "add_element() (compas_model.model.groupnode method)": [[131, "compas_model.model.GroupNode.add_element"]], "add_group() (compas_model.model.groupnode method)": [[132, "compas_model.model.GroupNode.add_group"]], "copy() (compas_model.model.groupnode method)": [[133, "compas_model.model.GroupNode.copy"]], "from_json() (compas_model.model.groupnode class method)": [[134, "compas_model.model.GroupNode.from_json"]], "from_jsonstring() (compas_model.model.groupnode class method)": [[135, "compas_model.model.GroupNode.from_jsonstring"]], "remove() (compas_model.model.groupnode method)": [[136, "compas_model.model.GroupNode.remove"]], "sha256() (compas_model.model.groupnode method)": [[137, "compas_model.model.GroupNode.sha256"]], "to_json() (compas_model.model.groupnode method)": [[138, "compas_model.model.GroupNode.to_json"]], "to_jsonstring() (compas_model.model.groupnode method)": [[139, "compas_model.model.GroupNode.to_jsonstring"]], "traverse() (compas_model.model.groupnode method)": [[140, "compas_model.model.GroupNode.traverse"]], "validate_data() (compas_model.model.groupnode class method)": [[141, "compas_model.model.GroupNode.validate_data"]], "model (class in compas_model.model)": [[142, "compas_model.model.Model"]], "tostring() (compas_model.model.model method)": [[143, "compas_model.model.Model.ToString"]], "__init__() (compas_model.model.model method)": [[144, "compas_model.model.Model.__init__"]], "add_element() (compas_model.model.model method)": [[145, "compas_model.model.Model.add_element"]], "add_elements() (compas_model.model.model method)": [[146, "compas_model.model.Model.add_elements"]], "add_group() (compas_model.model.model method)": [[147, "compas_model.model.Model.add_group"]], "add_interaction() (compas_model.model.model method)": [[148, "compas_model.model.Model.add_interaction"]], "copy() (compas_model.model.model method)": [[149, "compas_model.model.Model.copy"]], "from_json() (compas_model.model.model class method)": [[150, "compas_model.model.Model.from_json"]], "from_jsonstring() (compas_model.model.model class method)": [[151, "compas_model.model.Model.from_jsonstring"]], "get_by_name() (compas_model.model.model method)": [[152, "compas_model.model.Model.get_by_name"]], "get_by_names() (compas_model.model.model method)": [[153, "compas_model.model.Model.get_by_names"]], "get_by_type() (compas_model.model.model method)": [[154, "compas_model.model.Model.get_by_type"]], "get_connected_elements() (compas_model.model.model method)": [[155, "compas_model.model.Model.get_connected_elements"]], "print() (compas_model.model.model method)": [[156, "compas_model.model.Model.print"]], "print_elements() (compas_model.model.model method)": [[157, "compas_model.model.Model.print_elements"]], "print_interactions() (compas_model.model.model method)": [[158, "compas_model.model.Model.print_interactions"]], "sha256() (compas_model.model.model method)": [[159, "compas_model.model.Model.sha256"]], "to_json() (compas_model.model.model method)": [[160, "compas_model.model.Model.to_json"]], "to_jsonstring() (compas_model.model.model method)": [[161, "compas_model.model.Model.to_jsonstring"]], "to_nodes_and_neighbors() (compas_model.model.model method)": [[162, "compas_model.model.Model.to_nodes_and_neighbors"]], "validate_data() (compas_model.model.model class method)": [[163, "compas_model.model.Model.validate_data"]]}})